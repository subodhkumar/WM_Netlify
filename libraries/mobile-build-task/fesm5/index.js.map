{"version":3,"file":"index.js.map","sources":["ng://@wm/mobile/components/widgets/barcode-scanner/barcode-scanner.build.ts","ng://@wm/mobile/components/widgets/camera/camera.build.ts","ng://@wm/mobile/components/widgets/media-list/media-list.build.ts","ng://@wm/mobile/components/widgets/media-list/media-list-item/media-list-item.build.ts","ng://@wm/mobile/components/widgets/mobile-navbar/mobile-navbar.build.ts","ng://@wm/mobile/components/widgets/network-info-toaster/network-info-toaster.build.ts","ng://@wm/mobile/components/widgets/tabbar/tab-bar.build.ts","ng://@wm/mobile/components/widgets/segmented-control/segment-content/segment-content.build.ts","ng://@wm/mobile/components/widgets/segmented-control/segmented-control.build.ts","ng://@wm/mobile/components/widgets/widget-template/widget-template.build.ts","ng://@wm/mobile/components/public_api_buildtask.ts","ng://@wm/mobile/components/index.ts"],"sourcesContent":["import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'button';\n\nregister('wm-barcodescanner', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmBarcodescanner ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'button';\n\nregister('wm-camera', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmCamera ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { Attribute, Element } from '@angular/compiler';\n\nimport { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst wmlistTag = 'wm-list';\nconst tagName = 'div';\nconst dataSetKey = 'dataset';\n\nfunction copyAttribute(from: Element, fromAttrName: string, to: Element, toAttrName: string) {\n    const fromAttr = from.attrs.find( a => a.name === fromAttrName);\n    if (fromAttr) {\n        to.attrs.push(new Attribute(toAttrName, fromAttr.value, fromAttr.sourceSpan, fromAttr.valueSpan));\n    }\n}\n\nregister('wm-media-list', (): IBuildTaskDef => {\n    return {\n        template: (node: Element) => {\n            let bindDataset;\n            const attrObj = node.attrs.find(attr => attr.name === dataSetKey),\n                /**\n                 *  Replacing binded property value with item\n                 * @param children\n                 */\n                replaceBind = (children = []) => {\n                    children.forEach(childNode => {\n                        if (childNode.name) {\n                            // return if the child Element is of wm-list .\n                            if (childNode.name !== wmlistTag) {\n                                childNode.attrs.forEach((attr) => {\n                                    if (attr.value.startsWith(`bind:${bindDataset}.data[$i]`)) {\n                                        attr.value = attr.value.replace(`${bindDataset}.data[$i]`, 'item');\n                                    } else if (attr.value.startsWith(`bind:${bindDataset}`)) {\n                                        attr.value = attr.value.replace(bindDataset, 'item');\n                                    }\n                                });\n                                replaceBind(childNode.children);\n                            }\n                        }\n                    });\n                };\n            if (attrObj && attrObj.value.startsWith('bind:')) {\n                bindDataset = attrObj.value.replace('bind:', '');\n            }\n            if (bindDataset) {\n                replaceBind(node.children);\n            }\n            const template = <Element> node.children\n                .find(e => e instanceof Element && (<Element> e).name === 'wm-media-template');\n            if (template != null) {\n                copyAttribute(template, 'width', node, 'thumbnailwidth');\n                copyAttribute(template, 'height', node, 'thumbnailheight');\n            }\n        },\n        pre: attrs => `<${tagName} wmMediaList ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'ng-template';\n\nregister('wm-media-template', (): IBuildTaskDef => {\n    return {\n        pre: () => `<${tagName} #mediaListTemplate let-item=\"item\" let-index=\"index\">`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'header';\n\nregister('wm-mobile-navbar', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmMobileNavbar ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'div';\n\nregister('wm-network-info-toaster', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmNetworkInfoToaster ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'div';\n\nregister('wm-mobile-tabbar', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmMobileTabbar ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'li';\n\nregister('wm-segment-content', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmSegmentContent partialContainer wmSmoothscroll=${attrs.get('smoothscroll') || 'true'} wm-navigable-element=\"true\" ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'div';\n\nregister('wm-segmented-control', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmSegmentedControl ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","import { getAttrMarkup, IBuildTaskDef, register } from '@wm/transpiler';\n\nconst tagName = 'div';\n\nregister('wm-widget-template', (): IBuildTaskDef => {\n    return {\n        pre: attrs => `<${tagName} wmWidgetTemplate ${getAttrMarkup(attrs)}>`,\n        post: () => `</${tagName}>`\n    };\n});\n\nexport default () => {};\n","export * from './widgets/barcode-scanner/barcode-scanner.build';\nexport * from './widgets/camera/camera.build';\nexport * from './widgets/media-list/media-list.build';\nexport * from './widgets/media-list/media-list-item/media-list-item.build';\nexport * from './widgets/mobile-navbar/mobile-navbar.build';\nexport * from './widgets/network-info-toaster/network-info-toaster.build';\nexport * from './widgets/tabbar/tab-bar.build';\nexport * from './widgets/segmented-control/segment-content/segment-content.build';\nexport * from './widgets/segmented-control/segmented-control.build';\nexport * from './widgets/widget-template/widget-template.build';\n\nexport * from '@wm/transpiler';\n\nexport const initComponentsBuildTask = () => {};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api_buildtask';\n"],"names":["tagName"],"mappings":"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"}
