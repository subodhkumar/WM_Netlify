{"version":3,"file":"index.js.map","sources":["ng://@wm/transpiler/build.ts"],"sourcesContent":["import {\n    HtmlParser,\n    Element,\n    Text,\n    Comment,\n    getHtmlTagDefinition\n} from '@angular/compiler';\ndeclare const _;\n\nconst CSS_REGEX = {\n    COMMENTS_FORMAT : /\\/\\*((?!\\*\\/).|\\n)+\\*\\//g,\n    SELECTOR_FORMAT : /[^\\{\\}]*\\{/gi,\n    SELECTOR_EXCLUDE_FORMAT : /(@keyframes|@media|@font-face|@comment[0-9]+|from|to|[0-9]+%)\\b/i\n};\n\nconst isString = v => typeof v === 'string';\n\ninterface IProviderInfo {\n    nodeName: string;\n    provide: Map<string, any>;\n}\n\nconst OVERRIDES = {\n    'accessroles': '*accessroles',\n    'ng-if': '*ngIf',\n    'showindevice': 'showInDevice',\n    'ng-class': '[ngClass]',\n    'data-ng-class': '[ngClass]',\n    'data-ng-src': 'src',\n    'ng-src': 'src',\n    'data-ng-href': 'href',\n    'ng-href': 'href',\n    'ng-disabled': 'disabled',\n    'data-ng-disabled': 'disabled',\n    'ng-model': '[ngModelOptions]=\"{standalone: true}\" [(ngModel)]'\n};\n\nconst selfClosingTags = new Set(['img']);\n\nexport const getBoundToExpr = (value: string) => {\n    if (!value) {\n        return null;\n    }\n\n    value = value.trim();\n    if (value.startsWith('bind:')) {\n        return value.substr(5);\n    }\n};\n\nconst quoteAttr = v => {\n    return ('' + v) /* Forces the conversion to string. */\n        .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n};\n\nconst registry = new Map<string, any>();\nconst htmlParser = new HtmlParser();\nconst ignoreComments = true;\n\nconst empty = () => '';\n\nconst isEvent = name => name[0] === 'o' && name[1] === 'n' && name[2] === '-';\n\nconst getEventName = key => key.substr(3);\n\nconst processBinding = (attr, expr) => [`${attr.name}.bind`, quoteAttr(expr)];\n\nconst processEvent = attr => {\n    const evtName = getEventName(attr.name);\n    return [`${evtName}.event`, attr.value];\n};\n\n/**\n * Wraps the string with single quotes.\n * @param val\n */\nconst wrapWithApos = (val: string) => {\n    return `&apos;${val.replace(/&apos/g, '&quot').replace(/&quot/g, '\\\\&quot')}&apos;`;\n};\n\nconst processAttr = attr => {\n    const overridden = OVERRIDES[attr.name];\n    const value = attr.valueSpan ? attr.value : undefined;\n\n    if (overridden) {\n        /**\n         * wrap value for accessroles with ''.\n         * since accessroles is a structural directive, it will be transpiled to [accessroles]\n         * hence, the value against it should be a computed string\n         */\n        if (attr.name === 'accessroles') {\n            return [overridden, `'${value}'`];\n        }\n        return [overridden, quoteAttr(value)];\n    }\n\n    if (isEvent(attr.name)) {\n        return processEvent(attr);\n    }\n\n    const boundExpr = getBoundToExpr(attr.value);\n    if (boundExpr) {\n        return processBinding(attr, boundExpr);\n    }\n\n    return [attr.name, quoteAttr(value)];\n};\n\nexport const getDataSource = (dataSetExpr: string): string => {\n    const parts = dataSetExpr.split('.');\n    if (parts[0] === 'Variables' || parts[0] === 'Widgets') {\n        return `${parts[0]}.${parts[1]}`;\n    }\n};\n\nexport const getFormMarkupAttr = attrs => {\n    if (attrs.get('datavalue.bind')) {\n        const onDataValueBinding = getDataSource(attrs.get('datavalue.bind'));\n        attrs.set('datavaluesource.bind', onDataValueBinding);\n    }\n    return getAttrMarkup(attrs);\n};\n\nconst getAttrMap = attrs => {\n    const attrMap = new Map<string, string>();\n    attrs.forEach(attr => {\n        const [attrName, attrValue] = processAttr(attr);\n        attrMap.set(attrName, attrValue);\n    });\n\n    if (attrMap.get('dataset.bind')) {\n        const dataSource = getDataSource(attrMap.get('dataset.bind'));\n        if (dataSource) {\n            attrMap.set('datasource.bind', dataSource);\n        }\n    }\n\n    return attrMap;\n};\n\nexport const getAttrMarkup = (attrs: Map<string, string>) => {\n    let attrMarkup = '';\n    attrs.forEach((v, k) => {\n        attrMarkup += ` ${k}`;\n        if (v) {\n            v = v.trim();\n            if (k === '[ngClass]' && v.startsWith('{')) {\n                v = v.replace(/\"/g, `'`);\n            }\n            if (k === 'show.bind' && attrs.get('deferload') === 'true') {\n                v = v + `\" *lazyLoad=\"${wrapWithApos(v)}`;\n            }\n            attrMarkup += `=\"${v}\"`;\n        }\n    });\n\n    return attrMarkup;\n};\n\nconst getRequiredProviders = (nodeDef: IBuildTaskDef, providers: Array<IProviderInfo>, nodeAttrs) => {\n    if (!nodeDef.requires) {\n        return [];\n    }\n\n    let requires = nodeDef.requires as any;\n\n    if (isString(requires)) {\n        requires = [requires];\n    }\n\n    if (!Array.isArray(requires)) {\n        return [];\n    }\n\n    return requires.map(require => {\n        // for dynamic table assigning parent provide map to the child,\n        for (let i = nodeAttrs.length - 1; i >= 0; i-- ) {\n            if (nodeAttrs[i].name === 'tableName') {\n                return nodeDef[nodeAttrs[i].value];\n            }\n        }\n\n        for (let i = providers.length - 1; i >= 0; i-- ) {\n            if (providers[i].nodeName === require) {\n                return providers[i].provide;\n            }\n        }\n    });\n};\n\nconst DIMENSION_PROPS = ['padding', 'borderwidth', 'margin'];\n\nconst SEPARATOR = ' ', UNSET = 'unset';\n\nconst setDimensionProp = (cssObj, key, nv) => {\n    let cssKey = key, val, top, right, bottom, left, suffix = '';\n\n    function setVal(prop, value) {\n        // if the value is UNSET, reset the existing value\n        if (value === UNSET) {\n            value = '';\n        }\n        cssObj[cssKey + prop + suffix] = value;\n    }\n\n    if (key === 'borderwidth') {\n        suffix =  'width';\n        cssKey = 'border';\n    }\n\n    val = nv;\n\n    if (val.indexOf(UNSET) !== -1) {\n        val = val.split(SEPARATOR);\n\n        top    = val[0];\n        right  = val[1] || val[0];\n        bottom = val[2] || val[0];\n        left   = val[3] || val[1] || val[0];\n\n        setVal('top',    top);\n        setVal('right',  right);\n        setVal('bottom', bottom);\n        setVal('left',   left);\n    } else {\n        if (key === 'borderwidth') {\n            cssKey = 'borderwidth';\n        }\n        cssObj[cssKey] = nv;\n    }\n};\n\nconst processDimensionAttributes = attrMap => {\n    const attrKeys = Array.from(attrMap.keys());\n    attrKeys.forEach((attrKey: any) => {\n        if (DIMENSION_PROPS.includes(attrKey)) {\n            const cssObj = {},\n                attrValue = attrMap.get(attrKey);\n            attrMap.delete(attrKey);\n            setDimensionProp(cssObj, attrKey, attrValue);\n            Object.keys(cssObj).forEach(key => {\n                if (cssObj[key]) {\n                    attrMap.set(key, cssObj[key]);\n                }\n            });\n        }\n    });\n};\n\n// replace <:svg:svg> -> <svg>, <:svg:*> -> <svg:*>\nconst getNodeName = name => name.replace(':svg:svg', 'svg').replace(':svg:', 'svg:');\n\nexport const processNode = (node, providers?: Array<IProviderInfo>) => {\n    const nodeDef = registry.get(node.name);\n\n    let pre, post, template;\n\n    if (nodeDef) {\n        pre = nodeDef.pre || empty;\n        post = nodeDef.post || empty;\n        template = nodeDef.template || empty;\n    }\n\n    let markup = '';\n    let attrMap;\n    let requiredProviders;\n    let shared;\n\n    if (!providers) {\n        providers = [];\n    }\n\n    const isElementType = node instanceof Element;\n\n    if (isElementType) {\n        let provideInfo: IProviderInfo;\n\n        if (nodeDef) {\n            requiredProviders = getRequiredProviders(nodeDef, providers, node.attrs);\n            shared = new Map();\n            template(node, shared, ...requiredProviders);\n        }\n\n        attrMap = getAttrMap(node.attrs);\n        processDimensionAttributes(attrMap);\n\n        const nodeName = getNodeName(node.name);\n\n        if (nodeDef) {\n            markup = (<any>pre)(attrMap, shared, ...requiredProviders);\n            if (nodeDef.provide) {\n                provideInfo = {\n                    nodeName: node.name,\n                    provide: _.isFunction(nodeDef.provide) ? nodeDef.provide(attrMap, shared, ...requiredProviders) : nodeDef.provide\n                };\n                // For table node, assigning parent provide map to the child, as child requires some parent provide attrs.\n                if (node.name === 'wm-table') {\n                    const tableColNodeDefn = registry.get('wm-table-column');\n                    tableColNodeDefn[_.find(node.attrs, (el) => el.name === 'name').value] = provideInfo.provide;\n                    registry.set('wm-table-column', tableColNodeDefn);\n                }\n                providers.push(provideInfo);\n            }\n        } else {\n            markup = `<${nodeName} ${getAttrMarkup(attrMap)}>`;\n        }\n\n        node.children.forEach(child => markup += processNode(child, providers));\n\n        if (nodeDef) {\n            if (provideInfo) {\n                providers.splice(providers.indexOf(provideInfo), 1);\n            }\n            markup += (<any>post)(attrMap, shared, ...requiredProviders);\n        } else {\n            if (node.endSourceSpan && !getHtmlTagDefinition(node.name).isVoid) {\n                markup += `</${nodeName}>`;\n            }\n        }\n    } else if (node instanceof Text) {\n        markup += node.value;\n    } else if (node instanceof Comment) {\n        if (!ignoreComments) {\n            markup += node.value;\n        }\n    }\n\n    return markup;\n};\n\nexport const transpile = (markup: string = '') => {\n    if (!markup.length) {\n        return;\n    }\n\n    const nodes = htmlParser.parse(markup, '');\n\n    if (nodes.errors.length) {\n        return;\n    }\n\n    let output = '';\n    for (const node of nodes.rootNodes) {\n        output += processNode(node);\n    }\n    return output;\n};\n\nexport const register = (nodeName: string, nodeDefFn: () => IBuildTaskDef) => registry.set(nodeName, nodeDefFn());\n\nexport interface IBuildTaskDef {\n    requires?: string | Array<string>;\n    template?: (node: Element | Text | Comment, shared?: Map<any, any>, ...requires: Array<Map<any, any>>) => void;\n    pre: (attrs: Map<string, string>, shared ?: Map<any, any>, ...requires: Array<Map<any, any>>) => string;\n    provide?: (attrs: Map<string, string>, shared ?: Map<any, any>, ...requires: Array<Map<any, any>>) => Map<any, any>;\n    post?: (attrs: Map<string, string>, shared ?: Map<any, any>, ...requires: Array<Map<any, any>>) => string;\n}\n\nexport const scopeComponentStyles = (componentName, componentType, styles = '') => {\n    componentName = componentName.toLowerCase();\n    const comments = {};\n    let commentCount = 0;\n    if (styles.startsWith('/*DISABLE_SCOPING*/')) {\n        return styles;\n    }\n    styles = styles.replace(CSS_REGEX.COMMENTS_FORMAT, comment => {\n        const key = `@comment${commentCount++}{`;\n        comments[key] = comment;\n        return key;\n    });\n    styles = styles.replace(CSS_REGEX.SELECTOR_FORMAT, (selector) => {\n        if (!CSS_REGEX.SELECTOR_EXCLUDE_FORMAT.test(selector)) {\n            const firstNonSpaceCharIndex = selector.match(/\\S/).index;\n            let prefixSpaceCharSeq = '';\n            if (firstNonSpaceCharIndex > 0) {\n                prefixSpaceCharSeq = selector.substring(0, firstNonSpaceCharIndex);\n                selector = selector.substring(firstNonSpaceCharIndex);\n            }\n            if (!selector.startsWith('/*') && selector.trim().length > 0) {\n                const spaceIndex = selector.indexOf(' ');\n                if (selector.startsWith('.wm-app')) {\n                    if (spaceIndex > 0) {\n                        selector = selector.substring(spaceIndex + 1);\n                    } else {\n                        return selector;\n                    }\n                }\n\n                if (componentType === 0 || componentType === 'PAGE') {\n                    selector = `.wm-app app-page-${componentName} ${selector}`;\n                } else if (componentType === 1 || componentType === 'PREFAB') {\n                    selector = `.wm-app app-prefab-${componentName} ${selector}`;\n                } else if (componentType === 2 || componentType === 'PARTIAL') {\n                    selector = `.wm-app app-partial-${componentName} ${selector}`;\n                }\n            }\n            selector = prefixSpaceCharSeq + selector;\n        }\n        return selector;\n    });\n    for (const key in comments) {\n        styles = styles.replace(key, comments[key]);\n    }\n    return styles;\n};\n\n"],"names":["tslib_1.__values"],"mappings":"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"}
