{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@wm/transpiler/build.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","CSS_REGEX","COMMENTS_FORMAT","SELECTOR_FORMAT","SELECTOR_EXCLUDE_FORMAT","OVERRIDES","accessroles","ng-if","showindevice","ng-class","data-ng-class","data-ng-src","ng-src","data-ng-href","ng-href","ng-disabled","data-ng-disabled","ng-model","getBoundToExpr","trim","startsWith","substr","quoteAttr","v","replace","registry","Map","htmlParser","HtmlParser","empty","processAttr","attr","name","overridden","valueSpan","undefined","expr","boundExpr","getDataSource","dataSetExpr","parts","split","getAttrMarkup","attrs","attrMarkup","forEach","k","get","DIMENSION_PROPS","UNSET","processDimensionAttributes","attrMap","Array","from","keys","attrKey","includes","cssObj_1","attrValue","delete","cssObj","key","nv","val","top","right","bottom","left","cssKey","suffix","setVal","prop","indexOf","setDimensionProp","Object","set","processNode","node","providers","pre","post","template","nodeDef","requiredProviders","shared","markup","Element","provideInfo","nodeAttrs","requires","isArray","map","require","nodeName","provide","getRequiredProviders","apply","_a","attrName","dataSource","getAttrMap","_","isFunction","tableColNodeDefn","find","el","children","child","splice","endSourceSpan","getHtmlTagDefinition","isVoid","Text","onDataValueBinding","nodes","parse","errors","output","_b","__values","tslib_1.__values","rootNodes","_c","nodeDefFn","componentName","componentType","styles","toLowerCase","comments","commentCount","comment","selector","test","firstNonSpaceCharIndex","match","index","prefixSpaceCharSeq","substring","spaceIndex"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    HtmlParser,\n    Element,\n    Text,\n    Comment,\n    getHtmlTagDefinition\n} from '@angular/compiler';\ndeclare const _;\n\nconst CSS_REGEX = {\n    COMMENTS_FORMAT : /\\/\\*((?!\\*\\/).|\\n)+\\*\\//g,\n    SELECTOR_FORMAT : /[^\\{\\}]*\\{/gi,\n    SELECTOR_EXCLUDE_FORMAT : /(@keyframes|@media|@font-face|@comment[0-9]+|from|to|[0-9]+%)\\b/i\n};\n\nconst isString = v => typeof v === 'string';\n\ninterface IProviderInfo {\n    nodeName: string;\n    provide: Map<string, any>;\n}\n\nconst OVERRIDES = {\n    'accessroles': '*accessroles',\n    'ng-if': '*ngIf',\n    'showindevice': 'showInDevice',\n    'ng-class': '[ngClass]',\n    'data-ng-class': '[ngClass]',\n    'data-ng-src': 'src',\n    'ng-src': 'src',\n    'data-ng-href': 'href',\n    'ng-href': 'href',\n    'ng-disabled': 'disabled',\n    'data-ng-disabled': 'disabled',\n    'ng-model': '[ngModelOptions]=\"{standalone: true}\" [(ngModel)]'\n};\n\nconst selfClosingTags = new Set(['img']);\n\nexport const getBoundToExpr = (value: string) => {\n    if (!value) {\n        return null;\n    }\n\n    value = value.trim();\n    if (value.startsWith('bind:')) {\n        return value.substr(5);\n    }\n};\n\nconst quoteAttr = v => {\n    return ('' + v) /* Forces the conversion to string. */\n        .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n};\n\nconst registry = new Map<string, any>();\nconst htmlParser = new HtmlParser();\nconst ignoreComments = true;\n\nconst empty = () => '';\n\nconst isEvent = name => name[0] === 'o' && name[1] === 'n' && name[2] === '-';\n\nconst getEventName = key => key.substr(3);\n\nconst processBinding = (attr, expr) => [`${attr.name}.bind`, quoteAttr(expr)];\n\nconst processEvent = attr => {\n    const evtName = getEventName(attr.name);\n    return [`${evtName}.event`, attr.value];\n};\n\n/**\n * Wraps the string with single quotes.\n * @param val\n */\nconst wrapWithApos = (val: string) => {\n    return `&apos;${val.replace(/&apos/g, '&quot').replace(/&quot/g, '\\\\&quot')}&apos;`;\n};\n\nconst processAttr = attr => {\n    const overridden = OVERRIDES[attr.name];\n    const value = attr.valueSpan ? attr.value : undefined;\n\n    if (overridden) {\n        /**\n         * wrap value for accessroles with ''.\n         * since accessroles is a structural directive, it will be transpiled to [accessroles]\n         * hence, the value against it should be a computed string\n         */\n        if (attr.name === 'accessroles') {\n            return [overridden, `'${value}'`];\n        }\n        return [overridden, quoteAttr(value)];\n    }\n\n    if (isEvent(attr.name)) {\n        return processEvent(attr);\n    }\n\n    const boundExpr = getBoundToExpr(attr.value);\n    if (boundExpr) {\n        return processBinding(attr, boundExpr);\n    }\n\n    return [attr.name, quoteAttr(value)];\n};\n\nexport const getDataSource = (dataSetExpr: string): string => {\n    const parts = dataSetExpr.split('.');\n    if (parts[0] === 'Variables' || parts[0] === 'Widgets') {\n        return `${parts[0]}.${parts[1]}`;\n    }\n};\n\nexport const getFormMarkupAttr = attrs => {\n    if (attrs.get('datavalue.bind')) {\n        const onDataValueBinding = getDataSource(attrs.get('datavalue.bind'));\n        attrs.set('datavaluesource.bind', onDataValueBinding);\n    }\n    return getAttrMarkup(attrs);\n};\n\nconst getAttrMap = attrs => {\n    const attrMap = new Map<string, string>();\n    attrs.forEach(attr => {\n        const [attrName, attrValue] = processAttr(attr);\n        attrMap.set(attrName, attrValue);\n    });\n\n    if (attrMap.get('dataset.bind')) {\n        const dataSource = getDataSource(attrMap.get('dataset.bind'));\n        if (dataSource) {\n            attrMap.set('datasource.bind', dataSource);\n        }\n    }\n\n    return attrMap;\n};\n\nexport const getAttrMarkup = (attrs: Map<string, string>) => {\n    let attrMarkup = '';\n    attrs.forEach((v, k) => {\n        attrMarkup += ` ${k}`;\n        if (v) {\n            v = v.trim();\n            if (k === '[ngClass]' && v.startsWith('{')) {\n                v = v.replace(/\"/g, `'`);\n            }\n            if (k === 'show.bind' && attrs.get('deferload') === 'true') {\n                v = v + `\" *lazyLoad=\"${wrapWithApos(v)}`;\n            }\n            attrMarkup += `=\"${v}\"`;\n        }\n    });\n\n    return attrMarkup;\n};\n\nconst getRequiredProviders = (nodeDef: IBuildTaskDef, providers: Array<IProviderInfo>, nodeAttrs) => {\n    if (!nodeDef.requires) {\n        return [];\n    }\n\n    let requires = nodeDef.requires as any;\n\n    if (isString(requires)) {\n        requires = [requires];\n    }\n\n    if (!Array.isArray(requires)) {\n        return [];\n    }\n\n    return requires.map(require => {\n        // for dynamic table assigning parent provide map to the child,\n        for (let i = nodeAttrs.length - 1; i >= 0; i-- ) {\n            if (nodeAttrs[i].name === 'tableName') {\n                return nodeDef[nodeAttrs[i].value];\n            }\n        }\n\n        for (let i = providers.length - 1; i >= 0; i-- ) {\n            if (providers[i].nodeName === require) {\n                return providers[i].provide;\n            }\n        }\n    });\n};\n\nconst DIMENSION_PROPS = ['padding', 'borderwidth', 'margin'];\n\nconst SEPARATOR = ' ', UNSET = 'unset';\n\nconst setDimensionProp = (cssObj, key, nv) => {\n    let cssKey = key, val, top, right, bottom, left, suffix = '';\n\n    function setVal(prop, value) {\n        // if the value is UNSET, reset the existing value\n        if (value === UNSET) {\n            value = '';\n        }\n        cssObj[cssKey + prop + suffix] = value;\n    }\n\n    if (key === 'borderwidth') {\n        suffix =  'width';\n        cssKey = 'border';\n    }\n\n    val = nv;\n\n    if (val.indexOf(UNSET) !== -1) {\n        val = val.split(SEPARATOR);\n\n        top    = val[0];\n        right  = val[1] || val[0];\n        bottom = val[2] || val[0];\n        left   = val[3] || val[1] || val[0];\n\n        setVal('top',    top);\n        setVal('right',  right);\n        setVal('bottom', bottom);\n        setVal('left',   left);\n    } else {\n        if (key === 'borderwidth') {\n            cssKey = 'borderwidth';\n        }\n        cssObj[cssKey] = nv;\n    }\n};\n\nconst processDimensionAttributes = attrMap => {\n    const attrKeys = Array.from(attrMap.keys());\n    attrKeys.forEach((attrKey: any) => {\n        if (DIMENSION_PROPS.includes(attrKey)) {\n            const cssObj = {},\n                attrValue = attrMap.get(attrKey);\n            attrMap.delete(attrKey);\n            setDimensionProp(cssObj, attrKey, attrValue);\n            Object.keys(cssObj).forEach(key => {\n                if (cssObj[key]) {\n                    attrMap.set(key, cssObj[key]);\n                }\n            });\n        }\n    });\n};\n\n// replace <:svg:svg> -> <svg>, <:svg:*> -> <svg:*>\nconst getNodeName = name => name.replace(':svg:svg', 'svg').replace(':svg:', 'svg:');\n\nexport const processNode = (node, providers?: Array<IProviderInfo>) => {\n    const nodeDef = registry.get(node.name);\n\n    let pre, post, template;\n\n    if (nodeDef) {\n        pre = nodeDef.pre || empty;\n        post = nodeDef.post || empty;\n        template = nodeDef.template || empty;\n    }\n\n    let markup = '';\n    let attrMap;\n    let requiredProviders;\n    let shared;\n\n    if (!providers) {\n        providers = [];\n    }\n\n    const isElementType = node instanceof Element;\n\n    if (isElementType) {\n        let provideInfo: IProviderInfo;\n\n        if (nodeDef) {\n            requiredProviders = getRequiredProviders(nodeDef, providers, node.attrs);\n            shared = new Map();\n            template(node, shared, ...requiredProviders);\n        }\n\n        attrMap = getAttrMap(node.attrs);\n        processDimensionAttributes(attrMap);\n\n        const nodeName = getNodeName(node.name);\n\n        if (nodeDef) {\n            markup = (<any>pre)(attrMap, shared, ...requiredProviders);\n            if (nodeDef.provide) {\n                provideInfo = {\n                    nodeName: node.name,\n                    provide: _.isFunction(nodeDef.provide) ? nodeDef.provide(attrMap, shared, ...requiredProviders) : nodeDef.provide\n                };\n                // For table node, assigning parent provide map to the child, as child requires some parent provide attrs.\n                if (node.name === 'wm-table') {\n                    const tableColNodeDefn = registry.get('wm-table-column');\n                    tableColNodeDefn[_.find(node.attrs, (el) => el.name === 'name').value] = provideInfo.provide;\n                    registry.set('wm-table-column', tableColNodeDefn);\n                }\n                providers.push(provideInfo);\n            }\n        } else {\n            markup = `<${nodeName} ${getAttrMarkup(attrMap)}>`;\n        }\n\n        node.children.forEach(child => markup += processNode(child, providers));\n\n        if (nodeDef) {\n            if (provideInfo) {\n                providers.splice(providers.indexOf(provideInfo), 1);\n            }\n            markup += (<any>post)(attrMap, shared, ...requiredProviders);\n        } else {\n            if (node.endSourceSpan && !getHtmlTagDefinition(node.name).isVoid) {\n                markup += `</${nodeName}>`;\n            }\n        }\n    } else if (node instanceof Text) {\n        markup += node.value;\n    } else if (node instanceof Comment) {\n        if (!ignoreComments) {\n            markup += node.value;\n        }\n    }\n\n    return markup;\n};\n\nexport const transpile = (markup: string = '') => {\n    if (!markup.length) {\n        return;\n    }\n\n    const nodes = htmlParser.parse(markup, '');\n\n    if (nodes.errors.length) {\n        return;\n    }\n\n    let output = '';\n    for (const node of nodes.rootNodes) {\n        output += processNode(node);\n    }\n    return output;\n};\n\nexport const register = (nodeName: string, nodeDefFn: () => IBuildTaskDef) => registry.set(nodeName, nodeDefFn());\n\nexport interface IBuildTaskDef {\n    requires?: string | Array<string>;\n    template?: (node: Element | Text | Comment, shared?: Map<any, any>, ...requires: Array<Map<any, any>>) => void;\n    pre: (attrs: Map<string, string>, shared ?: Map<any, any>, ...requires: Array<Map<any, any>>) => string;\n    provide?: (attrs: Map<string, string>, shared ?: Map<any, any>, ...requires: Array<Map<any, any>>) => Map<any, any>;\n    post?: (attrs: Map<string, string>, shared ?: Map<any, any>, ...requires: Array<Map<any, any>>) => string;\n}\n\nexport const scopeComponentStyles = (componentName, componentType, styles = '') => {\n    componentName = componentName.toLowerCase();\n    const comments = {};\n    let commentCount = 0;\n    if (styles.startsWith('/*DISABLE_SCOPING*/')) {\n        return styles;\n    }\n    styles = styles.replace(CSS_REGEX.COMMENTS_FORMAT, comment => {\n        const key = `@comment${commentCount++}{`;\n        comments[key] = comment;\n        return key;\n    });\n    styles = styles.replace(CSS_REGEX.SELECTOR_FORMAT, (selector) => {\n        if (!CSS_REGEX.SELECTOR_EXCLUDE_FORMAT.test(selector)) {\n            const firstNonSpaceCharIndex = selector.match(/\\S/).index;\n            let prefixSpaceCharSeq = '';\n            if (firstNonSpaceCharIndex > 0) {\n                prefixSpaceCharSeq = selector.substring(0, firstNonSpaceCharIndex);\n                selector = selector.substring(firstNonSpaceCharIndex);\n            }\n            if (!selector.startsWith('/*') && selector.trim().length > 0) {\n                const spaceIndex = selector.indexOf(' ');\n                if (selector.startsWith('.wm-app')) {\n                    if (spaceIndex > 0) {\n                        selector = selector.substring(spaceIndex + 1);\n                    } else {\n                        return selector;\n                    }\n                }\n\n                if (componentType === 0 || componentType === 'PAGE') {\n                    selector = `.wm-app app-page-${componentName} ${selector}`;\n                } else if (componentType === 1 || componentType === 'PREFAB') {\n                    selector = `.wm-app app-prefab-${componentName} ${selector}`;\n                } else if (componentType === 2 || componentType === 'PARTIAL') {\n                    selector = `.wm-app app-partial-${componentName} ${selector}`;\n                }\n            }\n            selector = prefixSpaceCharSeq + selector;\n        }\n        return selector;\n    });\n    for (const key in comments) {\n        styles = styles.replace(key, comments[key]);\n    }\n    return styles;\n};\n\n"]}