import { isDefined } from '@wm/core';
/**
 * Widget Registry
 */
const registryById = new Map();
/**
 * returns the widget by the given widgetId
 */
export const getById = (widgetId) => registryById.get(widgetId);
/**
 * Registers the Widget with the given id and name
 * Makes the Widget available with the viewParent
 * returns unRegister method
 */
export const register = (widget, viewParent, widgetId, name) => {
    let registered = false;
    registryById.set(widgetId, widget);
    if (name) {
        if (isDefined(viewParent.Widgets)) {
            registered = true;
            viewParent.Widgets[name] = widget;
        }
    }
    // Unregister method.
    return () => {
        registryById.delete(widgetId);
        if (registered) {
            viewParent.Widgets[name] = undefined;
        }
    };
};
/**
 * Deregisters the oldname in widgets registry and sets new name
 */
export const renameWidget = (viewParent, widget, nv, ov) => {
    if (!isDefined(viewParent.Widgets)) {
        return;
    }
    if (ov) {
        viewParent.Widgets[ov] = undefined;
    }
    if (nv) {
        viewParent.Widgets[nv] = widget;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXJlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHdtL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJ3aWRnZXRzL2ZyYW1ld29yay93aWRnZXQtcmVnaXN0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVyQzs7R0FFRztBQUNILE1BQU0sWUFBWSxHQUFHLElBQUksR0FBRyxFQUFlLENBQUM7QUFFNUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsQ0FBQyxRQUFnQixFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBR3hFOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFXLEVBQUUsVUFBZSxFQUFFLFFBQWdCLEVBQUUsSUFBYSxFQUFjLEVBQUU7SUFDbEcsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLFlBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLElBQUksSUFBSSxFQUFFO1FBQ04sSUFBSSxTQUFTLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQy9CLFVBQVUsR0FBRyxJQUFJLENBQUM7WUFDbEIsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUM7U0FDckM7S0FDSjtJQUVELHFCQUFxQjtJQUNyQixPQUFPLEdBQUcsRUFBRTtRQUNSLFlBQVksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUIsSUFBSSxVQUFVLEVBQUU7WUFDWixVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLFNBQVMsQ0FBQztTQUN4QztJQUNMLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsVUFBZSxFQUFFLE1BQVcsRUFBRSxFQUFVLEVBQUUsRUFBVyxFQUFFLEVBQUU7SUFDbEYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDaEMsT0FBTztLQUNWO0lBQ0QsSUFBSSxFQUFFLEVBQUU7UUFDSixVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQztLQUN0QztJQUNELElBQUksRUFBRSxFQUFFO1FBQ0osVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUM7S0FDbkM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0RlZmluZWQgfSBmcm9tICdAd20vY29yZSc7XG5cbi8qKlxuICogV2lkZ2V0IFJlZ2lzdHJ5XG4gKi9cbmNvbnN0IHJlZ2lzdHJ5QnlJZCA9IG5ldyBNYXA8c3RyaW5nLCBhbnk+KCk7XG5cbi8qKlxuICogcmV0dXJucyB0aGUgd2lkZ2V0IGJ5IHRoZSBnaXZlbiB3aWRnZXRJZFxuICovXG5leHBvcnQgY29uc3QgZ2V0QnlJZCA9ICh3aWRnZXRJZDogc3RyaW5nKSA9PiByZWdpc3RyeUJ5SWQuZ2V0KHdpZGdldElkKTtcblxuXG4vKipcbiAqIFJlZ2lzdGVycyB0aGUgV2lkZ2V0IHdpdGggdGhlIGdpdmVuIGlkIGFuZCBuYW1lXG4gKiBNYWtlcyB0aGUgV2lkZ2V0IGF2YWlsYWJsZSB3aXRoIHRoZSB2aWV3UGFyZW50XG4gKiByZXR1cm5zIHVuUmVnaXN0ZXIgbWV0aG9kXG4gKi9cbmV4cG9ydCBjb25zdCByZWdpc3RlciA9ICh3aWRnZXQ6IGFueSwgdmlld1BhcmVudDogYW55LCB3aWRnZXRJZDogc3RyaW5nLCBuYW1lPzogc3RyaW5nKTogKCkgPT4gdm9pZCA9PiB7XG4gICAgbGV0IHJlZ2lzdGVyZWQgPSBmYWxzZTtcbiAgICByZWdpc3RyeUJ5SWQuc2V0KHdpZGdldElkLCB3aWRnZXQpO1xuICAgIGlmIChuYW1lKSB7XG4gICAgICAgIGlmIChpc0RlZmluZWQodmlld1BhcmVudC5XaWRnZXRzKSkge1xuICAgICAgICAgICAgcmVnaXN0ZXJlZCA9IHRydWU7XG4gICAgICAgICAgICB2aWV3UGFyZW50LldpZGdldHNbbmFtZV0gPSB3aWRnZXQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVbnJlZ2lzdGVyIG1ldGhvZC5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICByZWdpc3RyeUJ5SWQuZGVsZXRlKHdpZGdldElkKTtcbiAgICAgICAgaWYgKHJlZ2lzdGVyZWQpIHtcbiAgICAgICAgICAgIHZpZXdQYXJlbnQuV2lkZ2V0c1tuYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH07XG59O1xuXG4vKipcbiAqIERlcmVnaXN0ZXJzIHRoZSBvbGRuYW1lIGluIHdpZGdldHMgcmVnaXN0cnkgYW5kIHNldHMgbmV3IG5hbWVcbiAqL1xuZXhwb3J0IGNvbnN0IHJlbmFtZVdpZGdldCA9ICh2aWV3UGFyZW50OiBhbnksIHdpZGdldDogYW55LCBudjogc3RyaW5nLCBvdj86IHN0cmluZykgPT4ge1xuICAgIGlmICghaXNEZWZpbmVkKHZpZXdQYXJlbnQuV2lkZ2V0cykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAob3YpIHtcbiAgICAgICAgdmlld1BhcmVudC5XaWRnZXRzW292XSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKG52KSB7XG4gICAgICAgIHZpZXdQYXJlbnQuV2lkZ2V0c1tudl0gPSB3aWRnZXQ7XG4gICAgfVxufTtcbiJdfQ==