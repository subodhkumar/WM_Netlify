import { isMobileApp } from '@wm/core';
import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '../../framework/widget-props';
const propsMap = new Map([
    ['autocomplete', Object.assign({ value: false }, PROP_BOOLEAN)],
    ['captionalign', Object.assign({ value: 'left' }, PROP_STRING)],
    ['captionposition', Object.assign({ value: 'left' }, PROP_STRING)],
    ['captionsize', PROP_STRING],
    ['captionwidth', Object.assign({ value: 'xs-12 sm-3 md-3 lg-3' }, PROP_STRING)],
    ['class', PROP_STRING],
    ['collapsible', PROP_BOOLEAN],
    ['dataset', PROP_ANY],
    ['datasource', PROP_STRING],
    ['expanded', Object.assign({ value: true }, PROP_BOOLEAN)],
    ['formdatasource', PROP_STRING],
    ['name', PROP_STRING],
    ['show', Object.assign({ value: true }, PROP_BOOLEAN)],
    ['showindevice', Object.assign({ displayType: 'inline-block', value: 'all' }, PROP_STRING)],
    ['subheading', PROP_STRING],
    ['tabindex', Object.assign({ value: 0 }, PROP_NUMBER)],
    ['title', PROP_STRING]
]);
export const registerFormProps = () => {
    if (isMobileApp()) {
        propsMap.set('captionwidth', Object.assign({ value: 'xs-4 sm-4 md-4 lg-4' }, PROP_STRING));
    }
    const formMap = new Map(propsMap);
    formMap.set('action', PROP_STRING);
    formMap.set('defaultmode', Object.assign({ value: 'Edit' }, PROP_STRING));
    formMap.set('metadata', PROP_STRING);
    formMap.set('method', PROP_STRING);
    formMap.set('postmessage', Object.assign({ value: 'Data posted successfully' }, PROP_STRING));
    formMap.set('target', PROP_STRING);
    formMap.set('enctype', PROP_STRING);
    formMap.set('errormessage', Object.assign({ value: 'An error occured. Please try again!' }, PROP_STRING));
    formMap.set('messagelayout', Object.assign({ value: 'Inline' }, PROP_STRING));
    formMap.set('formdata', PROP_STRING);
    formMap.set('novalidate', PROP_BOOLEAN);
    formMap.set('validationtype', Object.assign({ value: 'default' }, PROP_STRING));
    formMap.set('iconclass', PROP_STRING);
    register('wm-form', formMap);
};
export const registerLiveFormProps = () => {
    if (isMobileApp()) {
        propsMap.set('captionwidth', Object.assign({ value: 'xs-4 sm-4 md-4 lg-4' }, PROP_STRING));
    }
    const liveFormMap = new Map(propsMap);
    liveFormMap.set('defaultmode', Object.assign({ value: 'View' }, PROP_STRING));
    liveFormMap.set('formlayout', Object.assign({ value: 'inline' }, PROP_STRING));
    liveFormMap.set('insertmessage', Object.assign({ value: 'Record added successfully' }, PROP_STRING));
    liveFormMap.set('updatemessage', Object.assign({ value: 'Record updated successfully' }, PROP_STRING));
    liveFormMap.set('deletemessage', Object.assign({ value: 'Record deleted successfully' }, PROP_STRING));
    liveFormMap.set('errormessage', Object.assign({ value: 'An error occured. Please try again!' }, PROP_STRING));
    liveFormMap.set('messagelayout', Object.assign({ value: 'Toaster' }, PROP_STRING));
    liveFormMap.set('formdata', PROP_STRING);
    liveFormMap.set('novalidate', PROP_BOOLEAN);
    liveFormMap.set('validationtype', Object.assign({ value: 'default' }, PROP_STRING));
    liveFormMap.set('iconclass', PROP_STRING);
    register('wm-liveform', liveFormMap);
};
export const registerLiveFilterProps = () => {
    if (isMobileApp()) {
        propsMap.set('captionwidth', Object.assign({ value: 'xs-4 sm-4 md-4 lg-4' }, PROP_STRING));
    }
    const liveFilterMap = new Map(propsMap);
    liveFilterMap.set('autoupdate', PROP_BOOLEAN);
    liveFilterMap.set('enableemptyfilter', Object.assign({ value: ' ' }, PROP_STRING));
    liveFilterMap.set('pagesize', Object.assign({ value: 20 }, PROP_NUMBER));
    liveFilterMap.set('iconclass', Object.assign({ value: 'wi wi-filter-list' }, PROP_STRING));
    register('wm-livefilter', liveFilterMap);
};
//# sourceMappingURL=data:application/json;base64,