import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '../../framework/widget-props';
export const checkboxsetProps = new Map([
    ['class', PROP_STRING],
    ['collapsible', PROP_BOOLEAN],
    ['compareby', PROP_STRING],
    ['datafield', PROP_STRING],
    ['dataset', Object.assign({ value: 'Option 1, Option 2, Option 3' }, PROP_ANY)],
    ['datavaluesource', PROP_ANY],
    ['datavalue', PROP_STRING],
    ['dateformat', PROP_STRING],
    ['disabled', PROP_BOOLEAN],
    ['displayexpression', PROP_STRING],
    ['displayfield', PROP_STRING],
    ['displayValue', PROP_STRING],
    ['groupby', PROP_STRING],
    ['itemclass', Object.assign({ value: '' }, PROP_STRING)],
    ['layout', Object.assign({ value: 'stacked' }, PROP_STRING)],
    ['listclass', Object.assign({ value: '' }, PROP_STRING)],
    ['match', PROP_STRING],
    ['name', PROP_STRING],
    ['orderby', PROP_STRING],
    ['readonly', PROP_BOOLEAN],
    ['required', PROP_BOOLEAN],
    ['show', Object.assign({ value: true }, PROP_BOOLEAN)],
    ['showcount', PROP_BOOLEAN],
    ['showindevice', Object.assign({ displayType: 'inline-block', value: 'all' }, PROP_STRING)],
    ['tabindex', Object.assign({ value: 0 }, PROP_NUMBER)],
    ['usekeys', PROP_BOOLEAN]
]);
export const registerProps = () => {
    register('wm-checkboxset', checkboxsetProps);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3hzZXQucHJvcHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad20vY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbIndpZGdldHMvY29tbW9uL2NoZWNrYm94c2V0L2NoZWNrYm94c2V0LnByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFMUcsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxHQUFHLENBQ25DO0lBQ0ksQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDO0lBQ3RCLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQztJQUM3QixDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUM7SUFDMUIsQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDO0lBQzFCLENBQUMsU0FBUyxrQkFBRyxLQUFLLEVBQUUsOEJBQThCLElBQUssUUFBUSxFQUFFO0lBQ2pFLENBQUMsaUJBQWlCLEVBQUUsUUFBUSxDQUFDO0lBQzdCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQztJQUMxQixDQUFDLFlBQVksRUFBRSxXQUFXLENBQUM7SUFDM0IsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDO0lBQzFCLENBQUMsbUJBQW1CLEVBQUUsV0FBVyxDQUFDO0lBQ2xDLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQztJQUM3QixDQUFDLGNBQWMsRUFBRSxXQUFXLENBQUM7SUFDN0IsQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDO0lBQ3hCLENBQUMsV0FBVyxrQkFBRyxLQUFLLEVBQUUsRUFBRSxJQUFLLFdBQVcsRUFBRTtJQUMxQyxDQUFDLFFBQVEsa0JBQUcsS0FBSyxFQUFFLFNBQVMsSUFBSyxXQUFXLEVBQUU7SUFDOUMsQ0FBQyxXQUFXLGtCQUFHLEtBQUssRUFBRSxFQUFFLElBQUssV0FBVyxFQUFFO0lBQzFDLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQztJQUN0QixDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUM7SUFDckIsQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDO0lBQ3hCLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQztJQUMxQixDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUM7SUFDMUIsQ0FBQyxNQUFNLGtCQUFHLEtBQUssRUFBRSxJQUFJLElBQUssWUFBWSxFQUFFO0lBQ3hDLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQztJQUMzQixDQUFDLGNBQWMsa0JBQUcsV0FBVyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsS0FBSyxJQUFLLFdBQVcsRUFBRTtJQUM3RSxDQUFDLFVBQVUsa0JBQUcsS0FBSyxFQUFFLENBQUMsSUFBSyxXQUFXLEVBQUU7SUFDeEMsQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO0NBQzVCLENBQ0osQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxHQUFHLEVBQUU7SUFDOUIsUUFBUSxDQUNKLGdCQUFnQixFQUNoQixnQkFBZ0IsQ0FDbkIsQ0FBQztBQUNOLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBST1BfQU5ZLCBQUk9QX0JPT0xFQU4sIFBST1BfTlVNQkVSLCBQUk9QX1NUUklORywgcmVnaXN0ZXIgfSBmcm9tICcuLi8uLi9mcmFtZXdvcmsvd2lkZ2V0LXByb3BzJztcblxuZXhwb3J0IGNvbnN0IGNoZWNrYm94c2V0UHJvcHMgPSBuZXcgTWFwKFxuICAgIFtcbiAgICAgICAgWydjbGFzcycsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydjb2xsYXBzaWJsZScsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsnY29tcGFyZWJ5JywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ2RhdGFmaWVsZCcsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydkYXRhc2V0Jywge3ZhbHVlOiAnT3B0aW9uIDEsIE9wdGlvbiAyLCBPcHRpb24gMycsIC4uLlBST1BfQU5ZfV0sXG4gICAgICAgIFsnZGF0YXZhbHVlc291cmNlJywgUFJPUF9BTlldLFxuICAgICAgICBbJ2RhdGF2YWx1ZScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydkYXRlZm9ybWF0JywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ2Rpc2FibGVkJywgUFJPUF9CT09MRUFOXSxcbiAgICAgICAgWydkaXNwbGF5ZXhwcmVzc2lvbicsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydkaXNwbGF5ZmllbGQnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnZGlzcGxheVZhbHVlJywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ2dyb3VwYnknLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnaXRlbWNsYXNzJywge3ZhbHVlOiAnJywgLi4uUFJPUF9TVFJJTkd9XSxcbiAgICAgICAgWydsYXlvdXQnLCB7dmFsdWU6ICdzdGFja2VkJywgLi4uUFJPUF9TVFJJTkd9XSxcbiAgICAgICAgWydsaXN0Y2xhc3MnLCB7dmFsdWU6ICcnLCAuLi5QUk9QX1NUUklOR31dLFxuICAgICAgICBbJ21hdGNoJywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ25hbWUnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnb3JkZXJieScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydyZWFkb25seScsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsncmVxdWlyZWQnLCBQUk9QX0JPT0xFQU5dLFxuICAgICAgICBbJ3Nob3cnLCB7dmFsdWU6IHRydWUsIC4uLlBST1BfQk9PTEVBTn1dLFxuICAgICAgICBbJ3Nob3djb3VudCcsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsnc2hvd2luZGV2aWNlJywge2Rpc3BsYXlUeXBlOiAnaW5saW5lLWJsb2NrJywgdmFsdWU6ICdhbGwnLCAuLi5QUk9QX1NUUklOR31dLFxuICAgICAgICBbJ3RhYmluZGV4Jywge3ZhbHVlOiAwLCAuLi5QUk9QX05VTUJFUn1dLFxuICAgICAgICBbJ3VzZWtleXMnLCBQUk9QX0JPT0xFQU5dXG4gICAgXVxuKTtcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyUHJvcHMgPSAoKSA9PiB7XG4gICAgcmVnaXN0ZXIoXG4gICAgICAgICd3bS1jaGVja2JveHNldCcsXG4gICAgICAgIGNoZWNrYm94c2V0UHJvcHNcbiAgICApO1xufTtcbiJdfQ==