import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '../../../framework/widget-props';
export const registerProps = () => {
    register('wm-table-column', new Map([
        ['accessroles', PROP_STRING],
        ['backgroundcolor', PROP_STRING],
        ['binding', PROP_STRING],
        ['caption', PROP_STRING],
        ['checkedvalue', PROP_STRING],
        ['col-class', PROP_STRING],
        ['col-ng-class', PROP_STRING],
        ['currencypattern', PROP_STRING],
        ['customExpression', PROP_BOOLEAN],
        ['datafield', PROP_STRING],
        ['dataoptions', PROP_ANY],
        ['dataset', PROP_ANY],
        ['datasource', PROP_STRING],
        ['datepattern', PROP_STRING],
        ['debouncetime', Object.assign({ value: 250 }, PROP_NUMBER)],
        ['defaultvalue', PROP_STRING],
        ['disabled', PROP_BOOLEAN],
        ['displayfield', PROP_STRING],
        ['displaylabel', PROP_STRING],
        ['editdatepattern', PROP_STRING],
        ['edit-widget-type', PROP_STRING],
        ['editinputtype', PROP_STRING],
        ['exportexpression', PROP_STRING],
        ['filterdataset', PROP_STRING],
        ['filterdatafield', PROP_STRING],
        ['filterdisplayfield', PROP_STRING],
        ['filterdisplaylabel', PROP_STRING],
        ['filterexpressions', Object.assign({ value: '{}' }, PROP_STRING)],
        ['filtersearchkey', PROP_STRING],
        ['filter-on', PROP_STRING],
        ['filteronfilter', PROP_STRING],
        ['filterplaceholder', PROP_STRING],
        ['filterwidget', PROP_STRING],
        ['filterinputtype', PROP_STRING],
        ['formatpattern', PROP_STRING],
        ['fractionsize', PROP_STRING],
        ['generator', PROP_STRING],
        ['limit', PROP_NUMBER],
        ['matchmode', PROP_STRING],
        ['maxchars', PROP_NUMBER],
        ['maxvalue', PROP_NUMBER],
        ['mobiledisplay', Object.assign({ value: true }, PROP_BOOLEAN)],
        ['minvalue', PROP_NUMBER],
        ['pcdisplay', Object.assign({ value: true }, PROP_BOOLEAN)],
        ['period', PROP_BOOLEAN],
        ['placeholder', PROP_STRING],
        ['prefix', PROP_STRING],
        ['primary-key', PROP_BOOLEAN],
        ['readonly', PROP_BOOLEAN],
        ['regexp', PROP_ANY],
        ['related-entity-name', PROP_STRING],
        ['required', PROP_BOOLEAN],
        ['rowactionsposition', PROP_STRING],
        ['searchkey', PROP_STRING],
        ['searchable', Object.assign({ value: true }, PROP_BOOLEAN)],
        ['suffix', PROP_STRING],
        ['show', Object.assign({ value: true }, PROP_BOOLEAN)],
        ['showdropdownon', Object.assign({ value: 'default' }, PROP_STRING)],
        ['sortable', Object.assign({ value: true }, PROP_BOOLEAN)],
        ['textalignment', Object.assign({ value: 'left' }, PROP_STRING)],
        ['textcolor', PROP_STRING],
        ['type', Object.assign({ value: 'string' }, PROP_STRING)],
        ['uncheckedvalue', PROP_STRING],
        ['validationmessage', PROP_STRING],
        ['widget-type', PROP_STRING],
        ['width', PROP_STRING],
    ]));
};
//# sourceMappingURL=data:application/json;base64,