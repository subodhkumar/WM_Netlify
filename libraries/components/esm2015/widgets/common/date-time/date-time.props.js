import { isMobileApp } from '@wm/core';
import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '../../framework/widget-props';
export const dateTimeProps = new Map([
    ['autofocus', PROP_BOOLEAN],
    ['class', PROP_STRING],
    ['datavaluesource', PROP_ANY],
    ['datavalue', PROP_STRING],
    ['datepattern', PROP_STRING],
    ['disabled', PROP_BOOLEAN],
    ['excludedays', PROP_STRING],
    ['excludedates', PROP_STRING],
    ['hint', PROP_STRING],
    ['hourstep', Object.assign({ value: 1 }, PROP_NUMBER)],
    ['maxdate', PROP_STRING],
    ['mindate', PROP_STRING],
    ['minutestep', Object.assign({ value: 15 }, PROP_NUMBER)],
    ['name', PROP_STRING],
    ['outputformat', Object.assign({ value: 'timestamp' }, PROP_STRING)],
    ['placeholder', Object.assign({ value: 'Select date time' }, PROP_STRING)],
    ['readonly', PROP_BOOLEAN],
    ['required', PROP_BOOLEAN],
    ['secondsstep', Object.assign({ value: 1 }, PROP_NUMBER)],
    ['shortcutkey', PROP_STRING],
    ['show', Object.assign({ value: true }, PROP_BOOLEAN)],
    ['showdropdownon', Object.assign({ value: 'default' }, PROP_STRING)],
    ['showbuttonbar', PROP_BOOLEAN],
    ['showindevice', Object.assign({ displayType: 'inline-block', value: 'all' }, PROP_STRING)],
    ['showweeks', PROP_BOOLEAN],
    ['tabindex', Object.assign({ value: 0 }, PROP_NUMBER)],
    ['timestamp', PROP_STRING]
]);
export const registerProps = () => {
    if (isMobileApp()) {
        dateTimeProps.set('datepattern', Object.assign({ value: 'yyyy-MM-ddTHH:mm:ss' }, PROP_STRING));
    }
    register('wm-datetime', dateTimeProps);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10aW1lLnByb3BzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHdtL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJ3aWRnZXRzL2NvbW1vbi9kYXRlLXRpbWUvZGF0ZS10aW1lLnByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFdkMsT0FBTyxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUUxRyxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsSUFBSSxHQUFHLENBQ2hDO0lBQ0ksQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDO0lBQzNCLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQztJQUN0QixDQUFDLGlCQUFpQixFQUFFLFFBQVEsQ0FBQztJQUM3QixDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUM7SUFDMUIsQ0FBQyxhQUFhLEVBQUUsV0FBVyxDQUFDO0lBQzVCLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQztJQUMxQixDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUM7SUFDNUIsQ0FBQyxjQUFjLEVBQUUsV0FBVyxDQUFDO0lBQzdCLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQztJQUNyQixDQUFDLFVBQVUsa0JBQUcsS0FBSyxFQUFFLENBQUMsSUFBSyxXQUFXLEVBQUU7SUFDeEMsQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDO0lBQ3hCLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQztJQUN4QixDQUFDLFlBQVksa0JBQUcsS0FBSyxFQUFFLEVBQUUsSUFBSyxXQUFXLEVBQUU7SUFDM0MsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDO0lBQ3JCLENBQUMsY0FBYyxrQkFBRyxLQUFLLEVBQUUsV0FBVyxJQUFLLFdBQVcsRUFBRTtJQUN0RCxDQUFDLGFBQWEsa0JBQUcsS0FBSyxFQUFFLGtCQUFrQixJQUFLLFdBQVcsRUFBRTtJQUM1RCxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUM7SUFDMUIsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDO0lBQzFCLENBQUMsYUFBYSxrQkFBRyxLQUFLLEVBQUUsQ0FBQyxJQUFLLFdBQVcsRUFBRTtJQUMzQyxDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUM7SUFDNUIsQ0FBQyxNQUFNLGtCQUFHLEtBQUssRUFBRSxJQUFJLElBQUssWUFBWSxFQUFFO0lBQ3hDLENBQUMsZ0JBQWdCLGtCQUFHLEtBQUssRUFBRSxTQUFTLElBQUssV0FBVyxFQUFFO0lBQ3RELENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQztJQUMvQixDQUFDLGNBQWMsa0JBQUcsV0FBVyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsS0FBSyxJQUFLLFdBQVcsRUFBRTtJQUM3RSxDQUFDLFdBQVcsRUFBRSxZQUFZLENBQUM7SUFDM0IsQ0FBQyxVQUFVLGtCQUFHLEtBQUssRUFBRSxDQUFDLElBQUssV0FBVyxFQUFFO0lBQ3hDLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQztDQUM3QixDQUNKLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsR0FBRyxFQUFFO0lBQzlCLElBQUksV0FBVyxFQUFFLEVBQUU7UUFDZixhQUFhLENBQUMsR0FBRyxDQUFDLGFBQWEsa0JBQUcsS0FBSyxFQUFFLHFCQUFxQixJQUFLLFdBQVcsRUFBRSxDQUFDO0tBQ3BGO0lBQ0QsUUFBUSxDQUNKLGFBQWEsRUFDYixhQUFhLENBQ2hCLENBQUM7QUFDTixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc01vYmlsZUFwcCB9IGZyb20gJ0B3bS9jb3JlJztcblxuaW1wb3J0IHsgUFJPUF9BTlksIFBST1BfQk9PTEVBTiwgUFJPUF9OVU1CRVIsIFBST1BfU1RSSU5HLCByZWdpc3RlciB9IGZyb20gJy4uLy4uL2ZyYW1ld29yay93aWRnZXQtcHJvcHMnO1xuXG5leHBvcnQgY29uc3QgZGF0ZVRpbWVQcm9wcyA9IG5ldyBNYXAoXG4gICAgW1xuICAgICAgICBbJ2F1dG9mb2N1cycsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsnY2xhc3MnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnZGF0YXZhbHVlc291cmNlJywgUFJPUF9BTlldLFxuICAgICAgICBbJ2RhdGF2YWx1ZScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydkYXRlcGF0dGVybicsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydkaXNhYmxlZCcsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsnZXhjbHVkZWRheXMnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnZXhjbHVkZWRhdGVzJywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ2hpbnQnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnaG91cnN0ZXAnLCB7dmFsdWU6IDEsIC4uLlBST1BfTlVNQkVSfV0sXG4gICAgICAgIFsnbWF4ZGF0ZScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydtaW5kYXRlJywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ21pbnV0ZXN0ZXAnLCB7dmFsdWU6IDE1LCAuLi5QUk9QX05VTUJFUn1dLFxuICAgICAgICBbJ25hbWUnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnb3V0cHV0Zm9ybWF0Jywge3ZhbHVlOiAndGltZXN0YW1wJywgLi4uUFJPUF9TVFJJTkd9XSxcbiAgICAgICAgWydwbGFjZWhvbGRlcicsIHt2YWx1ZTogJ1NlbGVjdCBkYXRlIHRpbWUnLCAuLi5QUk9QX1NUUklOR31dLFxuICAgICAgICBbJ3JlYWRvbmx5JywgUFJPUF9CT09MRUFOXSxcbiAgICAgICAgWydyZXF1aXJlZCcsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsnc2Vjb25kc3N0ZXAnLCB7dmFsdWU6IDEsIC4uLlBST1BfTlVNQkVSfV0sXG4gICAgICAgIFsnc2hvcnRjdXRrZXknLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnc2hvdycsIHt2YWx1ZTogdHJ1ZSwgLi4uUFJPUF9CT09MRUFOfV0sXG4gICAgICAgIFsnc2hvd2Ryb3Bkb3dub24nLCB7dmFsdWU6ICdkZWZhdWx0JywgLi4uUFJPUF9TVFJJTkd9XSxcbiAgICAgICAgWydzaG93YnV0dG9uYmFyJywgUFJPUF9CT09MRUFOXSxcbiAgICAgICAgWydzaG93aW5kZXZpY2UnLCB7ZGlzcGxheVR5cGU6ICdpbmxpbmUtYmxvY2snLCB2YWx1ZTogJ2FsbCcsIC4uLlBST1BfU1RSSU5HfV0sXG4gICAgICAgIFsnc2hvd3dlZWtzJywgUFJPUF9CT09MRUFOXSxcbiAgICAgICAgWyd0YWJpbmRleCcsIHt2YWx1ZTogMCwgLi4uUFJPUF9OVU1CRVJ9XSxcbiAgICAgICAgWyd0aW1lc3RhbXAnLCBQUk9QX1NUUklOR11cbiAgICBdXG4pO1xuXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJQcm9wcyA9ICgpID0+IHtcbiAgICBpZiAoaXNNb2JpbGVBcHAoKSkge1xuICAgICAgICBkYXRlVGltZVByb3BzLnNldCgnZGF0ZXBhdHRlcm4nLCB7dmFsdWU6ICd5eXl5LU1NLWRkVEhIOm1tOnNzJywgLi4uUFJPUF9TVFJJTkd9KTtcbiAgICB9XG4gICAgcmVnaXN0ZXIoXG4gICAgICAgICd3bS1kYXRldGltZScsXG4gICAgICAgIGRhdGVUaW1lUHJvcHNcbiAgICApO1xufTtcbiJdfQ==