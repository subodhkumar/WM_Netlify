import * as tslib_1 from "tslib";
import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '../../framework/widget-props';
export var searchProps = new Map([
    ['casesensitive', tslib_1.__assign({ value: false }, PROP_BOOLEAN)],
    ['class', PROP_STRING],
    ['datacompletemsg', tslib_1.__assign({ value: 'No more data to load' }, PROP_STRING)],
    ['datafield', tslib_1.__assign({ value: 'All Fields' }, PROP_STRING)],
    ['dataoptions', PROP_ANY],
    ['dataset', PROP_ANY],
    ['datasource', PROP_ANY],
    ['datavalue', PROP_STRING],
    ['datavaluesource', PROP_ANY],
    ['disabled', PROP_BOOLEAN],
    ['displayimagesrc', PROP_STRING],
    ['displaylabel', PROP_STRING],
    ['dropup', PROP_BOOLEAN],
    ['hint', PROP_STRING],
    ['imagewidth', tslib_1.__assign({ value: '16px' }, PROP_STRING)],
    ['limit', PROP_NUMBER],
    ['loadingdatamsg', tslib_1.__assign({ value: 'Loading items...' }, PROP_STRING)],
    ['matchmode', PROP_STRING],
    ['minchars', PROP_NUMBER],
    ['name', PROP_STRING],
    ['navsearchbar', tslib_1.__assign({ value: false }, PROP_BOOLEAN)],
    ['orderby', PROP_STRING],
    ['placeholder', tslib_1.__assign({ value: 'Search' }, PROP_STRING)],
    ['position', PROP_STRING],
    ['query', PROP_STRING],
    ['readonly', PROP_BOOLEAN],
    ['required', PROP_BOOLEAN],
    ['searchkey', PROP_STRING],
    ['searchon', tslib_1.__assign({ value: 'typing' }, PROP_STRING)],
    ['shortcutkey', PROP_STRING],
    ['show', tslib_1.__assign({ value: true }, PROP_BOOLEAN)],
    ['showsearchicon', PROP_BOOLEAN],
    ['tabindex', tslib_1.__assign({ value: 0 }, PROP_NUMBER)],
    ['type', tslib_1.__assign({ value: 'search' }, PROP_STRING)],
    ['debouncetime', tslib_1.__assign({ value: 250 }, PROP_NUMBER)],
    ['width', PROP_STRING]
]);
export var registerProps = function () {
    register('wm-search', searchProps);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLnByb3BzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHdtL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJ3aWRnZXRzL2NvbW1vbi9zZWFyY2gvc2VhcmNoLnByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTFHLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsQ0FDOUI7SUFDSSxDQUFDLGVBQWUscUJBQUcsS0FBSyxFQUFFLEtBQUssSUFBSyxZQUFZLEVBQUU7SUFDbEQsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDO0lBQ3RCLENBQUMsaUJBQWlCLHFCQUFHLEtBQUssRUFBRSxzQkFBc0IsSUFBSyxXQUFXLEVBQUU7SUFDcEUsQ0FBQyxXQUFXLHFCQUFHLEtBQUssRUFBRSxZQUFZLElBQUssV0FBVyxFQUFFO0lBQ3BELENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQztJQUN6QixDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUM7SUFDckIsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDO0lBQ3hCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQztJQUMxQixDQUFDLGlCQUFpQixFQUFFLFFBQVEsQ0FBQztJQUM3QixDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUM7SUFDMUIsQ0FBQyxpQkFBaUIsRUFBRSxXQUFXLENBQUM7SUFDaEMsQ0FBQyxjQUFjLEVBQUUsV0FBVyxDQUFDO0lBQzdCLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQztJQUN4QixDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUM7SUFDckIsQ0FBQyxZQUFZLHFCQUFHLEtBQUssRUFBRSxNQUFNLElBQUssV0FBVyxFQUFFO0lBQy9DLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQztJQUN0QixDQUFDLGdCQUFnQixxQkFBRyxLQUFLLEVBQUUsa0JBQWtCLElBQUssV0FBVyxFQUFFO0lBQy9ELENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQztJQUMxQixDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUM7SUFDekIsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDO0lBQ3JCLENBQUMsY0FBYyxxQkFBRyxLQUFLLEVBQUUsS0FBSyxJQUFLLFlBQVksRUFBRTtJQUNqRCxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUM7SUFDeEIsQ0FBQyxhQUFhLHFCQUFHLEtBQUssRUFBRSxRQUFRLElBQUssV0FBVyxFQUFFO0lBQ2xELENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQztJQUN6QixDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUM7SUFDdEIsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDO0lBQzFCLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQztJQUMxQixDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUM7SUFDMUIsQ0FBQyxVQUFVLHFCQUFHLEtBQUssRUFBRSxRQUFRLElBQUssV0FBVyxFQUFFO0lBQy9DLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQztJQUM1QixDQUFDLE1BQU0scUJBQUcsS0FBSyxFQUFFLElBQUksSUFBSyxZQUFZLEVBQUU7SUFDeEMsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLENBQUM7SUFDaEMsQ0FBQyxVQUFVLHFCQUFHLEtBQUssRUFBRSxDQUFDLElBQUssV0FBVyxFQUFFO0lBQ3hDLENBQUMsTUFBTSxxQkFBRyxLQUFLLEVBQUUsUUFBUSxJQUFLLFdBQVcsRUFBRTtJQUMzQyxDQUFDLGNBQWMscUJBQUcsS0FBSyxFQUFFLEdBQUcsSUFBSyxXQUFXLEVBQUU7SUFDOUMsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDO0NBQ3pCLENBQ0osQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRztJQUN6QixRQUFRLENBQ0osV0FBVyxFQUNYLFdBQVcsQ0FDZCxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUFJPUF9BTlksIFBST1BfQk9PTEVBTiwgUFJPUF9OVU1CRVIsIFBST1BfU1RSSU5HLCByZWdpc3RlciB9IGZyb20gJy4uLy4uL2ZyYW1ld29yay93aWRnZXQtcHJvcHMnO1xuXG5leHBvcnQgY29uc3Qgc2VhcmNoUHJvcHMgPSBuZXcgTWFwKFxuICAgIFtcbiAgICAgICAgWydjYXNlc2Vuc2l0aXZlJywge3ZhbHVlOiBmYWxzZSwgLi4uUFJPUF9CT09MRUFOfV0sXG4gICAgICAgIFsnY2xhc3MnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnZGF0YWNvbXBsZXRlbXNnJywge3ZhbHVlOiAnTm8gbW9yZSBkYXRhIHRvIGxvYWQnLCAuLi5QUk9QX1NUUklOR31dLFxuICAgICAgICBbJ2RhdGFmaWVsZCcsIHt2YWx1ZTogJ0FsbCBGaWVsZHMnLCAuLi5QUk9QX1NUUklOR31dLFxuICAgICAgICBbJ2RhdGFvcHRpb25zJywgUFJPUF9BTlldLFxuICAgICAgICBbJ2RhdGFzZXQnLCBQUk9QX0FOWV0sXG4gICAgICAgIFsnZGF0YXNvdXJjZScsIFBST1BfQU5ZXSxcbiAgICAgICAgWydkYXRhdmFsdWUnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnZGF0YXZhbHVlc291cmNlJywgUFJPUF9BTlldLFxuICAgICAgICBbJ2Rpc2FibGVkJywgUFJPUF9CT09MRUFOXSxcbiAgICAgICAgWydkaXNwbGF5aW1hZ2VzcmMnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnZGlzcGxheWxhYmVsJywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ2Ryb3B1cCcsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsnaGludCcsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydpbWFnZXdpZHRoJywge3ZhbHVlOiAnMTZweCcsIC4uLlBST1BfU1RSSU5HfV0sXG4gICAgICAgIFsnbGltaXQnLCBQUk9QX05VTUJFUl0sXG4gICAgICAgIFsnbG9hZGluZ2RhdGFtc2cnLCB7dmFsdWU6ICdMb2FkaW5nIGl0ZW1zLi4uJywgLi4uUFJPUF9TVFJJTkd9XSxcbiAgICAgICAgWydtYXRjaG1vZGUnLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnbWluY2hhcnMnLCBQUk9QX05VTUJFUl0sXG4gICAgICAgIFsnbmFtZScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWyduYXZzZWFyY2hiYXInLCB7dmFsdWU6IGZhbHNlLCAuLi5QUk9QX0JPT0xFQU59XSxcbiAgICAgICAgWydvcmRlcmJ5JywgUFJPUF9TVFJJTkddLFxuICAgICAgICBbJ3BsYWNlaG9sZGVyJywge3ZhbHVlOiAnU2VhcmNoJywgLi4uUFJPUF9TVFJJTkd9XSxcbiAgICAgICAgWydwb3NpdGlvbicsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydxdWVyeScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydyZWFkb25seScsIFBST1BfQk9PTEVBTl0sXG4gICAgICAgIFsncmVxdWlyZWQnLCBQUk9QX0JPT0xFQU5dLFxuICAgICAgICBbJ3NlYXJjaGtleScsIFBST1BfU1RSSU5HXSxcbiAgICAgICAgWydzZWFyY2hvbicsIHt2YWx1ZTogJ3R5cGluZycsIC4uLlBST1BfU1RSSU5HfV0sXG4gICAgICAgIFsnc2hvcnRjdXRrZXknLCBQUk9QX1NUUklOR10sXG4gICAgICAgIFsnc2hvdycsIHt2YWx1ZTogdHJ1ZSwgLi4uUFJPUF9CT09MRUFOfV0sXG4gICAgICAgIFsnc2hvd3NlYXJjaGljb24nLCBQUk9QX0JPT0xFQU5dLFxuICAgICAgICBbJ3RhYmluZGV4Jywge3ZhbHVlOiAwLCAuLi5QUk9QX05VTUJFUn1dLFxuICAgICAgICBbJ3R5cGUnLCB7dmFsdWU6ICdzZWFyY2gnLCAuLi5QUk9QX1NUUklOR31dLFxuICAgICAgICBbJ2RlYm91bmNldGltZScsIHt2YWx1ZTogMjUwLCAuLi5QUk9QX05VTUJFUn1dLFxuICAgICAgICBbJ3dpZHRoJywgUFJPUF9TVFJJTkddXG4gICAgXVxuKTtcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyUHJvcHMgPSAoKSA9PiB7XG4gICAgcmVnaXN0ZXIoXG4gICAgICAgICd3bS1zZWFyY2gnLFxuICAgICAgICBzZWFyY2hQcm9wc1xuICAgICk7XG59O1xuIl19