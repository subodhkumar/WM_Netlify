import * as tslib_1 from "tslib";
import { isMobileApp } from '@wm/core';
import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '../../framework/widget-props';
var propsMap = new Map([
    ['autocomplete', tslib_1.__assign({ value: false }, PROP_BOOLEAN)],
    ['captionalign', tslib_1.__assign({ value: 'left' }, PROP_STRING)],
    ['captionposition', tslib_1.__assign({ value: 'left' }, PROP_STRING)],
    ['captionsize', PROP_STRING],
    ['captionwidth', tslib_1.__assign({ value: 'xs-12 sm-3 md-3 lg-3' }, PROP_STRING)],
    ['class', PROP_STRING],
    ['collapsible', PROP_BOOLEAN],
    ['dataset', PROP_ANY],
    ['datasource', PROP_STRING],
    ['expanded', tslib_1.__assign({ value: true }, PROP_BOOLEAN)],
    ['formdatasource', PROP_STRING],
    ['name', PROP_STRING],
    ['show', tslib_1.__assign({ value: true }, PROP_BOOLEAN)],
    ['showindevice', tslib_1.__assign({ displayType: 'inline-block', value: 'all' }, PROP_STRING)],
    ['subheading', PROP_STRING],
    ['tabindex', tslib_1.__assign({ value: 0 }, PROP_NUMBER)],
    ['title', PROP_STRING]
]);
export var registerFormProps = function () {
    if (isMobileApp()) {
        propsMap.set('captionwidth', tslib_1.__assign({ value: 'xs-4 sm-4 md-4 lg-4' }, PROP_STRING));
    }
    var formMap = new Map(propsMap);
    formMap.set('action', PROP_STRING);
    formMap.set('defaultmode', tslib_1.__assign({ value: 'Edit' }, PROP_STRING));
    formMap.set('metadata', PROP_STRING);
    formMap.set('method', PROP_STRING);
    formMap.set('postmessage', tslib_1.__assign({ value: 'Data posted successfully' }, PROP_STRING));
    formMap.set('target', PROP_STRING);
    formMap.set('enctype', PROP_STRING);
    formMap.set('errormessage', tslib_1.__assign({ value: 'An error occured. Please try again!' }, PROP_STRING));
    formMap.set('messagelayout', tslib_1.__assign({ value: 'Inline' }, PROP_STRING));
    formMap.set('formdata', PROP_STRING);
    formMap.set('novalidate', PROP_BOOLEAN);
    formMap.set('validationtype', tslib_1.__assign({ value: 'default' }, PROP_STRING));
    formMap.set('iconclass', PROP_STRING);
    register('wm-form', formMap);
};
export var registerLiveFormProps = function () {
    if (isMobileApp()) {
        propsMap.set('captionwidth', tslib_1.__assign({ value: 'xs-4 sm-4 md-4 lg-4' }, PROP_STRING));
    }
    var liveFormMap = new Map(propsMap);
    liveFormMap.set('defaultmode', tslib_1.__assign({ value: 'View' }, PROP_STRING));
    liveFormMap.set('formlayout', tslib_1.__assign({ value: 'inline' }, PROP_STRING));
    liveFormMap.set('insertmessage', tslib_1.__assign({ value: 'Record added successfully' }, PROP_STRING));
    liveFormMap.set('updatemessage', tslib_1.__assign({ value: 'Record updated successfully' }, PROP_STRING));
    liveFormMap.set('deletemessage', tslib_1.__assign({ value: 'Record deleted successfully' }, PROP_STRING));
    liveFormMap.set('errormessage', tslib_1.__assign({ value: 'An error occured. Please try again!' }, PROP_STRING));
    liveFormMap.set('messagelayout', tslib_1.__assign({ value: 'Toaster' }, PROP_STRING));
    liveFormMap.set('formdata', PROP_STRING);
    liveFormMap.set('novalidate', PROP_BOOLEAN);
    liveFormMap.set('validationtype', tslib_1.__assign({ value: 'default' }, PROP_STRING));
    liveFormMap.set('iconclass', PROP_STRING);
    register('wm-liveform', liveFormMap);
};
export var registerLiveFilterProps = function () {
    if (isMobileApp()) {
        propsMap.set('captionwidth', tslib_1.__assign({ value: 'xs-4 sm-4 md-4 lg-4' }, PROP_STRING));
    }
    var liveFilterMap = new Map(propsMap);
    liveFilterMap.set('autoupdate', PROP_BOOLEAN);
    liveFilterMap.set('enableemptyfilter', tslib_1.__assign({ value: ' ' }, PROP_STRING));
    liveFilterMap.set('pagesize', tslib_1.__assign({ value: 20 }, PROP_NUMBER));
    liveFilterMap.set('iconclass', tslib_1.__assign({ value: 'wi wi-filter-list' }, PROP_STRING));
    register('wm-livefilter', liveFilterMap);
};
//# sourceMappingURL=data:application/json;base64,