import { AfterContentInit, AfterViewInit, TemplateRef, Injector, OnInit } from '@angular/core';
import { AppDefaults } from '@wm/core';
import { BaseComponent } from '../../base/base.component';
import { TableComponent } from '../table.component';
import { TableColumnGroupDirective } from '../table-column-group/table-column-group.directive';
export declare class TableColumnDirective extends BaseComponent implements OnInit, AfterContentInit, AfterViewInit {
    private appDefaults;
    table: TableComponent;
    group: TableColumnGroupDirective;
    bindfilterdataset: any;
    binddataset: any;
    static initializeProps: void;
    _filterInstances: any;
    _inlineInstances: any;
    _inlineInstancesNew: any;
    customExprTmpl: any;
    private _propsInitialized;
    private _filterDataSet;
    private _isRowFilter;
    private _isInlineEditable;
    private _isNewEditableRow;
    filterInstance: any;
    inlineInstance: any;
    inlineInstanceNew: any;
    backgroundcolor: any;
    binding: any;
    caption: any;
    dataset: any;
    defaultvalue: any;
    editWidgetType: any;
    filterwidget: any;
    field: any;
    formatpattern: any;
    generator: any;
    limit: any;
    mobiledisplay: any;
    pcdisplay: any;
    readonly: any;
    required: any;
    maxchars: any;
    minvalue: any;
    maxvalue: any;
    regexp: any;
    searchable: any;
    show: any;
    sortable: any;
    textalignment: any;
    textcolor: any;
    type: any;
    width: any;
    datepattern: any;
    editdatepattern: any;
    filterdatafield: any;
    filterdisplayfield: any;
    filterdisplaylabel: any;
    filtersearchkey: any;
    filterplaceholder: any;
    datafield: any;
    displayfield: any;
    displayName: any;
    pcDisplay: any;
    mobileDisplay: any;
    textAlignment: any;
    backgroundColor: any;
    textColor: any;
    primaryKey: any;
    relatedEntityName: any;
    style: any;
    class: any;
    ngclass: any;
    filterOn: any;
    filterControl: any;
    isDataSetBound: any;
    isFilterDataSetBound: any;
    private _dataoptions;
    private _datasource;
    private _debounceSetUpValidators;
    private _debounceSetUpValidatorsNew;
    filterTemplateRef: TemplateRef<any>;
    constructor(inj: Injector, appDefaults: AppDefaults, table: TableComponent, group: TableColumnGroupDirective, bindfilterdataset: any, binddataset: any);
    dataoptions: any;
    datasource: any;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    addFormControl(suffix?: string): void;
    getFormControl(suffix?: string): import("@angular/forms").AbstractControl;
    setUpControls(): void;
    resetFilter(): void;
    onFilterValueChange(val: any): void;
    onValueChange(val: any): void;
    loadFilterData(): void;
    loadInlineWidgetData(): void;
    onDataSourceChange(): void;
    setFilterWidgetDataSet(): void;
    setUpFilterWidget(): void;
    setUpValidators(widget: any): void;
    setInlineWidgetProp(widget: any, prop: any, nv: any): void;
    setUpInlineWidget(widget: any): void;
    getStyleDef(): string;
    populateFieldDef(): void;
    onPropertyChange(key: any, nv: any, ov: any): void;
    setProperty(property: any, nv: any): void;
}
