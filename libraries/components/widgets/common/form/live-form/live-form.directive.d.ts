import { AbstractDialogService } from '@wm/core';
import { ToDatePipe } from '../../../../pipes/custom-pipes';
import { LiveTableComponent } from '../../live-table/live-table.component';
export declare class LiveFormDirective {
    private form;
    datePipe: ToDatePipe;
    private dialogService;
    static initializeProps: void;
    private _debouncedSavePrevDataValues;
    constructor(form: any, liveTable: LiveTableComponent, datePipe: ToDatePipe, dialogService: AbstractDialogService, formlayout: string);
    onDataSourceChange(): void;
    onFieldDefaultValueChange(field: any, nv: any): void;
    onFieldValueChange(field: any, nv: any): void;
    getBlobURL(dataObj: any, key: any, value: any): string;
    resetFileUploadWidget(field: any, skipValueSet?: any): void;
    setDefaultValues(): void;
    setFormData(dataObj: any): void;
    onDataSourceUpdate(response: any, newForm: any, updateMode: any): void;
    savePrevformFields(): void;
    getPrevformFields(): void;
    getDataObject(): any;
    constructDataObject(isPreviousData?: any): any;
    setPrimaryKey(fieldName: any): void;
    findOperationType(): any;
    getPrevDataValues(): any;
    savePrevDataValues(): void;
    emptyDataModel(): void;
    clearData(): void;
    setReadonlyFields(): void;
    edit(): void;
    reset(): void;
    closeDialog(): void;
    cancel(): void;
    new(): void;
    delete(callBackFn: any): void;
    saveAndNew(): void;
    saveAndView(): void;
    submitForm($event: any): void;
    save(event?: any, updateMode?: any, newForm?: any): void;
}
