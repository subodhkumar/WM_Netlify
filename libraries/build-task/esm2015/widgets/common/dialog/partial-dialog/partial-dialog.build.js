import { getAttrMarkup, register } from '@wm/transpiler';
const tagName = 'div';
register('wm-pagedialog', () => {
    return {
        pre: (attrs, shared) => {
            const content = attrs.get('content');
            attrs.delete('content');
            const boundContent = attrs.get('content.bind');
            attrs.delete('content.bind');
            const onLoad = attrs.get('load.event');
            attrs.delete('load.event');
            let onLoadEvtMarkup = '';
            let contentMarkup = '';
            if (onLoad) {
                onLoadEvtMarkup = `load.event="${onLoad}"`;
            }
            if (boundContent) {
                contentMarkup = `content.bind="${boundContent}"`;
            }
            else if (content) {
                contentMarkup = `content="${content}"`;
            }
            let containerMarkup = '';
            if (contentMarkup) {
                shared.set('hasPartialContent', true);
                containerMarkup += `<ng-template><div wmContainer partialContainer ${contentMarkup} width="100%" height="100%" ${onLoadEvtMarkup}>`;
            }
            return `<${tagName} wmPartialDialog ${getAttrMarkup(attrs)}>${containerMarkup}`;
        },
        post: (attrs, shared) => {
            let preContent = '';
            if (shared.get('hasPartialContent')) {
                preContent = `</div></ng-template>`;
            }
            return `${preContent}</${tagName}>`;
        }
    };
});
export default () => { };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydGlhbC1kaWFsb2cuYnVpbGQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad20vY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbIndpZGdldHMvY29tbW9uL2RpYWxvZy9wYXJ0aWFsLWRpYWxvZy9wYXJ0aWFsLWRpYWxvZy5idWlsZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFpQixRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4RSxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUM7QUFFdEIsUUFBUSxDQUFDLGVBQWUsRUFBRSxHQUFrQixFQUFFO0lBQzFDLE9BQU87UUFDSCxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDbkIsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNyQyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRXhCLE1BQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUU3QixNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3ZDLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7WUFFM0IsSUFBSSxlQUFlLEdBQUcsRUFBRSxDQUFDO1lBQ3pCLElBQUksYUFBYSxHQUFHLEVBQUUsQ0FBQztZQUV2QixJQUFJLE1BQU0sRUFBRTtnQkFDUixlQUFlLEdBQUcsZUFBZSxNQUFNLEdBQUcsQ0FBQzthQUM5QztZQUVELElBQUksWUFBWSxFQUFFO2dCQUNkLGFBQWEsR0FBRyxpQkFBaUIsWUFBWSxHQUFHLENBQUM7YUFDcEQ7aUJBQU0sSUFBSSxPQUFPLEVBQUU7Z0JBQ2hCLGFBQWEsR0FBRyxZQUFZLE9BQU8sR0FBRyxDQUFDO2FBQzFDO1lBRUQsSUFBSSxlQUFlLEdBQUcsRUFBRSxDQUFDO1lBQ3pCLElBQUksYUFBYSxFQUFFO2dCQUVmLE1BQU0sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3RDLGVBQWUsSUFBSSxrREFBa0QsYUFBYSwrQkFBK0IsZUFBZSxHQUFHLENBQUM7YUFDdkk7WUFFRCxPQUFPLElBQUksT0FBTyxvQkFBb0IsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLGVBQWUsRUFBRSxDQUFDO1FBQ3BGLENBQUM7UUFDRCxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDcEIsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDO1lBQ3BCLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO2dCQUNqQyxVQUFVLEdBQUksc0JBQXNCLENBQUM7YUFDeEM7WUFDRCxPQUFPLEdBQUcsVUFBVSxLQUFLLE9BQU8sR0FBRyxDQUFDO1FBQ3hDLENBQUM7S0FDSixDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUM7QUFFSCxlQUFlLEdBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEF0dHJNYXJrdXAsIElCdWlsZFRhc2tEZWYsIHJlZ2lzdGVyIH0gZnJvbSAnQHdtL3RyYW5zcGlsZXInO1xuXG5jb25zdCB0YWdOYW1lID0gJ2Rpdic7XG5cbnJlZ2lzdGVyKCd3bS1wYWdlZGlhbG9nJywgKCk6IElCdWlsZFRhc2tEZWYgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByZTogKGF0dHJzLCBzaGFyZWQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBhdHRycy5nZXQoJ2NvbnRlbnQnKTtcbiAgICAgICAgICAgIGF0dHJzLmRlbGV0ZSgnY29udGVudCcpO1xuXG4gICAgICAgICAgICBjb25zdCBib3VuZENvbnRlbnQgPSBhdHRycy5nZXQoJ2NvbnRlbnQuYmluZCcpO1xuICAgICAgICAgICAgYXR0cnMuZGVsZXRlKCdjb250ZW50LmJpbmQnKTtcblxuICAgICAgICAgICAgY29uc3Qgb25Mb2FkID0gYXR0cnMuZ2V0KCdsb2FkLmV2ZW50Jyk7XG4gICAgICAgICAgICBhdHRycy5kZWxldGUoJ2xvYWQuZXZlbnQnKTtcblxuICAgICAgICAgICAgbGV0IG9uTG9hZEV2dE1hcmt1cCA9ICcnO1xuICAgICAgICAgICAgbGV0IGNvbnRlbnRNYXJrdXAgPSAnJztcblxuICAgICAgICAgICAgaWYgKG9uTG9hZCkge1xuICAgICAgICAgICAgICAgIG9uTG9hZEV2dE1hcmt1cCA9IGBsb2FkLmV2ZW50PVwiJHtvbkxvYWR9XCJgO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoYm91bmRDb250ZW50KSB7XG4gICAgICAgICAgICAgICAgY29udGVudE1hcmt1cCA9IGBjb250ZW50LmJpbmQ9XCIke2JvdW5kQ29udGVudH1cImA7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50TWFya3VwID0gYGNvbnRlbnQ9XCIke2NvbnRlbnR9XCJgO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgY29udGFpbmVyTWFya3VwID0gJyc7XG4gICAgICAgICAgICBpZiAoY29udGVudE1hcmt1cCkge1xuXG4gICAgICAgICAgICAgICAgc2hhcmVkLnNldCgnaGFzUGFydGlhbENvbnRlbnQnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBjb250YWluZXJNYXJrdXAgKz0gYDxuZy10ZW1wbGF0ZT48ZGl2IHdtQ29udGFpbmVyIHBhcnRpYWxDb250YWluZXIgJHtjb250ZW50TWFya3VwfSB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgJHtvbkxvYWRFdnRNYXJrdXB9PmA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBgPCR7dGFnTmFtZX0gd21QYXJ0aWFsRGlhbG9nICR7Z2V0QXR0ck1hcmt1cChhdHRycyl9PiR7Y29udGFpbmVyTWFya3VwfWA7XG4gICAgICAgIH0sXG4gICAgICAgIHBvc3Q6IChhdHRycywgc2hhcmVkKSA9PiB7XG4gICAgICAgICAgICBsZXQgcHJlQ29udGVudCA9ICcnO1xuICAgICAgICAgICAgaWYgKHNoYXJlZC5nZXQoJ2hhc1BhcnRpYWxDb250ZW50JykpIHtcbiAgICAgICAgICAgICAgICBwcmVDb250ZW50ID0gIGA8L2Rpdj48L25nLXRlbXBsYXRlPmA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYCR7cHJlQ29udGVudH08LyR7dGFnTmFtZX0+YDtcbiAgICAgICAgfVxuICAgIH07XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge307XG4iXX0=