import { ModelVariableManager } from '../manager/variable/model-variable.manager';
import { ServiceVariableManager } from '../manager/variable/service-variable.manager';
import { LiveVariableManager } from '../manager/variable/live-variable.manager';
import { NavigationActionManager } from '../manager/action/navigation-action.manager';
import { NotificationActionManager } from '../manager/action/notification-action.manager';
import { BaseVariableManager } from '../manager/variable/base-variable.manager';
import { BaseActionManager } from '../manager/action/base-action.manager';
import { LoginActionManager } from '../manager/action/login-action.manager';
import { LogoutActionManager } from '../manager/action/logout-action.manager';
import { TimerActionManager } from '../manager/action/timer-action.manager';
import { DeviceVariableManager } from '../manager/variable/device-variable-manager';
import { WebSocketVariableManager } from '../manager/variable/web-socket-variable.manager';
var managerMap = new Map(), typeToManagerMap = {
    'Variable': BaseVariableManager,
    'Action': BaseActionManager,
    'wm.Variable': ModelVariableManager,
    'wm.ServiceVariable': ServiceVariableManager,
    'wm.LiveVariable': LiveVariableManager,
    'wm.NavigationVariable': NavigationActionManager,
    'wm.NotificationVariable': NotificationActionManager,
    'wm.LoginVariable': LoginActionManager,
    'wm.LogoutVariable': LogoutActionManager,
    'wm.TimerVariable': TimerActionManager,
    'wm.DeviceVariable': DeviceVariableManager,
    'wm.WebSocketVariable': WebSocketVariableManager
};
var VariableManagerFactory = /** @class */ (function () {
    function VariableManagerFactory() {
    }
    VariableManagerFactory.get = function (type) {
        return managerMap.has(type) ?
            managerMap.get(type) :
            managerMap.set(type, new typeToManagerMap[type]()).get(type);
    };
    return VariableManagerFactory;
}());
export { VariableManagerFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFibGUtbWFuYWdlci5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHdtL3ZhcmlhYmxlcy8iLCJzb3VyY2VzIjpbImZhY3RvcnkvdmFyaWFibGUtbWFuYWdlci5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBRTNGLElBQU0sVUFBVSxHQUFHLElBQUksR0FBRyxFQUFFLEVBQ3hCLGdCQUFnQixHQUFHO0lBQ2YsVUFBVSxFQUFFLG1CQUFtQjtJQUMvQixRQUFRLEVBQUUsaUJBQWlCO0lBQzNCLGFBQWEsRUFBRSxvQkFBb0I7SUFDbkMsb0JBQW9CLEVBQUUsc0JBQXNCO0lBQzVDLGlCQUFpQixFQUFFLG1CQUFtQjtJQUN0Qyx1QkFBdUIsRUFBRSx1QkFBdUI7SUFDaEQseUJBQXlCLEVBQUUseUJBQXlCO0lBQ3BELGtCQUFrQixFQUFFLGtCQUFrQjtJQUN0QyxtQkFBbUIsRUFBRSxtQkFBbUI7SUFDeEMsa0JBQWtCLEVBQUUsa0JBQWtCO0lBQ3RDLG1CQUFtQixFQUFFLHFCQUFxQjtJQUMxQyxzQkFBc0IsRUFBRSx3QkFBd0I7Q0FDbkQsQ0FBQztBQUVOO0lBQUE7SUFPQSxDQUFDO0lBTFUsMEJBQUcsR0FBVixVQUFXLElBQUk7UUFDWCxPQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN6QixVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdEIsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JFLENBQUM7SUFDTCw2QkFBQztBQUFELENBQUMsQUFQRCxJQU9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kZWxWYXJpYWJsZU1hbmFnZXIgfSBmcm9tICcuLi9tYW5hZ2VyL3ZhcmlhYmxlL21vZGVsLXZhcmlhYmxlLm1hbmFnZXInO1xuaW1wb3J0IHsgU2VydmljZVZhcmlhYmxlTWFuYWdlciB9IGZyb20gJy4uL21hbmFnZXIvdmFyaWFibGUvc2VydmljZS12YXJpYWJsZS5tYW5hZ2VyJztcbmltcG9ydCB7IExpdmVWYXJpYWJsZU1hbmFnZXIgfSBmcm9tICcuLi9tYW5hZ2VyL3ZhcmlhYmxlL2xpdmUtdmFyaWFibGUubWFuYWdlcic7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uQWN0aW9uTWFuYWdlciB9IGZyb20gJy4uL21hbmFnZXIvYWN0aW9uL25hdmlnYXRpb24tYWN0aW9uLm1hbmFnZXInO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQWN0aW9uTWFuYWdlciB9IGZyb20gJy4uL21hbmFnZXIvYWN0aW9uL25vdGlmaWNhdGlvbi1hY3Rpb24ubWFuYWdlcic7XG5pbXBvcnQgeyBCYXNlVmFyaWFibGVNYW5hZ2VyIH0gZnJvbSAnLi4vbWFuYWdlci92YXJpYWJsZS9iYXNlLXZhcmlhYmxlLm1hbmFnZXInO1xuaW1wb3J0IHsgQmFzZUFjdGlvbk1hbmFnZXIgfSBmcm9tICcuLi9tYW5hZ2VyL2FjdGlvbi9iYXNlLWFjdGlvbi5tYW5hZ2VyJztcbmltcG9ydCB7IExvZ2luQWN0aW9uTWFuYWdlciB9IGZyb20gJy4uL21hbmFnZXIvYWN0aW9uL2xvZ2luLWFjdGlvbi5tYW5hZ2VyJztcbmltcG9ydCB7IExvZ291dEFjdGlvbk1hbmFnZXIgfSBmcm9tICcuLi9tYW5hZ2VyL2FjdGlvbi9sb2dvdXQtYWN0aW9uLm1hbmFnZXInO1xuaW1wb3J0IHsgVGltZXJBY3Rpb25NYW5hZ2VyIH0gZnJvbSAnLi4vbWFuYWdlci9hY3Rpb24vdGltZXItYWN0aW9uLm1hbmFnZXInO1xuaW1wb3J0IHsgRGV2aWNlVmFyaWFibGVNYW5hZ2VyIH0gZnJvbSAnLi4vbWFuYWdlci92YXJpYWJsZS9kZXZpY2UtdmFyaWFibGUtbWFuYWdlcic7XG5pbXBvcnQgeyBXZWJTb2NrZXRWYXJpYWJsZU1hbmFnZXIgfSBmcm9tICcuLi9tYW5hZ2VyL3ZhcmlhYmxlL3dlYi1zb2NrZXQtdmFyaWFibGUubWFuYWdlcic7XG5cbmNvbnN0IG1hbmFnZXJNYXAgPSBuZXcgTWFwKCksXG4gICAgdHlwZVRvTWFuYWdlck1hcCA9IHtcbiAgICAgICAgJ1ZhcmlhYmxlJzogQmFzZVZhcmlhYmxlTWFuYWdlcixcbiAgICAgICAgJ0FjdGlvbic6IEJhc2VBY3Rpb25NYW5hZ2VyLFxuICAgICAgICAnd20uVmFyaWFibGUnOiBNb2RlbFZhcmlhYmxlTWFuYWdlcixcbiAgICAgICAgJ3dtLlNlcnZpY2VWYXJpYWJsZSc6IFNlcnZpY2VWYXJpYWJsZU1hbmFnZXIsXG4gICAgICAgICd3bS5MaXZlVmFyaWFibGUnOiBMaXZlVmFyaWFibGVNYW5hZ2VyLFxuICAgICAgICAnd20uTmF2aWdhdGlvblZhcmlhYmxlJzogTmF2aWdhdGlvbkFjdGlvbk1hbmFnZXIsXG4gICAgICAgICd3bS5Ob3RpZmljYXRpb25WYXJpYWJsZSc6IE5vdGlmaWNhdGlvbkFjdGlvbk1hbmFnZXIsXG4gICAgICAgICd3bS5Mb2dpblZhcmlhYmxlJzogTG9naW5BY3Rpb25NYW5hZ2VyLFxuICAgICAgICAnd20uTG9nb3V0VmFyaWFibGUnOiBMb2dvdXRBY3Rpb25NYW5hZ2VyLFxuICAgICAgICAnd20uVGltZXJWYXJpYWJsZSc6IFRpbWVyQWN0aW9uTWFuYWdlcixcbiAgICAgICAgJ3dtLkRldmljZVZhcmlhYmxlJzogRGV2aWNlVmFyaWFibGVNYW5hZ2VyLFxuICAgICAgICAnd20uV2ViU29ja2V0VmFyaWFibGUnOiBXZWJTb2NrZXRWYXJpYWJsZU1hbmFnZXJcbiAgICB9O1xuXG5leHBvcnQgY2xhc3MgVmFyaWFibGVNYW5hZ2VyRmFjdG9yeSB7XG5cbiAgICBzdGF0aWMgZ2V0KHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIG1hbmFnZXJNYXAuaGFzKHR5cGUpID9cbiAgICAgICAgICAgIG1hbmFnZXJNYXAuZ2V0KHR5cGUpIDpcbiAgICAgICAgICAgIG1hbmFnZXJNYXAuc2V0KHR5cGUsIG5ldyB0eXBlVG9NYW5hZ2VyTWFwW3R5cGVdKCkpLmdldCh0eXBlKTtcbiAgICB9XG59XG4iXX0=