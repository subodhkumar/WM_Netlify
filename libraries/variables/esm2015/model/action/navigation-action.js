import { VariableManagerFactory } from '../../factory/variable-manager.factory';
import { BaseAction } from '../base-action';
import { VARIABLE_CONSTANTS } from '../../constants/variables.constants';
const getManager = () => {
    return VariableManagerFactory.get(VARIABLE_CONSTANTS.CATEGORY.NAVIGATION);
};
const ɵ0 = getManager;
export class NavigationAction extends BaseAction {
    constructor(variable) {
        super();
        Object.assign(this, variable);
    }
    invoke(options) {
        getManager().invoke(this, options);
    }
    // legacy method.
    navigate(options) {
        this.invoke(options);
    }
    init() {
        // static property bindings
        getManager().initBinding(this, 'dataBinding', 'dataBinding');
        // dynamic property bindings (e.g. page params)
        getManager().initBinding(this, 'dataSet', 'dataSet');
    }
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1hY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad20vdmFyaWFibGVzLyIsInNvdXJjZXMiOlsibW9kZWwvYWN0aW9uL25hdmlnYXRpb24tYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV6RSxNQUFPLFVBQVUsR0FBRyxHQUFHLEVBQUU7SUFDckIsT0FBTyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzlFLENBQUMsQ0FBQzs7QUFFRixNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsVUFBVTtJQUk1QyxZQUFZLFFBQWE7UUFDckIsS0FBSyxFQUFFLENBQUM7UUFDUixNQUFNLENBQUMsTUFBTSxDQUFDLElBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsTUFBTSxDQUFDLE9BQVE7UUFDWCxVQUFVLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxpQkFBaUI7SUFDakIsUUFBUSxDQUFDLE9BQVE7UUFDYixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUFJO1FBQ0EsMkJBQTJCO1FBQzNCLFVBQVUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBRTdELCtDQUErQztRQUMvQyxVQUFVLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6RCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWYXJpYWJsZU1hbmFnZXJGYWN0b3J5IH0gZnJvbSAnLi4vLi4vZmFjdG9yeS92YXJpYWJsZS1tYW5hZ2VyLmZhY3RvcnknO1xuaW1wb3J0IHsgQmFzZUFjdGlvbiB9IGZyb20gJy4uL2Jhc2UtYWN0aW9uJztcbmltcG9ydCB7IFZBUklBQkxFX0NPTlNUQU5UUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy92YXJpYWJsZXMuY29uc3RhbnRzJztcblxuY29uc3QgIGdldE1hbmFnZXIgPSAoKSA9PiB7XG4gICAgcmV0dXJuIFZhcmlhYmxlTWFuYWdlckZhY3RvcnkuZ2V0KFZBUklBQkxFX0NPTlNUQU5UUy5DQVRFR09SWS5OQVZJR0FUSU9OKTtcbn07XG5cbmV4cG9ydCBjbGFzcyBOYXZpZ2F0aW9uQWN0aW9uIGV4dGVuZHMgQmFzZUFjdGlvbiB7XG4gICAgb3BlcmF0aW9uOiBzdHJpbmc7XG4gICAgcGFnZU5hbWU6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHZhcmlhYmxlOiBhbnkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzIGFzIGFueSwgdmFyaWFibGUpO1xuICAgIH1cblxuICAgIGludm9rZShvcHRpb25zPykge1xuICAgICAgICBnZXRNYW5hZ2VyKCkuaW52b2tlKHRoaXMsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIC8vIGxlZ2FjeSBtZXRob2QuXG4gICAgbmF2aWdhdGUob3B0aW9ucz8pIHtcbiAgICAgICAgdGhpcy5pbnZva2Uob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgLy8gc3RhdGljIHByb3BlcnR5IGJpbmRpbmdzXG4gICAgICAgIGdldE1hbmFnZXIoKS5pbml0QmluZGluZyh0aGlzLCAnZGF0YUJpbmRpbmcnLCAnZGF0YUJpbmRpbmcnKTtcblxuICAgICAgICAvLyBkeW5hbWljIHByb3BlcnR5IGJpbmRpbmdzIChlLmcuIHBhZ2UgcGFyYW1zKVxuICAgICAgICBnZXRNYW5hZ2VyKCkuaW5pdEJpbmRpbmcodGhpcywgJ2RhdGFTZXQnLCAnZGF0YVNldCcpO1xuICAgIH1cbn1cbiJdfQ==