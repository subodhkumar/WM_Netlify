{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@wm/mobile/components/widgets/camera/camera.component.ts","ng://@wm/mobile/components/widgets/anchor/anchor.directive.ts","ng://@wm/mobile/components/widgets/app-update/app-update.component.ts","ng://@wm/mobile/components/widgets/barcode-scanner/barcode-scanner.component.ts","ng://@wm/mobile/components/widgets/barcode-scanner/barcode-scanner.props.ts","ng://@wm/mobile/components/widgets/media-list/media-list.component.ts","ng://@wm/mobile/components/widgets/camera/camera.props.ts","ng://@wm/mobile/components/widgets/date/date.directive.ts","ng://@wm/mobile/components/widgets/date-time/date-time.directive.ts","ng://@wm/mobile/components/widgets/file-browser/file-browser.component.ts","ng://@wm/mobile/components/services/file-selector.service.ts","ng://@wm/mobile/components/widgets/file-upload/file-upload.directive.ts","ng://@wm/mobile/components/widgets/image-cache/image-cache.directive.ts","ng://@wm/mobile/components/widgets/network-info-toaster/network-info-toaster.component.ts","ng://@wm/mobile/components/widgets/media-list/media-list.props.ts","ng://@wm/mobile/components/widgets/media-list/media-list-item/media-list-item.directive.ts","ng://@wm/mobile/components/widgets/left-panel/left-panel.directive.ts","ng://@wm/mobile/components/widgets/page/page.directive.ts","ng://@wm/mobile/components/widgets/mobile-navbar/mobile-navbar.props.ts","ng://@wm/mobile/components/widgets/mobile-navbar/mobile-navbar.component.ts","ng://@wm/mobile/components/widgets/network-info-toaster/network-info-toaster.props.ts","ng://@wm/mobile/components/widgets/page-content-loader/page-content-loader.component.ts","ng://@wm/mobile/components/widgets/process-manager/process-manager.component.ts","ng://@wm/mobile/components/widgets/search/search.directive.ts","ng://@wm/mobile/components/widgets/segmented-control/segmented-control.component.ts","ng://@wm/mobile/components/widgets/segmented-control/segmented-control.props.ts","ng://@wm/mobile/components/widgets/segmented-control/segment-content/segment-content.component.ts","ng://@wm/mobile/components/widgets/segmented-control/segment-content/segment-content.props.ts","ng://@wm/mobile/components/widgets/time/time.directive.ts","ng://@wm/mobile/components/widgets/tabbar/tabbar.component.ts","ng://@wm/mobile/components/widgets/tabbar/tabbar.props.ts","ng://@wm/mobile/components/widgets/widget-template/widget-template.component.ts","ng://@wm/mobile/components/widgets/widget-template/widget-template.props.ts","ng://@wm/mobile/components/component.module.ts","ng://@wm/mobile/components/services/process-management.service.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","CAPTURE_TYPE","ENCODING_TYPE","AnchorDirective","widget","onClick","href","hyperlink","indexOf","_","startsWith","window","location","origin","pathname","cordova","InAppBrowser","open","target","Directive","args","selector","Inject","WidgetRef","HostListener","AUTO_UPDATE_FILENAME","AppUpdateComponent","deviceService","fileDownloadService","elRef","file","fileOpener","http","_this","downloadProgress","downloading","message","addClass","nativeElement","setCSS","hasCordova","getBuildMeta","then","buildMeta","buildMode","removeFile","externalApplicationStorageDirectory","catch","noop","checkForUpdate","getUserConfirmation","bind","cancel","installLatestVersion","apkFile","downloadLink","_buildMeta","host","token","latestBuildNumber","platformVersion","progressObserver","loaded","total","complete","download","latestVersion","Promise","resolve","reject","get","toPromise","response","success","body","buildNumber","version","readAsText","applicationDirectory","data","JSON","parse","removeClass","Component","template","DeviceService","DeviceFileDownloadService","ElementRef","File","FileOpener","HttpClient","WIDGET_CONFIG","widgetType","hostClass","BarcodeScannerComponent","_super","scanner","inj","styler","APPLY_STYLES_TYPE","SCROLLABLE_CONTAINER","tslib_1.__extends","openBarcodescanner","$event","scan","text","datavalue","invokeEventCallback","options","barcodeformat","formats","initializeProps","register","Map","PROP_STRING","PROP_BOOLEAN","providers","provideAsWidgetRef","BarcodeScanner","Injector","StylableComponent","Layout","CameraComponent","camera","mediaCapture","cdr","openCamera","capturetype","IMAGE","_cameraOptions","quality","imagequality","destinationType","sourceType","allowEdit","allowedit","correctOrientation","correctorientation","encodingType","imageencodingtype","JPEG","saveToPhotoAlbum","savetogallery","targetWidth","imagetargetwidth","targetHeight","imagetargetheight","getPicture","path","updateModel","limit","captureVideo","mediaFiles","fullPath","localFilePath","convertToBlob","result","localFile","blob","undefined","PROP_NUMBER","Camera","MediaCapture","ChangeDetectorRef","DateDirective","dateComponent","useDatapicker","datepattern","updateFormat","DateComponent","DateTimeDirective","dateTimeComponent","DatetimeComponent","FileBrowserComponent","selectedFiles","submitEmitter","EventEmitter","getFileExtension","fileName","extIndex","lastIndexOf","substring","ngOnDestroy","backButtonListenerDeregister","onFileClick","isFile","isSelected","deselectFile","selectFile","goToFolder","defineProperty","flag","rootDir","externalRootDirectory","isVisible","currentFolder","isIos","documentsDirectory","resolveLocalFileSystemURL","root","onBackButtonTap","parent","$appDigest","submit","files","loadFileSize","forEach","f","nativeURL","name","size","remove","folder","loadFolder","fileTypeToSelect","all","map","fileTypeToShow","createReader","readEntries","entries","isEmpty","split","filter","findIndex","ext","endsWith","sortBy","toLowerCase","refreshFolder","multiple","Input","Output","FileSelectorService","selectAudio","getAudio","isIphone","filePaths","isArray","getFiles","setFileBrowser","fileBrowserComponent","selectFiles","show","subscription","subscribe","unsubscribe","selectImages","maxImg","imagePicker","getPictures","mediaType","maxImages","filepath","selectVideos","filePath","filesList","fileObj","pop","content","Injectable","providedIn","FileUploadDirective","fileSelectorService","fileUploadComponent","_isMobileType","_isCordova","openFileSelector","contents","onFileSelect","FileUploadComponent","ImageCacheDirective","componentInstance","deviceFileCacheService","_isEnabled","_lastUrl","ngDoCheck","imgSource","getLocalPath","localPath","_cacheUrl","val","Self","type","DeviceFileCacheService","NetworkState","MediaListComponent","selectedMediaIndex","appendToBody","$fullScreenEle","setTimeout","$element","find","appendTo","onPropertyChange","key","nv","ov","onDataChange","SINGLE_ROW","exitFullScreen","getPicTitle","fieldDefs","showFullScreen","showNext","getSrc","field","showPrev","isObject","binddataset","isString","updateFieldDefs","mediaUrlVal","$parseExpr","mediaurl","thumbnailUrlVal","thumbnailurl","listTrackByFn","index","PROP_ANY","ContentChild","MediaListItemDirective","item","MobileLeftPanelDirective","page","leftPanelRef","notify","_backBtnListenerDestroyer","collapse","destroyBackBtnListener","PageDirective","LeftPanelDirective","MobilePageDirective","app","navigationService","_$ele","$","landingPageName","activePageName","navigator","exitApp","goToPrevious","App","AbstractNavigationService","navbarProps","MobileNavbarComponent","backbtnClickEvt","_isReady","leftNavPanel","showLeftnavbtn","_datasource","searchComponent","datasource","ngAfterViewInit","binddisplayimagesrc","displayimagesrc","displaylabel","binddisplaylabel","datafield","dataset","searchkey","matchmode","goBack","executeBackTapListeners","imagesrc","getImageUrl","showSearchbar","query","onSubmission","switchView","view","goBacktoPreviousView","defaultview","onSelect","selectedValue","newVal","oldVal","prevDatavalue","onClear","Attribute","ViewChild","SearchComponent","BaseComponent","NetworkInfoToasterComponent","networkService","showMessage","isServiceConnected","isServiceAvailable","isAvailable","isConnected","_listenerDestroyer","oldState","networkState","autoHide","CONNECTED","isConnecting","CONNECTING","SERVICE_AVAILABLE_BUT_NOT_CONNECTED","isNetworkAvailable","NETWORK_AVAIABLE_BUT_SERVICE_NOT_AVAILABLE","NETWORK_NOT_AVAIABLE","connect","hideMessage","NetworkService","PageContentLoaderComponent","el","ProcessManagerComponent","instances","queue","createInstance","min","max","instance","onStop","progressLabel","stopButtonLabel","api","propertyName","set","propertyValue","setInstaceProperty","destroy","removeInstance","addToQueue","getVisibleInstances","hasInstancesToShow","setAttr","removeAttr","flushQueue","shift","isFunction","SearchDirective","switchClass","SegmentedControlComponent","currentSelectedIndex","addContent","goToNext","showContent","goToPrev","_$container","childEls","maxWidth","setCSSFromObj","width","white-space","transition","_b","__values","tslib_1.__values","from","_c","child","removeContent","c","splice","defaultLoad","selectedContent","isNumber","loadContent","stopPropagation","eventData","$old","$new","SegmentContentComponent","segmentedControl","compile","loadmode","navigate","_loadContent","loaddelay","TimeDirective","timeComponent","TimeComponent","MobileTabbarComponent","binditemlabel","binditemicon","binditemlink","tabItems","layout","_layouts","minwidth","getTabItems","getSuitableLayout","on","debounce","off","onItemSelect","selectedItem","$item","label","getItems","itemArray","icon","avaiableWidth","l","link","getEvaluatedData","expression","bindExpression","viewParent","hash","substr","active","includes","WidgetTemplateComponent","wmMobileComponents","PIPES","WmMobileComponentsModule","NgModule","imports","CommonModule","WmComponentsModule","declarations","exports","entryComponents","ProcessManagementService","setUIComponent","processManagerComponent"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, HostListener, Injector } from '@angular/core';\n\nimport { Camera } from '@ionic-native/camera';\nimport { MediaCapture } from '@ionic-native/media-capture';\n\nimport { APPLY_STYLES_TYPE, IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\nimport { convertToBlob, hasCordova } from '@wm/core';\n\nimport { registerProps } from './camera.props';\n\nconst DEFAULT_CLS = 'btn app-camera';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-camera', hostClass: DEFAULT_CLS};\n\nexport enum CAPTURE_TYPE {\n    IMAGE = 'IMAGE',\n    PNG = 'PNG'\n}\n\nexport enum ENCODING_TYPE {\n    JPEG = 'JPEG',\n    PNG = 'PNG'\n}\n\n@Component({\n    selector: 'button[wmCamera]',\n    templateUrl: './camera.component.html',\n    providers: [\n        provideAsWidgetRef(CameraComponent)\n    ]\n})\nexport class CameraComponent extends StylableComponent {\n    static initializeProps = registerProps();\n    public allowedit: boolean;\n    public correctorientation: boolean;\n    public capturetype: string;\n    public datavalue: string;\n    public imagequality: number;\n    public imageencodingtype: string;\n    public imagetargetwidth: number;\n    public imagetargetheight: number;\n    public localFile: any;\n    public localFilePath: string;\n    public savetogallery: boolean;\n    public iconsize: any;\n    public iconclass: any;\n\n    private _cameraOptions: any;\n\n    constructor(private camera: Camera, private mediaCapture: MediaCapture, inj: Injector, elRef: ElementRef, cdr: ChangeDetectorRef) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this, APPLY_STYLES_TYPE.SCROLLABLE_CONTAINER);\n    }\n\n    @HostListener('click', ['$event'])\n    public openCamera($event) {\n        if (hasCordova()) {\n            if (this.capturetype === CAPTURE_TYPE.IMAGE) {\n                this._cameraOptions = {\n                    quality           : this.imagequality,\n                    destinationType   : 1, // 0-data url,1- file url\n                    sourceType        : 1, // only camera\n                    allowEdit         : this.allowedit,\n                    correctOrientation: this.correctorientation,\n                    encodingType      : this.imageencodingtype === ENCODING_TYPE.JPEG ? 0 : 1,\n                    saveToPhotoAlbum  : this.savetogallery,\n                    targetWidth       : this.imagetargetwidth,\n                    targetHeight      : this.imagetargetheight\n                };\n                // start camera\n                this.camera.getPicture(this._cameraOptions)\n                    .then(path => this.updateModel($event, path));\n            } else {\n                this._cameraOptions = {\n                    limit: 1\n                };\n                // start video capture\n                this.mediaCapture.captureVideo(this._cameraOptions)\n                    .then(mediaFiles => this.updateModel($event, mediaFiles[0].fullPath));\n            }\n        } else {\n            this.invokeEventCallback('success', {$event});\n        }\n    }\n\n    private updateModel($event, value) {\n        this.localFilePath = this.datavalue = value;\n        convertToBlob(value)\n            .then(result => {\n                this.localFile = result.blob;\n                this.invokeEventCallback('success', {$event, localFilePath: this.localFilePath, localFile: this.localFile});\n            }, () => {\n                this.localFile = undefined;\n            });\n    }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { WidgetRef } from '@wm/components';\n\ndeclare const _;\ndeclare const cordova;\n\n@Directive({\n    selector: '[wmAnchor]'\n})\nexport class AnchorDirective {\n\n    constructor(@Inject(WidgetRef) private widget: any) { }\n\n    @HostListener('click')\n    onClick () {\n        let href = this.widget.hyperlink;\n        if (href) {\n            if (href.indexOf(':') >= 0 && !(_.startsWith(href, 'http://') || _.startsWith(href, 'https://'))) {\n                return;\n            } else if (_.startsWith(href, '#')) {\n                window.location.href = window.location.origin + window.location.pathname + href;\n                return;\n            } else if (_.startsWith(href, '//')) {\n                href = 'https:' + href;\n            }\n            cordova.InAppBrowser.open(href, this.widget.target);\n        }\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef } from '@angular/core';\n\nimport { File } from '@ionic-native/file';\nimport { FileOpener } from '@ionic-native/file-opener';\n\nimport { addClass, hasCordova, noop, removeClass, setCSS } from '@wm/core';\nimport { DeviceFileDownloadService, DeviceService } from '@wm/mobile/core';\n\ndeclare const cordova;\n\nconst DEFAULT_CLS = 'app-update-dialog modal fade in hidden';\n\nconst AUTO_UPDATE_FILENAME = 'app-auto-update.apk';\n\n@Component({\n    selector: '[wmAppUpdate]',\n    templateUrl: './app-update.component.html'\n})\nexport class AppUpdateComponent {\n\n    public downloadProgress = 0;\n    public downloading = false;\n    public message = 'There is an update available. Would you like to update the app?';\n\n    private _buildMeta: any;\n\n    constructor(\n        private deviceService: DeviceService,\n        private fileDownloadService: DeviceFileDownloadService,\n        private elRef: ElementRef,\n        private file: File,\n        private fileOpener: FileOpener,\n        private http: HttpClient\n    ) {\n\n        addClass(this.elRef.nativeElement, DEFAULT_CLS);\n        setCSS(this.elRef.nativeElement, 'display', 'block');\n        if (hasCordova()) {\n            this.getBuildMeta().then(buildMeta => {\n                if (buildMeta && buildMeta.buildMode === 'DEVELOPMENT_MODE') {\n                    this.file.removeFile(cordova.file.externalApplicationStorageDirectory, AUTO_UPDATE_FILENAME).catch(noop);\n                    this.checkForUpdate()\n                        .then(this.getUserConfirmation.bind(this), noop);\n                }\n            });\n        }\n    }\n\n    public cancel() {\n        addClass(this.elRef.nativeElement, 'hidden');\n    }\n\n    public installLatestVersion() {\n        const apkFile =  cordova.file.externalApplicationStorageDirectory + AUTO_UPDATE_FILENAME,\n            downloadLink = `${this._buildMeta.host}/appBuild/rest/mobileBuilds/android/download?token=${this._buildMeta.token}&buildNumber=${this._buildMeta.latestBuildNumber}&fileName=${AUTO_UPDATE_FILENAME}&releaseVersion=${this._buildMeta.platformVersion}`,\n            progressObserver = { next: e => { this.downloadProgress = (e.loaded / e.total) * 100; }, error: null, complete: null};\n        this.fileDownloadService.download(\n            downloadLink,\n            false,\n            cordova.file.externalApplicationStorageDirectory,\n            AUTO_UPDATE_FILENAME,\n            progressObserver).then(() => {\n                this.fileOpener.open(apkFile, 'application/vnd.android.package-archive');\n            }, function () {\n                this.message = 'Failed to download latest version.';\n            });\n        this.message = `Downloading the latest version [${this._buildMeta.latestVersion}].`;\n        this.downloading = true;\n    }\n\n    private checkForUpdate() {\n        return new Promise((resolve, reject) => {\n            this.http.get(`${this._buildMeta.host}/appBuild/rest/mobileBuilds/latest_build?token=${this._buildMeta.token}&releaseVersion=${this._buildMeta.platformVersion}`)\n                .toPromise()\n                .then((response: any) => {\n                    const latestBuildNumber = response.success.body.buildNumber,\n                        latestVersion =  response.success.body.version;\n                    if (this._buildMeta.buildNumber < latestBuildNumber) {\n                        this._buildMeta.latestBuildNumber = latestBuildNumber;\n                        this._buildMeta.latestVersion = latestVersion;\n                        resolve(latestBuildNumber);\n                    } else {\n                        reject();\n                    }\n                }, reject);\n        });\n    }\n\n    private getBuildMeta() {\n        if (!this._buildMeta) {\n            return this.file.readAsText(cordova.file.applicationDirectory + 'www/', 'build_meta.json')\n                .then(data => {\n                    this._buildMeta = JSON.parse(data);\n                    return this._buildMeta;\n                }, noop);\n        }\n        return Promise.resolve(this._buildMeta);\n    }\n\n    private getUserConfirmation() {\n        this.downloadProgress = 0;\n        this.downloading = false;\n        this.message = 'There is an update available. Would you like to update the app?';\n        removeClass(this.elRef.nativeElement, 'hidden');\n    }\n}\n","import { Component, HostListener, Injector } from '@angular/core';\n\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\nimport { APPLY_STYLES_TYPE, IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\nimport { hasCordova } from '@wm/core';\n\nimport { registerProps } from './barcode-scanner.props';\n\nconst DEFAULT_CLS = 'btn app-barcode';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-barcodescanner', hostClass: DEFAULT_CLS};\n\n@Component({\n    selector: 'button[wmBarcodescanner]',\n    templateUrl: './barcode-scanner.component.html',\n    providers: [\n        provideAsWidgetRef(BarcodeScannerComponent)\n    ]\n})\nexport class BarcodeScannerComponent extends StylableComponent {\n    static initializeProps = registerProps();\n\n    public barcodeformat: string;\n    public datavalue: string;\n    public iconclass: any;\n    public iconsize: any;\n    public caption: any;\n\n\n    constructor(private scanner: BarcodeScanner, inj: Injector) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this, APPLY_STYLES_TYPE.SCROLLABLE_CONTAINER);\n    }\n\n    @HostListener('click', ['$event'])\n    public openBarcodescanner($event) {\n        this.scan().then(text => {\n                this.datavalue = text;\n                this.invokeEventCallback('success', {$event});\n            });\n    }\n\n    private scan(): Promise<string> {\n        let options;\n        if (hasCordova()) {\n            if (this.barcodeformat && this.barcodeformat !== 'ALL') {\n                options = {\n                    formats: this.barcodeformat\n                };\n            }\n            return this.scanner.scan(options)\n                .then(data => data.text);\n        }\n        return Promise.resolve('BAR_CODE');\n    }\n}\n","import { PROP_BOOLEAN, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-barcodescanner',\n        new Map(\n            [\n                ['barcodeformat', {value: 'ALL', ...PROP_STRING}],\n                ['caption', {value: '', ...PROP_STRING}],\n                ['class', PROP_STRING],\n                ['iconclass', {value: 'glyphicon glyphicon-barcode', ...PROP_STRING}],\n                ['iconsize', {value: '2em', ...PROP_STRING}],\n                ['name', PROP_STRING],\n                ['show', {value: true, ...PROP_BOOLEAN}]\n            ]\n        )\n    );\n};\n","import { Component, ContentChild, ElementRef, Injector, TemplateRef } from '@angular/core';\n\nimport { $appDigest, $parseExpr, addClass, isArray, isObject, isString, removeClass } from '@wm/core';\nimport { APPLY_STYLES_TYPE, IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\n\nimport { registerProps } from './media-list.props';\n\nconst DEFAULT_CLS = 'app-medialist';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-media-list', hostClass: DEFAULT_CLS};\n\nenum Layout {\n    SINGLE_ROW = 'Single-row',\n    MULTI_ROW = 'Multi-row'\n}\n\n@Component({\n    selector: '[wmMediaList]',\n    templateUrl: './media-list.component.html',\n    providers: [\n        provideAsWidgetRef(MediaListComponent)\n    ]\n})\nexport class MediaListComponent extends StylableComponent {\n    static initializeProps = registerProps();\n\n    private $fullScreenEle;\n    public binddataset;\n    public fieldDefs: any[]  [];\n    public mediaurl: string;\n    public thumbnailurl: string;\n    public selectedMediaIndex = -1;\n\n    @ContentChild('mediaListTemplate') mediaListTemplate: TemplateRef<ElementRef>;\n\n    constructor(inj: Injector) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this, APPLY_STYLES_TYPE.SCROLLABLE_CONTAINER);\n    }\n\n    public appendToBody() {\n        if (!this.$fullScreenEle) {\n            setTimeout(() => {\n                this.$fullScreenEle = this.$element.find('>.app-media-fullscreen');\n                this.$fullScreenEle.appendTo('body:first');\n            }, 100);\n        }\n        return true;\n    }\n\n    public onPropertyChange(key, nv, ov?) {\n        if (key === 'dataset') {\n            this.onDataChange(nv);\n        } else if (key === 'layout') {\n            if (nv === Layout.SINGLE_ROW) {\n                addClass(this.nativeElement, 'singlerow');\n            } else {\n                removeClass(this.nativeElement, 'singlerow');\n            }\n        } else {\n            super.onPropertyChange(key, nv, ov);\n        }\n    }\n\n    public exitFullScreen() {\n        this.selectedMediaIndex = -1;\n        this.$fullScreenEle.appendTo(this.$element);\n        this.$fullScreenEle = null;\n        $appDigest();\n    }\n\n    public getPicTitle() {\n        return this.selectedMediaIndex + 1 + '/' + this.fieldDefs.length;\n    }\n\n    public showFullScreen(i) {\n        this.selectedMediaIndex = i;\n        $appDigest();\n    }\n\n    public showNext() {\n        if (this.selectedMediaIndex < this.fieldDefs.length - 1) {\n            this.selectedMediaIndex++;\n            $appDigest();\n        }\n    }\n\n    // Returns the field value (src) from the fieldDefs\n    private getSrc(field) {\n        if (field) {\n            return this.fieldDefs[this.selectedMediaIndex][field];\n        }\n        return '';\n    }\n\n    public showPrev() {\n        if (this.selectedMediaIndex > 0) {\n            this.selectedMediaIndex--;\n            $appDigest();\n        }\n    }\n\n    private onDataChange(nv: any) {\n        if (nv) {\n\n            if (isObject(nv) && !isArray(nv)) {\n                nv = [nv];\n            }\n            if (!this.binddataset) {\n                if (isString(nv)) {\n                    nv = nv.split(',');\n                }\n            }\n            if (isArray(nv)) {\n                this.updateFieldDefs(nv as any[]);\n            }\n        } else {\n            this.updateFieldDefs([]);\n        }\n    }\n\n    /** With given data, creates media list items*/\n    private updateFieldDefs(data: any[]) {\n        this.fieldDefs = data;\n        data.forEach(field => {\n            field.mediaUrlVal     = $parseExpr(this.mediaurl)(field);\n            field.thumbnailUrlVal = $parseExpr(this.thumbnailurl)(field);\n        });\n        this.fieldDefs = data;\n    }\n\n    /**\n     * used to track list items by Index.\n     * @param {number} index value of the list item\n     * @returns {number} index.\n     */\n    private listTrackByFn(index: number): number {\n        return index;\n    }\n}\n","import { PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-camera',\n        new Map(\n            [\n                ['allowedit', {value: false, ...PROP_BOOLEAN}],\n                ['capturetype', {value: 'IMAGE', ...PROP_STRING}],\n                ['caption', {value: '', ...PROP_STRING}],\n                ['class', PROP_STRING],\n                ['correctorientation', {value: false, ...PROP_BOOLEAN}],\n                ['datavalue', {value: '', ...PROP_STRING}],\n                ['iconclass', {value: 'wi wi-photo-camera', ...PROP_STRING}],\n                ['iconsize', {value: '2em', ...PROP_STRING}],\n                ['imagequality', {value: 80, ...PROP_NUMBER}],\n                ['imageencodingtype', {value: 'JPEG', ...PROP_STRING}],\n                ['imagetargetwidth', PROP_NUMBER],\n                ['imagetargetheight', PROP_NUMBER],\n                ['localFile', {value: '', ...PROP_STRING}],\n                ['localFilePath', {value: '', ...PROP_STRING}],\n                ['name', PROP_STRING],\n                ['savetogallery', {value: false, ...PROP_BOOLEAN}],\n                ['show', {value: true, ...PROP_BOOLEAN}]\n            ]\n        )\n    );\n};\n","import { Directive } from '@angular/core';\n\nimport { DateComponent } from '@wm/components';\n\n@Directive({\n    selector: '[wmDate]'\n})\nexport class DateDirective {\n\n    constructor(dateComponent: DateComponent) {\n        dateComponent.useDatapicker = false;\n        dateComponent.datepattern = 'yyyy-MM-dd';\n        dateComponent.updateFormat('datepattern');\n    }\n}\n","import { Directive } from '@angular/core';\n\nimport { DatetimeComponent } from '@wm/components';\n\n@Directive({\n    selector: '[wmDateTime]'\n})\nexport class DateTimeDirective {\n\n    constructor(dateTimeComponent: DatetimeComponent) {\n        dateTimeComponent.useDatapicker = false;\n        dateTimeComponent.datepattern = 'yyyy-MM-ddTHH:mm:ss';\n        dateTimeComponent.updateFormat('datepattern');\n    }\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\n\nimport { $appDigest, isIos } from '@wm/core';\nimport { DeviceService } from '@wm/mobile/core';\n\ndeclare const _;\ndeclare const cordova;\ndeclare const resolveLocalFileSystemURL;\n\nexport interface File {\n    name: string;\n    size: number;\n    isSelected: boolean;\n    file: (success: (navtiveFileObject: any) => void, failure: (message: any) => any) => void;\n}\n\nexport interface Folder {\n    name: string;\n    files: File[];\n    folders: Folder[];\n    parent: Folder;\n}\n\n@Component({\n    selector: '[wmMobileFileBrowser]',\n    templateUrl: './file-browser.component.html'\n})\nexport class FileBrowserComponent implements OnDestroy {\n\n    public currentFolder: Folder;\n    @Input() public fileTypeToSelect: string;\n    @Input() public multiple: boolean;\n    public selectedFiles: File[] = [];\n    @Output('submit') submitEmitter = new EventEmitter();\n    public isVisible: boolean;\n\n    private backButtonListenerDeregister: any;\n\n    constructor(private deviceService: DeviceService) {}\n\n\n    public getFileExtension(fileName: string): string {\n        const extIndex = fileName ? fileName.lastIndexOf('.') : -1;\n        if (extIndex > 0) {\n            return fileName.substring(extIndex + 1);\n        }\n        return '';\n    }\n\n    public ngOnDestroy() {\n        if (this.backButtonListenerDeregister) {\n            this.backButtonListenerDeregister();\n        }\n    }\n\n    public onFileClick(file): void {\n        if (file.isFile) {\n            if (file.isSelected) {\n                this.deselectFile(file);\n            } else {\n                this.selectFile(file);\n            }\n        } else {\n            this.goToFolder(file);\n        }\n    }\n\n    public set show(flag: boolean) {\n        let rootDir = cordova.file.externalRootDirectory;\n        this.isVisible = flag;\n        if (flag) {\n            if (!this.currentFolder) {\n                if (isIos()) {\n                    rootDir = cordova.file.documentsDirectory;\n                }\n                resolveLocalFileSystemURL(rootDir, root => this.goToFolder(root));\n            }\n            this.backButtonListenerDeregister = this.deviceService.onBackButtonTap(() => {\n                if (this.isVisible) {\n                    if (this.currentFolder.parent) {\n                        this.onFileClick(this.currentFolder.parent);\n                    } else {\n                        this.isVisible = false;\n                    }\n                    $appDigest();\n                    return false;\n                }\n            });\n        } else if (this.backButtonListenerDeregister) {\n            this.backButtonListenerDeregister();\n        }\n    }\n\n    public submit() {\n        const files = [];\n        this.loadFileSize(this.selectedFiles).then(() => {\n            _.forEach(this.selectedFiles, function (f) {\n                f.isSelected = false;\n                files.push({ path: f.nativeURL,\n                    name: f.name,\n                    size : f.size});\n            });\n            this.selectedFiles = [];\n            this.isVisible = false;\n            this.submitEmitter.next({files: files});\n        });\n    }\n\n    private deselectFile(file: File): void {\n        _.remove(this.selectedFiles, file);\n        file.isSelected = false;\n    }\n\n    private goToFolder(folder: Folder): void {\n        if (!folder.files) {\n            this.loadFolder(folder, this.fileTypeToSelect)\n                .then(files => {\n                    folder.files = files;\n                    folder.parent = this.currentFolder;\n                    this.currentFolder = folder;\n                });\n        } else {\n            this.currentFolder = folder;\n        }\n    }\n\n    private loadFileSize(files: File[]): Promise<void[]> {\n        return Promise.all(files.map(f => {\n            return new Promise<void>((resolve, reject) => {\n                f.file(o => {\n                    f.size = o.size;\n                    resolve();\n                }, reject);\n            });\n        }));\n    }\n\n    private loadFolder(folder: any, fileTypeToSelect: string): Promise<File[]> {\n        return new Promise((resolve, reject) => {\n            let fileTypeToShow;\n            folder.createReader().readEntries((entries:  File[]) => {\n                if (!_.isEmpty(fileTypeToSelect)) {\n                    fileTypeToShow = _.split(fileTypeToSelect, ',');\n                    entries = _.filter(entries, e => {\n                        return !e.isFile || _.findIndex(fileTypeToShow, ext => _.endsWith(e.name, '.' + ext)) >= 0;\n                    });\n                }\n                resolve(_.sortBy(entries, e => (e.isFile ? '1_' : '0_') + e.name.toLowerCase()));\n            }, reject);\n        });\n    }\n\n\n    private refreshFolder(): Promise<any> {\n        return this.loadFolder(this.currentFolder, this.fileTypeToSelect)\n            .then(files => this.currentFolder.files = files);\n    }\n\n    private selectFile(file): void {\n        if (!this.multiple && this.selectedFiles.length > 0) {\n            this.selectedFiles[0].isSelected = false;\n            this.selectedFiles = [];\n        }\n        this.selectedFiles.push(file);\n        file.isSelected = true;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Camera } from '@ionic-native/camera';\n\nimport { convertToBlob, isIphone } from '@wm/core';\nimport { FileBrowserComponent } from '../widgets/file-browser/file-browser.component';\n\ndeclare const _;\ndeclare const window;\n\nexport interface FileContent {\n    name: string;\n    path: string;\n    blob: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FileSelectorService {\n\n    private fileBrowserComponent: FileBrowserComponent;\n\n    public constructor(private camera: Camera) {}\n\n    public selectAudio(multiple = false): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            // if multiple is true allows user to select multiple songs\n            // if icloud is true will show iCloud songs\n            (window['plugins']['mediapicker']).getAudio(resolve, reject, multiple, isIphone());\n        }).then(files =>  {\n            const filePaths = _.map(_.isArray(files) ? files : [files], 'exportedurl');\n            return this.getFiles(filePaths);\n        });\n    }\n\n    public setFileBrowser(f: FileBrowserComponent) {\n        this.fileBrowserComponent = f;\n    }\n\n    public selectFiles(multiple = false, fileTypeToSelect?: string): Promise<FileContent[]> {\n        if (!this.fileBrowserComponent) {\n            return Promise.reject('File Browser component is not present.');\n        }\n        this.fileBrowserComponent.multiple = multiple;\n        this.fileBrowserComponent.fileTypeToSelect = fileTypeToSelect;\n        this.fileBrowserComponent.show = true;\n        return new Promise<any[]>((resolve, reject) => {\n            const subscription = this.fileBrowserComponent.submitEmitter.subscribe(result => {\n                return this.getFiles(_.map(result.files, 'path'))\n                    .then(files => {\n                        subscription.unsubscribe();\n                        this.fileBrowserComponent.show = false;\n                        resolve(files);\n                    }, () => {\n                        subscription.unsubscribe();\n                        this.fileBrowserComponent.show = false;\n                        reject();\n                    });\n            });\n        });\n    }\n\n    public selectImages(multiple = false): Promise<FileContent[]> {\n        const maxImg = multiple ? 10 : 1;\n        return new Promise<any>((resolve, reject) => {\n            window.imagePicker.getPictures(resolve, reject,\n                {\n                    mediaType : 0,  // allows picture selection\n                    maxImages: maxImg\n                }\n            );\n        }).then(files => {\n            const selectedFiles = files.map(filepath => {\n                if (filepath.indexOf('://') < 0) {\n                    return 'file://' + filepath;\n                }\n                return filepath;\n            });\n            return this.getFiles(selectedFiles);\n        });\n    }\n\n    public selectVideos(multiple = false): Promise<FileContent[]> {\n        const cameraOptions = {\n            destinationType   : 1,  // file_uri\n            sourceType        : 0,  // photolibrary\n            mediaType         : 1  // allows video selection\n        };\n\n        return this.camera.getPicture(cameraOptions)\n            .then(filepath => {\n            if (filepath.indexOf('://') < 0) {\n                filepath = 'file://' + filepath;\n            }\n            return this.getFiles([filepath]);\n        });\n\n    }\n\n    /**\n     * Converts the file to blob using filepath\n     * @param filePaths, array of file paths\n     * @returns fileObj having name, path, content\n     */\n    private getFiles(filePaths: string[]): Promise<FileContent[]> {\n        return Promise.all(_.map(filePaths, filePath => convertToBlob(filePath)))\n            .then(filesList => {\n                return _.map(filesList, fileObj => {\n                    const path = fileObj.filepath;\n                    return {\n                        name: path.split('/').pop(),\n                        path: path,\n                        content: fileObj.blob,\n                        size: fileObj.blob.size\n                    };\n                });\n            });\n    }\n}\n","import { Directive } from '@angular/core';\n\nimport { FileUploadComponent } from '@wm/components';\nimport { hasCordova } from '@wm/core';\n\nimport { FileContent, FileSelectorService } from '../../services/file-selector.service';\n\n@Directive({\n    selector: '[wmFileUpload]'\n})\nexport class FileUploadDirective {\n\n    constructor(\n        private fileSelectorService: FileSelectorService,\n        private fileUploadComponent: FileUploadComponent\n    ) {\n        fileUploadComponent._isMobileType = true;\n        fileUploadComponent._isCordova = hasCordova();\n        fileUploadComponent['openFileSelector'] = () => {\n            this.openFileSelector().then((contents: FileContent[]) => {\n                this.fileUploadComponent.onFileSelect({}, contents);\n            });\n        };\n    }\n\n    public openFileSelector(): Promise<FileContent[]> {\n        switch (this.fileUploadComponent['contenttype']) {\n            case 'image':\n                return this.fileSelectorService.selectImages();\n            case 'video':\n                return this.fileSelectorService.selectVideos();\n            case 'audio':\n                return this.fileSelectorService.selectAudio();\n            default:\n                return this.fileSelectorService.selectFiles();\n        }\n    }\n}\n","import { Directive, DoCheck, Inject, Input, Self } from '@angular/core';\n\nimport { WidgetRef } from '@wm/components';\nimport { hasCordova, noop } from '@wm/core';\nimport { DeviceFileCacheService } from '@wm/mobile/core';\n\nconst DEFAULT_IMAGE =  'resources/images/imagelists/default-image.png';\n\n@Directive({\n    selector: '[wmImageCache]'\n})\nexport class ImageCacheDirective implements DoCheck {\n\n    private _cacheUrl;\n    private _isEnabled = false;\n    private _lastUrl = '';\n\n    constructor(\n        @Self() @Inject(WidgetRef) private componentInstance,\n        private deviceFileCacheService: DeviceFileCacheService\n    ) {}\n\n    public ngDoCheck() {\n        if (this._isEnabled && this.componentInstance.imgSource && this.componentInstance.imgSource.startsWith('http')) {\n            if (this._lastUrl !== this.componentInstance.imgSource) {\n                this._lastUrl = this.componentInstance.imgSource;\n                this.componentInstance.imgSource = DEFAULT_IMAGE;\n                this.getLocalPath(this._lastUrl).then((localPath) => {\n                    this._cacheUrl = localPath;\n                    this.componentInstance.imgSource = this._cacheUrl;\n                });\n            } else if (this._cacheUrl) {\n                this.componentInstance.imgSource = this._cacheUrl;\n            }\n        }\n    }\n\n    @Input()\n    set wmImageCache(val: string) {\n        this._isEnabled = (hasCordova() && val === 'true');\n    }\n\n    private getLocalPath(val: string) {\n        if (hasCordova() && val && val.indexOf('{{') < 0  && val.startsWith('http')) {\n            return this.deviceFileCacheService.getLocalPath(val, true, true)\n                .catch(noop);\n        }\n        return Promise.resolve(val);\n    }\n}\n","import { Component, Injector, OnDestroy } from '@angular/core';\n\nimport { IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\n\nimport { registerProps } from './network-info-toaster.props';\nimport { $appDigest, App } from '@wm/core';\nimport { NetworkService } from '@wm/mobile/core';\n\nconst DEFAULT_CLS = 'network-info-toaster';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-network-info-toaster', hostClass: DEFAULT_CLS};\n\nexport enum NetworkState {\n    CONNECTED = 1,\n    CONNECTING = 0,\n    SERVICE_AVAILABLE_BUT_NOT_CONNECTED = -1,\n    NETWORK_AVAIABLE_BUT_SERVICE_NOT_AVAILABLE = -2,\n    NETWORK_NOT_AVAIABLE = -3\n}\n\n\n@Component({\n    selector: '[wmNetworkInfoToaster]',\n    templateUrl: './network-info-toaster.component.html',\n    providers: [\n        provideAsWidgetRef(NetworkInfoToasterComponent)\n    ]\n})\nexport class NetworkInfoToasterComponent extends StylableComponent implements OnDestroy {\n    static initializeProps = registerProps();\n\n    public showMessage = false;\n    public isServiceConnected = false;\n    public isServiceAvailable = false;\n    public networkState: NetworkState;\n\n    private _listenerDestroyer;\n\n    constructor(private networkService: NetworkService, app: App, inj: Injector) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.$element, this);\n        this.isServiceAvailable = <boolean> this.networkService.isAvailable();\n        this.isServiceConnected = this.networkService.isConnected();\n        this._listenerDestroyer = app.subscribe('onNetworkStateChange', (data) => {\n            const oldState = this.networkState;\n            let autoHide = false;\n            if (data.isConnected) {\n                this.networkState = NetworkState.CONNECTED;\n                autoHide = true;\n            } else if (data.isConnecting) {\n                this.networkState = NetworkState.CONNECTING;\n            } else if (data.isServiceAvailable) {\n                this.networkState = NetworkState.SERVICE_AVAILABLE_BUT_NOT_CONNECTED;\n            } else if (data.isNetworkAvailable && !data.isServiceAvailable) {\n                this.networkState = NetworkState.NETWORK_AVAIABLE_BUT_SERVICE_NOT_AVAILABLE;\n            } else {\n                this.networkState = NetworkState.NETWORK_NOT_AVAIABLE;\n            }\n            this.showMessage = (!(oldState === undefined && data.isConnected)  && oldState !== this.networkState);\n            if (autoHide && this.showMessage) {\n                setTimeout(() => {\n                    this.showMessage = false;\n                    $appDigest();\n                }, 5000);\n            }\n        });\n    }\n\n    public connect() {\n        this.networkService.connect();\n    }\n\n    public hideMessage() {\n        this.showMessage = false;\n    }\n\n    public ngOnDestroy() {\n        this._listenerDestroyer();\n        super.ngOnDestroy();\n    }\n}\n","import { PROP_ANY, PROP_BOOLEAN, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-media-list',\n        new Map(\n            [\n                ['class', PROP_STRING],\n                ['dataset', PROP_ANY],\n                ['layout', {value: 'Single-row', ...PROP_STRING}],\n                ['mediaurl', PROP_STRING],\n                ['name', PROP_STRING],\n                ['offline', {value: true, ...PROP_BOOLEAN}],\n                ['show', {value: true, ...PROP_BOOLEAN}],\n                ['thumbnailheight', {value: '100pt', ...PROP_STRING}],\n                ['thumbnailwidth', {value: '100pt', ...PROP_STRING}],\n                ['thumbnailurl', PROP_STRING],\n            ]\n        )\n    );\n};\n","import { Directive, Input } from '@angular/core';\n\nimport { provideAsWidgetRef } from '@wm/components';\n\n@Directive({\n    selector: '[wmMediaListItem]',\n    providers: [\n        provideAsWidgetRef(MediaListItemDirective)\n    ]\n})\nexport class MediaListItemDirective {\n\n    public index;\n    public item;\n\n    @Input() set wmMediaListItem(val) {\n        this.item = val;\n    }\n}\n","import { Directive, ElementRef, OnDestroy } from '@angular/core';\n\nimport { LeftPanelDirective, PageDirective } from '@wm/components';\nimport { addClass } from '@wm/core';\nimport { DeviceService } from '@wm/mobile/core';\n\n@Directive({\n    selector: '[wmLeftPanel]'\n})\nexport class MobileLeftPanelDirective implements OnDestroy {\n\n    private _backBtnListenerDestroyer;\n\n    constructor(\n        private page: PageDirective,\n        private leftPanelRef: LeftPanelDirective,\n        private deviceService: DeviceService,\n        elRef: ElementRef\n    ) {\n        addClass(elRef.nativeElement, 'wm-mobile-app-left-panel');\n        page.notify('wmLeftPanel:ready', leftPanelRef);\n        page.subscribe('wmLeftPanel:expand', () => {\n            this._backBtnListenerDestroyer = deviceService.onBackButtonTap(() => {\n                leftPanelRef.collapse();\n                return false;\n            });\n        });\n        page.subscribe('wmLeftPanel:collapse', () => {\n            this.destroyBackBtnListener();\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroyBackBtnListener();\n    }\n\n    private destroyBackBtnListener() {\n        if (this._backBtnListenerDestroyer) {\n            this._backBtnListenerDestroyer();\n            this._backBtnListenerDestroyer = null;\n        }\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { addClass, AbstractNavigationService, App } from '@wm/core';\nimport { PageDirective } from '@wm/components';\nimport { DeviceService } from '@wm/mobile/core';\n\ndeclare const $;\n\n@Directive({\n    selector: '[wmPage]'\n})\nexport class MobilePageDirective {\n\n    private _$ele;\n\n    constructor(app: App,\n                elRef: ElementRef,\n                private deviceService: DeviceService,\n                private page: PageDirective,\n                private navigationService: AbstractNavigationService) {\n        addClass(elRef.nativeElement, 'mobile-app-page');\n        this._$ele = $(elRef.nativeElement);\n        page.subscribe('wmMobileTabbar:ready', () => this._$ele.addClass('has-tabbar'));\n\n        // add backbutton listener on every page.\n        deviceService.onBackButtonTap($event => {\n            if (app.landingPageName === app.activePageName) {\n                window.navigator['app'].exitApp();\n            } else {\n                this.navigationService.goToPrevious();\n            }\n            return false;\n        });\n    }\n}\n","import { PROP_ANY, PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '@wm/components';\n\nexport const navbarProps = new Map(\n    [\n        ['backbutton', {value: true, ...PROP_BOOLEAN}],\n        ['backbuttoniconclass', {value: 'wi wi-back', ...PROP_STRING}],\n        ['backbuttonlabel', {value: '', ...PROP_STRING}],\n        ['backgroundattachment', PROP_STRING],\n        ['backgroundcolor', PROP_STRING],\n        ['backgroundgradient', PROP_STRING],\n        ['backgroundimage', PROP_STRING],\n        ['backgroundposition', PROP_STRING],\n        ['backgroundrepeat', PROP_STRING],\n        ['backgroundsize', PROP_STRING],\n        ['class', PROP_STRING],\n        ['datafield', {value: 'All Fields', ...PROP_STRING}],\n        ['dataset', PROP_ANY],\n        ['datasource', PROP_STRING],\n        ['datavalue', PROP_STRING],\n        ['debouncetime', {value: 250, ...PROP_NUMBER}],\n        ['defaultview', PROP_STRING],\n        ['displayimagesrc', PROP_STRING],\n        ['displaylabel', PROP_STRING],\n        ['imgsrc', PROP_STRING],\n        ['query', {value: '', ...PROP_STRING}],\n        ['leftnavpaneliconclass', {value: 'wi wi-menu', ...PROP_STRING}],\n        ['matchmode', PROP_STRING],\n        ['name', PROP_STRING],\n        ['readonlySearchBar', PROP_BOOLEAN],\n        ['searchbutton', {value: false, ...PROP_BOOLEAN}],\n        ['searchbuttoniconclass', {value: 'wi wi-search', ...PROP_STRING}],\n        ['searchbuttonlabel', {value: '', ...PROP_STRING}],\n        ['show', {value: true, ...PROP_BOOLEAN}],\n        ['showLeftnavbtn', {value: true, ...PROP_BOOLEAN}],\n        ['searchkey', PROP_STRING],\n        ['searchplaceholder', {value: 'Search', ...PROP_STRING}],\n        ['showSearchbar', PROP_BOOLEAN],\n        ['title', PROP_STRING]\n    ]\n);\n\nexport const registerProps = () => {\n    register(\n        'wm-mobile-navbar',\n        navbarProps\n    );\n};\n","import { AfterViewInit, Attribute, Component, Injector, OnDestroy, ViewChild } from '@angular/core';\n\nimport { AbstractNavigationService, App } from '@wm/core';\nimport { BaseComponent, getImageUrl, IWidgetConfig, LeftPanelDirective, PageDirective, provideAsWidgetRef, SearchComponent } from '@wm/components';\nimport { DeviceService } from '@wm/mobile/core';\n\nimport { registerProps } from './mobile-navbar.props';\n\nconst DEFAULT_CLS = 'app-mobile-header app-mobile-navbar';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-mobile-navbar', hostClass: DEFAULT_CLS};\n\n@Component({\n    selector: 'header[wmMobileNavbar]',\n    templateUrl: './mobile-navbar.component.html',\n    providers: [\n        provideAsWidgetRef(MobileNavbarComponent)\n    ]\n})\nexport class MobileNavbarComponent extends BaseComponent implements OnDestroy, AfterViewInit {\n    static initializeProps = registerProps();\n\n    private _isReady = false;\n    public datavalue: string;\n    public imagesrc: string;\n    public query: string;\n    public leftNavPanel: LeftPanelDirective;\n    public showLeftnavbtn: boolean;\n    public showSearchbar: boolean;\n    public backbuttoniconclass: any;\n\n    private _backBtnListenerDestroyer;\n\n    @ViewChild(SearchComponent) searchComponent: SearchComponent;\n    private searchkey: string;\n    private dataset: any;\n    private binddataset: any;\n    private datafield: string;\n    private binddisplaylabel: string;\n    private displaylabel: string;\n    private binddisplayimagesrc: string;\n    private displayimagesrc: string;\n    private _datasource: any;\n    private defaultview: string;\n    private matchmode: string;\n\n    // getter setter is added to pass the datasource to searchcomponent.\n    get datasource () {\n        return this._datasource;\n    }\n\n    set datasource(nv) {\n        this._datasource = nv;\n        this.searchComponent.datasource = nv;\n    }\n\n    constructor(\n        app: App,\n        private page: PageDirective,\n        private deviceService: DeviceService,\n        private navigationService: AbstractNavigationService,\n        inj: Injector,\n        @Attribute('backbtnclick.event') private backbtnClickEvt\n    ) {\n        super(inj, WIDGET_CONFIG);\n        page.subscribe('wmLeftPanel:ready', (leftNavPanel: LeftPanelDirective) => {\n            if (this.showLeftnavbtn) {\n                this.leftNavPanel = leftNavPanel;\n            }\n        });\n        this._backBtnListenerDestroyer = deviceService.onBackButtonTap($event => {\n            if (this._isReady) {\n                if (this.backbtnClickEvt) {\n                    this.invokeEventCallback('backbtnclick', {$event});\n                    return false;\n                }\n            }\n        });\n        setTimeout(() => this._isReady = true, 1000);\n    }\n\n    ngAfterViewInit() {\n        this.searchComponent.binddisplayimagesrc = this.binddisplayimagesrc;\n        this.searchComponent.displayimagesrc = this.binddisplayimagesrc ? this.binddisplayimagesrc : this.displayimagesrc;\n        this.searchComponent.displaylabel = this.binddisplaylabel ? this.binddisplaylabel : this.displaylabel;\n        this.searchComponent.datafield = this.datafield;\n        this.searchComponent.binddataset = this.binddataset;\n        this.searchComponent.dataset = this.dataset;\n        this.searchComponent.searchkey = this.searchkey;\n        this.searchComponent.datasource = this.datasource;\n        this.searchComponent.matchmode = this.matchmode;\n    }\n\n\n    public goBack($event): void {\n         /**\n          * TODO: while trying navigating from details page to edit page in wavereads, app is navigating\n          * as details -> editPage -> details. For now, keeping this callback to react after 1 second.\n          */\n         this.deviceService.executeBackTapListeners($event);\n    }\n\n    public ngOnDestroy() {\n        this._backBtnListenerDestroyer();\n        super.ngOnDestroy();\n    }\n\n    public onPropertyChange(key, nv, ov?) {\n        if (this.searchComponent) {\n            if (key === 'datafield') {\n                this.searchComponent.datafield = this.datafield;\n            }\n            if (key === 'displaylabel') {\n                this.searchComponent.displaylabel = this.binddisplaylabel ? this.binddisplaylabel : this.displaylabel;\n            }\n        }\n\n        if (key === 'imgsrc') {\n            this.imagesrc = getImageUrl(nv);\n        } else if (key === 'dataset') {\n            // $is._dataset = nv;\n        } else if (key === 'defaultview') {\n            this.showSearchbar = (nv === 'searchview');\n        } else if (key === 'datavalue') {\n            this.query = nv;\n        } else {\n            super.onPropertyChange(key, nv, ov);\n        }\n    }\n\n    public onSubmission($event): void {\n        this.invokeEventCallback('search', {$event});\n    }\n\n    // switches the view based on defaultview\n    private switchView(view) {\n        this.showSearchbar = (view !== 'actionview');\n    }\n\n    // goto previous view or page\n    public goBacktoPreviousView($event) {\n        if (this.defaultview === 'actionview') {\n            // switches the view from search to action or action to search.\n            this.switchView('actionview');\n        } else {\n            // goes back to the previous visited page.\n            this.goBack($event);\n        }\n    }\n\n    private onSelect($event, widget, selectedValue) {\n        this.datavalue = selectedValue;\n        this.query = widget.query;\n        this.invokeEventCallback('change', {\n            $event,\n            newVal: selectedValue,\n            oldVal: widget.prevDatavalue\n        });\n    }\n\n    private onClear() {\n        this.datavalue = '';\n        this.query = '';\n    }\n}\n","import { register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-network-info-toaster',\n        new Map(\n            []\n        )\n    );\n};\n","import { Component, ElementRef } from '@angular/core';\n\nimport { addClass } from '@wm/core';\nimport { provideAsWidgetRef } from '@wm/components';\n\n@Component({\n    selector: '[wmPageContentLoader]',\n    templateUrl: './page-content-loader.component.html',\n    providers: [\n        provideAsWidgetRef(PageContentLoaderComponent)\n    ]\n})\nexport class PageContentLoaderComponent {\n\n    constructor(el: ElementRef) {\n        addClass(el.nativeElement, 'app-page-content-loader');\n    }\n}\n","import { Component, DoCheck, ElementRef } from '@angular/core';\n\nimport { addClass, removeAttr, setAttr } from '@wm/core';\nimport { provideAsWidgetRef } from '@wm/components';\n\ndeclare const _;\n\nexport interface Process {\n    max: number;\n    min: number;\n    name: string;\n    onStop: () => void;\n    progressLabel: string;\n    show: boolean;\n    stopButtonLabel: string;\n    value: number;\n}\n\nexport interface ProcessApi {\n    destroy: () => Promise<void>;\n    get: (propertyName: string) => string;\n    set: (propertyName: string, propertyValue: any) => void;\n}\n\nconst MAX_PROCESS = 3;\n\n@Component({\n    selector: '[wmProcessManager]',\n    templateUrl: './process-manager.component.html',\n    providers: [\n        provideAsWidgetRef(ProcessManagerComponent)\n    ]\n})\nexport class ProcessManagerComponent implements DoCheck {\n\n    private isVisible = true;\n\n    public instances: Process[] = [];\n    public queue = [];\n\n    constructor(private el: ElementRef) {\n        addClass(this.el.nativeElement, 'app-global-progress-bar modal default');\n    }\n\n    public createInstance(name: string, min = 0, max = 100): Promise<ProcessApi> {\n        const instance: Process = {\n            max: max,\n            min: min,\n            name: name,\n            onStop: null,\n            progressLabel: '',\n            show: min !== max,\n            stopButtonLabel : 'Cancel',\n            value: 0\n        };\n        const api = {\n            get: (propertyName) => instance[propertyName],\n            set: (propertyName, propertyValue) => this.setInstaceProperty(instance, propertyName, propertyValue),\n            destroy: () => this.removeInstance(instance)\n        };\n        return this.addToQueue(instance).then(() => api);\n    }\n\n    public getVisibleInstances() {\n        return this.instances.filter(i => i.show);\n    }\n\n    public ngDoCheck() {\n        const hasInstancesToShow = !!this.instances.find(i => i.show);\n        if (this.isVisible && !hasInstancesToShow) {\n            setAttr(this.el.nativeElement, 'hidden', 'true');\n            this.isVisible = false;\n        } else if (!this.isVisible && hasInstancesToShow) {\n            removeAttr(this.el.nativeElement, 'hidden');\n            this.isVisible = true;\n        }\n    }\n\n    private addToQueue(instance): Promise<void> {\n        return new Promise( resolve => {\n            this.queue.push(() => {\n                if (this.instances.length < MAX_PROCESS) {\n                    this.instances.push(instance);\n                    resolve(instance);\n                } else {\n                    return false;\n                }\n            });\n            this.flushQueue();\n        });\n    }\n\n    private flushQueue() {\n        if (this.queue.length > 0 && this.queue[0]() !== false) {\n            this.queue.shift();\n            this.flushQueue();\n        }\n    }\n\n    private removeInstance(instance: Process): Promise<void> {\n        return new Promise( resolve => {\n            setTimeout(() => {\n                _.remove(this.instances, instance);\n                this.flushQueue();\n                resolve();\n            }, 1000);\n        });\n    }\n\n    private setInstaceProperty(instance: Process, propertyName: string, propertyValue: any) {\n        if (propertyName === 'value') {\n            if (instance.value >= instance.max) {\n                propertyValue = instance.max;\n            }\n            instance.value = propertyValue;\n            instance.progressLabel = instance.value + '/' + instance.max;\n        } else if (propertyName === 'onStop' && _.isFunction(propertyValue)) {\n            instance.onStop = () => {\n                propertyValue();\n                return this.removeInstance(instance);\n            };\n        } else {\n            instance[propertyName] = propertyValue;\n        }\n        instance.show = instance.min !== instance.max;\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { switchClass } from '@wm/core';\n\n@Directive({\n    selector: '[wmSearch]'\n})\nexport class SearchDirective {\n\n    constructor(elRef: ElementRef) {\n        switchClass(elRef.nativeElement, 'app-mobile-search');\n    }\n}\n","import { AfterViewInit, Component, Injector } from '@angular/core';\n\nimport { APPLY_STYLES_TYPE, IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\nimport { isNumber, setCSS, setCSSFromObj } from '@wm/core';\n\nimport { registerProps } from './segmented-control.props';\nimport { SegmentContentComponent } from './segment-content/segment-content.component';\n\nconst DEFAULT_CLS = 'app-segmented-control';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-segmented-control', hostClass: DEFAULT_CLS};\n\n@Component({\n    selector: '[wmSegmentedControl]',\n    templateUrl: './segmented-control.component.html',\n    providers: [\n        provideAsWidgetRef(SegmentedControlComponent)\n    ]\n})\nexport class SegmentedControlComponent extends StylableComponent implements AfterViewInit {\n    static initializeProps = registerProps();\n\n    private _$container;\n\n    public contents: SegmentContentComponent[] = [];\n    public currentSelectedIndex = 0;\n\n    constructor(inj: Injector) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this, APPLY_STYLES_TYPE.SCROLLABLE_CONTAINER);\n    }\n\n    public addContent(content: SegmentContentComponent) {\n        this.contents.push(content);\n    }\n\n    public goToNext() {\n        this.showContent(this.currentSelectedIndex + 1);\n    }\n\n    public goToPrev() {\n        this.showContent(this.currentSelectedIndex - 1);\n    }\n\n    public ngAfterViewInit() {\n        this._$container = this.$element.find('>.app-segments-container');\n        const childEls = this._$container.find('>.list-inline >li');\n        const maxWidth = `${this.contents.length * 100}%`;\n        setCSSFromObj(this._$container[0], {\n            maxWidth: maxWidth,\n            width: maxWidth,\n            'white-space': 'nowrap',\n            transition: 'transform 0.2s linear'\n        });\n        const width = `${100 / this.contents.length}%`;\n        for (const child of Array.from(childEls)) {\n            setCSS(child as HTMLElement, 'width', width);\n        }\n        this.showContent(0, undefined, true);\n    }\n\n    public onPropertyChange(key, nv, ov?) {\n        if (key === 'tabindex') {\n            return;\n        } else {\n            super.onPropertyChange(key, nv, ov);\n        }\n    }\n\n    public removeContent(content: SegmentContentComponent) {\n        const index = this.contents.findIndex(c => {\n            return c === content;\n        });\n        if (index >= 0) {\n            this.contents.splice(index, 1);\n            if (index < this.contents.length) {\n                this.showContent(index);\n            } else if (this.contents.length > 0) {\n                this.showContent(0);\n            }\n        }\n    }\n\n    public showContent(content: number | SegmentContentComponent , $event?: any, defaultLoad?: boolean) {\n        let index: number;\n        let selectedContent: SegmentContentComponent;\n        if (isNumber(content)) {\n            index = content as number;\n            if (this.contents.length) {\n                selectedContent = this.contents[index];\n            }\n        } else {\n            selectedContent = content as SegmentContentComponent;\n            index = this.contents.findIndex(c => {\n                return c === content;\n            });\n        }\n\n        if (selectedContent) {\n            selectedContent.loadContent(defaultLoad);\n        }\n\n        if (index < 0 || index >= this.contents.length) {\n            return;\n        }\n        if ($event) {\n            $event.stopPropagation();\n        }\n        const eventData = {\n                $old : this.currentSelectedIndex,\n                $new : index\n            };\n\n        this.currentSelectedIndex = index;\n        this.invokeEventCallback('beforesegmentchange', eventData);\n        setCSS(this._$container[0], 'transform', `translate3d(${-1 *  index / this.contents.length * 100}%, 0, 0)`);\n        this.invokeEventCallback('segmentchange', eventData);\n    }\n}\n","import { PROP_BOOLEAN, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-segmented-control',\n        new Map(\n            [\n                ['class', PROP_STRING],\n                ['name', PROP_STRING],\n                ['show', {value: true, ...PROP_BOOLEAN}]\n            ]\n        )\n    );\n};\n","import { AfterViewInit, Component, Injector } from '@angular/core';\n\nimport { APPLY_STYLES_TYPE, IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\n\nimport { registerProps } from './segment-content.props';\nimport { SegmentedControlComponent } from '../segmented-control.component';\n\ndeclare const _;\n\nconst DEFAULT_CLS = 'app-segment-content clearfix';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-segment-content', hostClass: DEFAULT_CLS};\n\n@Component({\n    selector: '[wmSegmentContent]',\n    templateUrl: './segment-content.component.html',\n    providers: [\n        provideAsWidgetRef(SegmentContentComponent)\n    ]\n})\nexport class SegmentContentComponent extends StylableComponent implements AfterViewInit {\n    static initializeProps = registerProps();\n\n    private loadmode: string;\n    public compile = false;\n    private loaddelay: number;\n\n    constructor(private segmentedControl: SegmentedControlComponent, inj: Injector) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this, APPLY_STYLES_TYPE.SCROLLABLE_CONTAINER);\n        segmentedControl.addContent(this);\n    }\n\n    public ngAfterViewInit() {\n        // load the content on demand when loadmode is not specified\n        if (!this.loadmode) {\n            this.loadContent(true);\n        }\n    }\n\n    public navigate() {\n        this.segmentedControl.showContent(this);\n    }\n\n    // sets the compile flag to load the content\n    private _loadContent() {\n        if (!this.compile) {\n            this.compile = true;\n            this.invokeEventCallback('ready');\n        }\n    }\n\n    public loadContent(defaultLoad) {\n        if (this.loadmode === 'after-delay' || defaultLoad) {\n            setTimeout(this._loadContent.bind(this), defaultLoad ? 0 : this.loaddelay);\n        } else {\n            this._loadContent();\n        }\n    }\n}\n","import { PROP_BOOLEAN, PROP_NUMBER, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-segment-content',\n        new Map(\n            [\n                ['caption', {value: '', ...PROP_STRING}],\n                ['class', PROP_STRING],\n                ['content', PROP_STRING],\n                ['iconclass', {value: '', ...PROP_STRING}],\n                ['loadmode', PROP_STRING],\n                ['loaddelay', {value: 10, ...PROP_NUMBER}],\n                ['name', PROP_STRING],\n                ['show', {value: true, ...PROP_BOOLEAN}]\n            ]\n        )\n    );\n};\n","import { Directive } from '@angular/core';\n\nimport { TimeComponent } from '@wm/components';\n\n@Directive({\n    selector: '[wmTime]'\n})\nexport class TimeDirective {\n\n    constructor(timeComponent: TimeComponent) {\n        timeComponent.useDatapicker = false;\n    }\n}\n","import { AfterViewInit, Attribute, Component, Injector, OnDestroy } from '@angular/core';\n\nimport { getEvaluatedData, IWidgetConfig, PageDirective, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\n\nimport { registerProps } from './tabbar.props';\n\ndeclare const $;\ndeclare const _;\nconst DEFAULT_CLS = 'app-tabbar app-top-nav';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-mobile-tabbar', hostClass: DEFAULT_CLS};\n\ninterface TabItem {\n    icon: string;\n    label: string;\n    link?: string;\n    value?: string;\n}\n\n@Component({\n    selector: 'div[wmMobileTabbar]',\n    templateUrl: './tabbar.component.html',\n    providers: [\n        provideAsWidgetRef(MobileTabbarComponent)\n    ]\n})\nexport class MobileTabbarComponent extends StylableComponent implements AfterViewInit, OnDestroy {\n    static initializeProps = registerProps();\n\n    public tabItems = [];\n    public layout: any = {};\n    public position: any;\n    public bottom: any;\n    public morebuttoniconclass: any;\n    public morebuttonlabel: any;\n    public showMoreMenu: any;\n\n    private readonly _layouts = [\n        {minwidth: 2048, max: 12},\n        {minwidth: 1024, max: 10},\n        {minwidth: 768, max: 7},\n        {minwidth: 480, max: 5},\n        {minwidth: 0, max: 4}\n    ];\n\n    constructor(\n        private page: PageDirective,\n        inj: Injector,\n        @Attribute('itemlabel.bind') public binditemlabel,\n        @Attribute('itemicon.bind') public binditemicon,\n        @Attribute('itemicon.bind') public binditemlink\n    ) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this);\n        page.notify('wmMobileTabbar:ready', this);\n    }\n\n    public onPropertyChange(key, nv, ov?) {\n        if (key === 'dataset') {\n            if (nv) {\n                this.tabItems = this.getTabItems(nv);\n            }\n        } else {\n            super.onPropertyChange(key, nv, ov);\n        }\n    }\n\n    public ngAfterViewInit() {\n        setTimeout(() => {\n            this.layout = this.getSuitableLayout();\n            $(window).on('resize.tabbar', _.debounce(() => this.layout = this.getSuitableLayout(), 20));\n        });\n        super.ngAfterViewInit();\n    }\n\n    public ngOnDestroy() {\n        $(window).off('.tabbar');\n        super.ngOnDestroy();\n    }\n\n    // triggered on item selection\n    public onItemSelect($event, selectedItem: TabItem) {\n        this.invokeEventCallback('select', {$event, $item: selectedItem.value || selectedItem.label});\n    }\n\n    private getItems(itemArray: any[]): TabItem[] {\n        return itemArray.map(item => ({\n            label: item,\n            icon: 'wi wi-' + item\n        }));\n    }\n\n    private getSuitableLayout() {\n        const avaiableWidth: number = $(this.nativeElement).parent().width();\n        return this._layouts.find(l => avaiableWidth >= l.minwidth);\n    }\n\n    private getTabItems(value: any): TabItem[] {\n        if (_.isArray(value)) {\n            if (_.isObject(value[0])) {\n                return (value as any[]).map(item => {\n                    const link = getEvaluatedData(item, {expression: 'itemlink', 'bindExpression': this.binditemlink}, this.viewParent) || item.link;\n                    const activePageName = window.location.hash.substr(2);\n                    return {\n                        label: getEvaluatedData(item, {expression: 'itemlabel', bindExpression: this.binditemlabel}, this.viewParent) || item.label,\n                        icon: getEvaluatedData(item, {expression: 'itemicon', bindExpression: this.binditemicon}, this.viewParent) || item.icon,\n                        link: link,\n                        active: _.includes([activePageName, '#' + activePageName, '#/' + activePageName], link)\n                    };\n                });\n            } else {\n                return this.getItems(value as any[]);\n            }\n        } else if (_.isString(value)) {\n            return this.getItems((value as string).split(','));\n        }\n    }\n\n}\n","import { PROP_ANY, PROP_BOOLEAN, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-mobile-tabbar',\n        new Map(\n            [\n                ['class', PROP_STRING],\n                ['dataset', PROP_ANY],\n                ['itemicon', PROP_STRING],\n                ['itemlabel', PROP_STRING],\n                ['itemlink', PROP_STRING],\n                ['morebuttoniconclass', {value: 'wi wi-more-horiz', ...PROP_STRING}],\n                ['morebuttonlabel', {value: 'more', ...PROP_STRING}],\n                ['name', PROP_STRING],\n                ['show', {value: true, ...PROP_BOOLEAN}]\n            ]\n        )\n    );\n};\n","import { Component, Injector } from '@angular/core';\n\nimport { APPLY_STYLES_TYPE, IWidgetConfig, provideAsWidgetRef, StylableComponent, styler } from '@wm/components';\n\nimport { registerProps } from './widget-template.props';\n\nconst DEFAULT_CLS = 'app-widget-template';\nconst WIDGET_CONFIG: IWidgetConfig = {widgetType: 'wm-widget-template', hostClass: DEFAULT_CLS};\n\n@Component({\n    selector: '[wmWidgetTemplate]',\n    templateUrl: './widget-template.component.html',\n    providers: [\n        provideAsWidgetRef(WidgetTemplateComponent)\n    ]\n})\nexport class WidgetTemplateComponent extends StylableComponent {\n    static initializeProps = registerProps();\n\n    constructor(inj: Injector) {\n        super(inj, WIDGET_CONFIG);\n        styler(this.nativeElement, this, APPLY_STYLES_TYPE.SCROLLABLE_CONTAINER);\n    }\n\n    public onPropertyChange(key, nv, ov?) {\n        if (key === 'tabindex') {\n            return;\n        } else {\n            super.onPropertyChange(key, nv, ov);\n        }\n    }\n}\n","import { PROP_BOOLEAN, PROP_STRING, register } from '@wm/components';\n\nexport const registerProps = () => {\n    register(\n        'wm-widget-template',\n        new Map(\n            [\n                ['name', PROP_STRING],\n                ['show', {value: true, ...PROP_BOOLEAN}]\n            ]\n        )\n    );\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WmComponentsModule } from '@wm/components';\n\nimport { AnchorDirective } from './widgets/anchor/anchor.directive';\nimport { AppUpdateComponent } from './widgets/app-update/app-update.component';\nimport { BarcodeScannerComponent } from './widgets/barcode-scanner/barcode-scanner.component';\nimport { CameraComponent } from './widgets/camera/camera.component';\nimport { DateDirective } from './widgets/date/date.directive';\nimport { DateTimeDirective } from './widgets/date-time/date-time.directive';\nimport { FileBrowserComponent } from './widgets/file-browser/file-browser.component';\nimport { FileUploadDirective } from './widgets/file-upload/file-upload.directive';\nimport { ImageCacheDirective } from './widgets/image-cache/image-cache.directive';\nimport { MediaListComponent } from './widgets/media-list/media-list.component';\nimport { MediaListItemDirective } from './widgets/media-list/media-list-item/media-list-item.directive';\nimport { MobileLeftPanelDirective } from './widgets/left-panel/left-panel.directive';\nimport { MobilePageDirective } from './widgets/page/page.directive';\nimport { MobileNavbarComponent } from './widgets/mobile-navbar/mobile-navbar.component';\nimport { NetworkInfoToasterComponent } from './widgets/network-info-toaster/network-info-toaster.component';\nimport { PageContentLoaderComponent } from './widgets/page-content-loader/page-content-loader.component';\nimport { ProcessManagerComponent } from './widgets/process-manager/process-manager.component';\nimport { SearchDirective } from './widgets/search/search.directive';\nimport { SegmentContentComponent } from './widgets/segmented-control/segment-content/segment-content.component';\nimport { SegmentedControlComponent } from './widgets/segmented-control/segmented-control.component';\nimport { TimeDirective } from './widgets/time/time.directive';\nimport { MobileTabbarComponent } from './widgets/tabbar/tabbar.component';\nimport { WidgetTemplateComponent } from './widgets/widget-template/widget-template.component';\n\nconst wmMobileComponents = [\n    AnchorDirective,\n    AppUpdateComponent,\n    BarcodeScannerComponent,\n    CameraComponent,\n    DateDirective,\n    DateTimeDirective,\n    FileBrowserComponent,\n    FileUploadDirective,\n    ImageCacheDirective,\n    MediaListComponent,\n    MediaListItemDirective,\n    MobileLeftPanelDirective,\n    MobileNavbarComponent,\n    MobilePageDirective,\n    MobileTabbarComponent,\n    NetworkInfoToasterComponent,\n    PageContentLoaderComponent,\n    ProcessManagerComponent,\n    SearchDirective,\n    SegmentContentComponent,\n    SegmentedControlComponent,\n    TimeDirective,\n    WidgetTemplateComponent\n];\n\nconst PIPES = [];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        WmComponentsModule\n    ],\n    declarations: [...wmMobileComponents, ...PIPES],\n    exports: [...wmMobileComponents, ...PIPES],\n    providers: [\n        // add providers to mobile-runtime module.\n    ],\n    entryComponents: []\n})\nexport class WmMobileComponentsModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ProcessManagerComponent, ProcessApi } from '../widgets/process-manager/process-manager.component';\n\n@Injectable({ providedIn: 'root' })\nexport class ProcessManagementService {\n\n    private processManagerComponent: ProcessManagerComponent;\n\n    setUIComponent(processManagerComponent: ProcessManagerComponent) {\n        this.processManagerComponent = processManagerComponent;\n    }\n\n    /**\n     * Returns a promise that will be resolved when an instance is available. At max, 3 instances can only run\n     * in parallel and rest has to wait till a process is completed.\n     *\n     * A progress instance has the following properties.\n     *\n     *   1) min {number} minimum value, default value is 0 </br>\n     *   2) max {number} maximum value, default value is 100 </br>\n     *   3) value {number} progress value </br>\n     *   4) progressLabel {string} process name </br>\n     *   5) stopButtonLabel {string} label for stop button, default value is 'Cancel' </br>\n     *   6) onStop {function} function to invoke when stop button is clicked. </br>\n     *\n     * A progress instance has 3 methods </br>\n     *   1) set(property, value) -- sets value to the corresponding property </br>\n     *   2) get(property) -- returns property value </br>\n     *   3) destroy() -- closes the instance. </br>\n     *\n     * A progress instance will get auto closed when value and max are equal or when destroy method is called.\n     *\n     * @param {string} name name of the process whose progress is going to be shown\n     * @param {number} min minimum value\n     * @param {number} max maximum value\n     *\n     * @returns {object} a promise\n     */\n    public createInstance(name: string, min?: number, max?: number): Promise<ProcessApi> {\n        if (!this.processManagerComponent) {\n            return Promise.reject('ProcessManagerComponent is missing');\n        }\n        return this.processManagerComponent.createInstance(name, min, max);\n    }\n}\n"]}