{"version":3,"file":"index.js.map","sources":["ng://@wm/mobile/variables/services/calendar-service.ts","ng://@wm/mobile/variables/services/camera-service.ts","ng://@wm/mobile/variables/services/file-service.ts","ng://@wm/mobile/variables/services/datasync-service.ts","ng://@wm/mobile/variables/services/device-service.ts","ng://@wm/mobile/variables/services/contacts-service.ts","ng://@wm/mobile/variables/services/scan-service.ts","ng://@wm/mobile/variables/variables.module.ts","ng://@wm/mobile/variables/index.ts"],"sourcesContent":["import { Calendar } from '@ionic-native/calendar';\n\nimport { DeviceVariableService, IDeviceVariableOperation } from '@wm/variables';\n\nconst DEFAULT_TIME = new Date().getTime();\n/*3 months timestamp value*/\nconst DELTA_VALUE_DATE =  (3 * 30 * 24 * 60 * 60 * 1000);\nconst DEFAULT_START_DATE = (DEFAULT_TIME - DELTA_VALUE_DATE);\nconst DEFAULT_END_DATE = (DEFAULT_TIME + DELTA_VALUE_DATE);\nconst EVENT_META = {\n    title: '',\n    message: '',\n    location: '',\n    startDate: new Date(),\n    endDate: new Date()\n};\n\n/**\n * this file contains all calendar operations under 'calendar' service.\n */\nexport class CalendarService extends DeviceVariableService {\n    public readonly name = 'calendar';\n    public readonly operations: IDeviceVariableOperation[] = [];\n\n    constructor(calendar: Calendar) {\n        super();\n        this.operations.push(new CreateEventOperation(calendar),\n            new DeleteEventOperation(calendar),\n            new GetEventsOperation(calendar));\n    }\n}\n\nclass CreateEventOperation implements IDeviceVariableOperation {\n    public readonly name = 'createEvent';\n    public readonly properties = [\n            {target: 'eventTitle', type: 'string', dataBinding: true},\n            {target: 'eventNotes', type: 'string', dataBinding: true},\n            {target: 'eventLocation', type: 'string', dataBinding: true},\n            {target: 'eventStart', type: 'datetime', dataBinding: true},\n            {target: 'eventEnd', type: 'datetime', dataBinding: true}\n        ];\n    public readonly requiredCordovaPlugins = ['CALENDAR'];\n\n    constructor(private calendar: Calendar) {\n\n    }\n\n    public invoke(variable: any, options: any, eventInfo: Map<string, any>): Promise<any> {\n        return this.calendar.createEvent(\n            eventInfo.get('eventTitle'),\n            eventInfo.get('eventLocation'),\n            eventInfo.get('eventNotes'),\n            new Date(eventInfo.get('eventStart') || 0),\n            new Date(eventInfo.get('eventEnd') || 0));\n    }\n}\n\nclass DeleteEventOperation implements IDeviceVariableOperation {\n    public readonly name = 'deleteEvent';\n    public readonly properties = [\n        {target: 'eventTitle', type: 'string', dataBinding: true},\n        {target: 'eventNotes', type: 'string', dataBinding: true},\n        {target: 'eventLocation', type: 'string', dataBinding: true},\n        {target: 'eventStart', type: 'datetime', dataBinding: true},\n        {target: 'eventEnd', type: 'datetime', dataBinding: true}\n    ];\n    public readonly requiredCordovaPlugins = ['CALENDAR'];\n\n    constructor(private calendar: Calendar) {\n\n    }\n\n    public invoke(variable: any, options: any, eventInfo: Map<string, any>): Promise<any> {\n        return this.calendar.deleteEvent(\n            eventInfo.get('eventTitle'),\n            eventInfo.get('eventLocation'),\n            eventInfo.get('eventNotes'),\n            new Date(eventInfo.get('eventStart') || DEFAULT_START_DATE),\n            new Date(eventInfo.get('eventEnd') || DEFAULT_END_DATE));\n    }\n}\n\nclass GetEventsOperation implements IDeviceVariableOperation {\n    public readonly name = 'getEvents';\n    public readonly model = [EVENT_META];\n    public readonly properties = [\n        {target: 'eventTitle', type: 'string', dataBinding: true},\n        {target: 'eventNotes', type: 'string', dataBinding: true},\n        {target: 'eventLocation', type: 'string', dataBinding: true},\n        {target: 'eventStart', type: 'datetime', dataBinding: true},\n        {target: 'eventEnd', type: 'datetime', dataBinding: true}\n    ];\n    public readonly requiredCordovaPlugins = ['CALENDAR'];\n\n    constructor(private calendar: Calendar) {\n\n    }\n\n    public invoke(variable: any, options: any, eventInfo: Map<string, any>): Promise<any> {\n        return this.calendar.findEvent(\n            eventInfo.get('eventTitle'),\n            eventInfo.get('eventLocation'),\n            eventInfo.get('eventNotes'),\n            new Date(eventInfo.get('eventStart') || DEFAULT_START_DATE),\n            new Date(eventInfo.get('eventEnd') || DEFAULT_END_DATE));\n    }\n}\n","import { Camera } from '@ionic-native/camera';\nimport { MediaCapture } from '@ionic-native/media-capture';\n\nimport { isNumber } from '@wm/core';\nimport { DeviceVariableService, IDeviceVariableOperation } from '@wm/variables';\n\nexport class CameraService extends DeviceVariableService {\n    public readonly name = 'camera';\n    public readonly operations: IDeviceVariableOperation[] = [];\n\n    constructor(camera: Camera, mediaCapture: MediaCapture) {\n        super();\n        this.operations.push(new CaptureImageOperation(camera),\n            new CaptureVideoOperation(mediaCapture));\n    }\n}\n\nclass CaptureImageOperation implements IDeviceVariableOperation {\n    public readonly name = 'captureImage';\n    public readonly model = {\n        imagePath: 'resources/images/imagelists/default-image.png'\n    };\n    public readonly properties = [\n            {target: 'allowImageEdit', type: 'boolean', value: false, dataBinding: true},\n            {target: 'imageQuality', type: 'number', value: 80, dataBinding: true},\n            {target: 'imageEncodingType', type: 'list', options: {'0': 'JPEG', '1': 'PNG'}, value: '0', dataBinding: true},\n            {target: 'correctOrientation', type: 'boolean', value: true, dataBinding: true},\n            {target: 'imageTargetWidth', type: 'number', dataBinding: true},\n            {target: 'imageTargetHeight', type: 'number', dataBinding: true}\n        ];\n    public readonly requiredCordovaPlugins = ['CAMERA', 'CAPTURE'];\n\n    constructor(private camera: Camera) {\n\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        const imageTargetWidth = dataBindings.get('imageTargetWidth'),\n            imageTargetHeight = dataBindings.get('imageTargetHeight');\n        let imageEncodingType = parseInt(dataBindings.get('imageEncodingType'), 10),\n            cameraOptions;\n        if (isNaN(imageEncodingType)) {\n            imageEncodingType = (dataBindings.get('imageEncodingType') === 'JPEG' ? 0 : 1);\n        }\n        cameraOptions = {\n                quality           : dataBindings.get('imageQuality'),\n                destinationType   : 1, // only file url\n                sourceType        : 1, // camera\n                allowEdit         : dataBindings.get('allowImageEdit'),\n                encodingType      : imageEncodingType,\n                mediaType         : 0, // always picture\n                correctOrientation: dataBindings.get('correctOrientation'),\n                targetWidth       : isNumber(imageTargetWidth) ?  imageTargetWidth : undefined,\n                targetHeight      : isNumber(imageTargetHeight) ? imageTargetHeight : undefined,\n            };\n        return this.camera.getPicture(cameraOptions).then( data => {\n            return {imagePath: data};\n        });\n    }\n}\n\nclass CaptureVideoOperation implements IDeviceVariableOperation {\n    public readonly name = 'captureVideo';\n    public readonly model = {\n        videoPath: ''\n    };\n    public readonly properties = [];\n    public readonly requiredCordovaPlugins = ['CAMERA', 'CAPTURE'];\n\n    constructor(private mediaCapture: MediaCapture) {\n\n    }\n\n    public invoke(variable: any, options: any): Promise<any> {\n        return this.mediaCapture.captureVideo({\n            limit : 1\n        }).then( data => {\n            return {videoPath: data[0].fullPath};\n        });\n    }\n}\n","import { isValidWebURL } from '@wm/core';\nimport { DeviceFileOpenerService, DeviceFileUploadService } from '@wm/mobile/core';\nimport { $rootScope, DeviceVariableService, IDeviceVariableOperation } from '@wm/variables';\n\ndeclare const _;\n\nexport class FileService extends DeviceVariableService {\n    name = 'file';\n    operations: IDeviceVariableOperation[] = [];\n\n    constructor(fileOpener: DeviceFileOpenerService, fileUploader: DeviceFileUploadService) {\n        super();\n        this.operations.push(new OpenFileOperation(fileOpener),\n            new UploadFileOperation(fileUploader));\n    }\n}\n\nclass OpenFileOperation implements IDeviceVariableOperation {\n\n    private _defaultFileTypesToOpen = {\n        'doc' : {'label' : 'Microsoft Office Word Document', 'mimeType' : 'application/msword', 'extension' : 'doc'},\n        'pdf' : {'label' : 'PDF Document', 'mimeType' : 'application/pdf', 'extension' : 'pdf'},\n        'ppt' : {'label' : 'Microsoft Office Powerpoint', 'mimeType' : 'application/vnd.ms-powerpoint', 'extension' : 'ppt'},\n        'xls' : {'label' : 'Microsoft Office Excel', 'mimeType' : 'application/vnd.ms-excel', 'extension' : 'xls'}\n    };\n\n    public readonly name = 'openFile';\n    public readonly model = {};\n    public readonly properties = [\n        {target: 'filePath', type: 'string', value: '', dataBinding: true},\n        {target: 'fileType', type: 'list', options: _.mapValues(this._defaultFileTypesToOpen, 'label'),  value: 'pdf', dataBinding: true, hide: true},\n        {target: 'spinnerContext', hide: false},\n        {target: 'spinnerMessage', hide: false}\n    ];\n    public readonly requiredCordovaPlugins = [];\n\n    constructor(private fileOpener: DeviceFileOpenerService) {}\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        const fileType = this._defaultFileTypesToOpen[dataBindings.get('fileType')];\n        let filePath = dataBindings.get('filePath');\n        // if relative path is given, then append url with deployedUrl, to access files in resources.\n        if (!isValidWebURL(filePath)) {\n            filePath = $rootScope.project.deployedUrl + filePath;\n        }\n        return this.fileOpener.openRemoteFile(filePath, fileType.extension);\n    }\n}\n\nclass UploadFileOperation implements IDeviceVariableOperation {\n\n    public readonly name = 'upload';\n    public readonly model = {\n        fileName    : '',\n        path        : '',\n        length      : 0,\n        success     : false,\n        inlinePath  : '',\n        errorMessage: '',\n        inProgress  : false,\n        loaded      : 0\n    };\n    public readonly properties = [\n        {target: 'localFile', type: 'string', value: '', dataBinding: true},\n        {target: 'remoteFolder', type: 'string', value: '', dataBinding: true},\n        {target: 'onProgress', hide : false},\n        {target: 'spinnerContext', hide : false},\n        {target: 'spinnerMessage', hide : false}\n    ];\n    public readonly requiredCordovaPlugins = [];\n\n    constructor(private fileUploader: DeviceFileUploadService) {}\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        const serverUrl = $rootScope.project.deployedUrl + 'services/file/uploadFile?relativePath=' + (dataBindings.get('remoteFolder') || ''),\n            filePath = dataBindings.get('localFile'),\n            fileName = filePath.split('/').pop(),\n            data = {\n                fileName    : fileName,\n                fileSize    : 0,\n                inProgress  : true,\n                length      : 0,\n                loaded      : 0\n            };\n        return this.fileUploader.upload(serverUrl, 'files', filePath, fileName)\n            .then(uploadResponse => {\n                _.assignIn(data, JSON.parse(uploadResponse.text)[0]);\n                data.loaded = data.length;\n                return data;\n            });\n    }\n}\n","import { Observer } from 'rxjs/index';\n\nimport { App, noop, toPromise } from '@wm/core';\nimport { NetworkService } from '@wm/mobile/core';\nimport { FileSelectorService, ProcessApi, ProcessManagementService } from '@wm/mobile/components';\nimport { Change, ChangeLogService, LocalDBManagementService, LocalDBDataPullService, PushInfo, PullInfo } from '@wm/mobile/offline';\nimport { DeviceVariableService, IDeviceVariableOperation, initiateCallback, VARIABLE_CONSTANTS } from '@wm/variables';\nimport { SecurityService } from '@wm/security';\n\ndeclare const _;\n\nconst APP_IS_OFFLINE = 'App is offline.';\nconst OFFLINE_PLUGIN_NOT_FOUND = 'Offline DB Plugin is required, but missing.';\nconst ON_BEFORE_BLOCKED = 'onBefore callback returned false.';\nconst REQUIRED_PLUGINS = ['OFFLINE_DB', 'NETWORK'];\n\nexport class DatasyncService extends DeviceVariableService {\n    public readonly name = 'datasync';\n    public readonly operations: IDeviceVariableOperation[] = [];\n\n    constructor(app: App,\n                changeLogService: ChangeLogService,\n                fileSelectorService: FileSelectorService,\n                localDBManagementService: LocalDBManagementService,\n                localDBDataPullService: LocalDBDataPullService,\n                processManagementService: ProcessManagementService,\n                securityService: SecurityService,\n                networkService: NetworkService) {\n        super();\n        this.operations.push(new ExportDBOperation(localDBManagementService));\n        this.operations.push(new GetOfflineChangesOperation(changeLogService));\n        this.operations.push(new ImportDBOperation(fileSelectorService, localDBManagementService));\n        this.operations.push(new LastPullInfoOperation(localDBDataPullService));\n        this.operations.push(new LastPushInfoOperation(changeLogService));\n        this.operations.push(new PullOperation(app, processManagementService, networkService, securityService, localDBDataPullService));\n        this.operations.push(new PushOperation(app, changeLogService, processManagementService, networkService, securityService));\n    }\n}\n\nclass ExportDBOperation implements IDeviceVariableOperation {\n    public readonly name = 'exportDB';\n    public readonly model = {path: ''};\n    public readonly properties = [\n        {target: 'spinnerContext', hide: false},\n        {target: 'spinnerMessage', hide: false}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(private localDBManagementService: LocalDBManagementService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        if (window['SQLitePlugin']) {\n            return this.localDBManagementService.exportDB();\n        }\n        return Promise.reject(OFFLINE_PLUGIN_NOT_FOUND);\n    }\n}\n\n\nclass GetOfflineChangesOperation implements IDeviceVariableOperation {\n    private static DATA_CHANGE_TEMPLATE = {\n        service: 'DatabaseService',\n        operation: 'operation',\n        params: {\n            data: {},\n            dataModelName: 'dataModelName',\n            entityName: 'entityName'\n        },\n        hasError: 0,\n        errorMessage: ''\n    };\n    private static CHANGE_LOG_SET = {\n        total: 0,\n        database: {\n            create: [GetOfflineChangesOperation.DATA_CHANGE_TEMPLATE],\n            update: [GetOfflineChangesOperation.DATA_CHANGE_TEMPLATE],\n            delete: [GetOfflineChangesOperation.DATA_CHANGE_TEMPLATE]\n        },\n        uploads: [{\n            service: 'OfflineFileUploadService',\n            operation: 'uploadToServer',\n            params: {\n                file: 'localFilePath',\n                serverUrl: 'serverUrl',\n                ftOptions: {}\n            },\n            hasError: 0,\n            errorMessage: ''\n        }]\n    };\n    public readonly name = 'getOfflineChanges';\n    public readonly model = {\n        total: 0,\n        pendingToSync: GetOfflineChangesOperation.CHANGE_LOG_SET,\n        failedToSync: GetOfflineChangesOperation.CHANGE_LOG_SET\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean', value: true, hide: true},\n        {target: 'autoUpdate', type: 'boolean', value: true, hide: true}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(private changeLogService: ChangeLogService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        if (window['SQLitePlugin']) {\n            return getOfflineChanges(this.changeLogService);\n        }\n        return Promise.reject(OFFLINE_PLUGIN_NOT_FOUND);\n    }\n}\n\nclass LastPullInfoOperation implements IDeviceVariableOperation {\n    public readonly name = 'lastPullInfo';\n    public readonly model = {\n        databases : [{\n            name : 'datbaseName',\n            entities: [{\n                entityName: 'entityName',\n                pulledRecordCount: 0\n            }],\n            pulledRecordCount: 0\n        }],\n        totalPulledRecordCount: 0,\n        startTime: new Date().toJSON(),\n        endTime: new Date().toJSON()\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean', value: true, hide: true},\n        {target: 'spinnerContext', hide: false},\n        {target: 'spinnerMessage', hide: false}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(private localDBDataPullService: LocalDBDataPullService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        if (window['SQLitePlugin']) {\n            return this.localDBDataPullService.getLastPullInfo();\n        }\n        return Promise.reject(OFFLINE_PLUGIN_NOT_FOUND);\n    }\n}\n\nclass LastPushInfoOperation implements IDeviceVariableOperation {\n    public readonly name = 'lastPushInfo';\n    public readonly model = {\n        successfulTaskCount: 0,\n        failedTaskCount: 0,\n        completedTaskCount: 0,\n        totalTaskCount: 0,\n        startTime: new Date().toJSON(),\n        endTime: new Date().toJSON()\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean', value: true, hide: true},\n        {target: 'spinnerContext', hide: false},\n        {target: 'spinnerMessage', hide: false}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(private changeLogService: ChangeLogService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        if (window['SQLitePlugin']) {\n            return this.changeLogService.getLastPushInfo();\n        }\n        return Promise.reject(OFFLINE_PLUGIN_NOT_FOUND);\n    }\n}\n\nclass ImportDBOperation implements IDeviceVariableOperation {\n    public readonly name = 'importDB';\n    public readonly model = {};\n    public readonly properties = [\n        {target: 'spinnerContext', hide: false},\n        {target: 'spinnerMessage', hide: false}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(\n        private fileSelectorService: FileSelectorService,\n        private localDBManagementService: LocalDBManagementService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        if (window['SQLitePlugin']) {\n            return this.fileSelectorService.selectFiles(false,  'zip')\n                .then(files => {\n                if (files && files.length) {\n                    return this.localDBManagementService.importDB(files[0].path, true);\n                }\n            });\n        }\n        return Promise.reject(OFFLINE_PLUGIN_NOT_FOUND);\n    }\n}\n\nclass PullOperation implements IDeviceVariableOperation {\n    public readonly name = 'pull';\n    public readonly model = {\n        totalTaskCount: 0,\n        completedTaskCount: 0,\n        inProgress: false\n    };\n    public readonly properties = [\n        {target: 'clearData', type: 'boolean', widgettype: 'boolean-inputfirst', value: true, group: 'properties', subGroup: 'behavior'},\n        {target: 'startUpdate', type: 'boolean', hide: false},\n        {target: 'onBefore', hide: false},\n        {target: 'onProgress', hide: false},\n        {target: 'showProgress', hide: false}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(\n        private app: App,\n        private processManagementService: ProcessManagementService,\n        private networkService: NetworkService,\n        private securityService: SecurityService,\n        private localDBDataPullService: LocalDBDataPullService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        let progressInstance;\n        return canExecute(variable, this.networkService, this.securityService)\n            .then(() => {\n                if (variable.showProgress) {\n                    return this.processManagementService.createInstance(this.app.appLocale.LABEL_DATA_PULL_PROGRESS, 0, 0);\n                }\n                return null;\n            }).then((instance: ProcessApi) => {\n                const progressObserver: Observer<PullInfo> = {\n                    next: (pullInfo: PullInfo) => {\n                        // variable.dataSet = progress; Todo: progress\n                        initiateCallback('onProgress', variable, pullInfo);\n                        if (progressInstance) {\n                            progressInstance.set('max', pullInfo.totalRecordsToPull);\n                            progressInstance.set('value', pullInfo.totalPulledRecordCount);\n                        }\n                    }, error: noop, complete: noop};\n\n                const clearData = variable.clearData === 'true' || variable.clearData === true,\n                    pullPromise = this.localDBDataPullService.pullAllDbData(clearData, progressObserver);\n                if (instance) {\n                    progressInstance = instance;\n                    progressInstance.set('stopButtonLabel', this.app.appLocale.LABEL_DATA_PULL_PROGRESS_STOP_BTN);\n                    progressInstance.set('onStop', () => {\n                        this.localDBDataPullService.cancel(pullPromise);\n                    });\n                }\n            return pullPromise;\n        }).catch(pullInfo => pullInfo)\n            .then(pullInfo => {\n                if (progressInstance) {\n                    progressInstance.destroy();\n                }\n                return pullInfo;\n            });\n    }\n}\n\nclass PushOperation implements IDeviceVariableOperation {\n    public readonly name = 'push';\n    public readonly model = {\n        successfulTaskCount: 0,\n        failedTaskCount: 0,\n        completedTaskCount: 0,\n        totalTaskCount: 0,\n        inProgress: false\n    };\n    public readonly properties = [\n        {target: 'onBefore', hide: false},\n        {target: 'onProgress', hide: false},\n        {target: 'showProgress', 'hide': false, 'value': true}\n    ];\n    public readonly requiredCordovaPlugins = REQUIRED_PLUGINS;\n\n    constructor(private app: App,\n                private changeLogService: ChangeLogService,\n                private processManagementService: ProcessManagementService,\n                private networkService: NetworkService,\n                private securityService: SecurityService) {\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        let progressInstance;\n        if (this.changeLogService.isFlushInProgress()) {\n            return Promise.resolve();\n        }\n        return canExecute(variable, this.networkService, this.securityService)\n            .then(() => getOfflineChanges(this.changeLogService))\n            .then(changes => {\n                if (changes.pendingToSync.total <= 0) {\n                    return Promise.reject(_.clone(this.model));\n                }\n            }).then(() => {\n                if (variable.showProgress) {\n                    return this.processManagementService.createInstance(this.app.appLocale.LABEL_DATA_PUSH_PROGRESS, 0, 0);\n                }\n                return null;\n            }).then((instance: ProcessApi) => {\n                const progressObserver: Observer<PushInfo> = {\n                    next: (pushInfo: PushInfo) => {\n                        pushInfo = addOldPropertiesForPushData(pushInfo);\n                        initiateCallback('onProgress', variable, pushInfo);\n                        if (progressInstance) {\n                            progressInstance.set('max', pushInfo.totalTaskCount);\n                            progressInstance.set('value', pushInfo.completedTaskCount);\n                        }\n                    }, error: noop, complete: noop};\n                const pushPromise = this.changeLogService.flush(progressObserver);\n                if (instance) {\n                    progressInstance = instance;\n                    progressInstance.set('stopButtonLabel', this.app.appLocale.LABEL_DATA_PUSH_PROGRESS_STOP_BTN);\n                    progressInstance.set('onStop', () => this.changeLogService.stop());\n                }\n                return pushPromise;\n            })\n            .catch(pushInfo => pushInfo)\n            .then(pushInfo => {\n                if (progressInstance) {\n                    progressInstance.destroy();\n                }\n                if (pushInfo && pushInfo.totalTaskCount !== undefined) {\n                    pushInfo = addOldPropertiesForPushData(pushInfo);\n                    if (pushInfo.failedTaskCount !== 0) {\n                        return Promise.reject(pushInfo);\n                    }\n                    return pushInfo;\n                }\n                return Promise.reject(pushInfo);\n            });\n    }\n}\n\n/**\n * This function adds the old properties to the push dataSet to support old projects.\n * @param data\n * @returns {*}\n */\nconst addOldPropertiesForPushData = data => {\n    const result = _.clone(data);\n    result.success = data.successfulTaskCount;\n    result.error = data.failedTaskCount;\n    result.completed = data.completedTaskCount;\n    result.total = data.totalTaskCount;\n    return result;\n};\n\nconst canExecute = (variable: any, networkService: NetworkService, securityService: SecurityService) => {\n    if (!window['SQLitePlugin']) {\n        return Promise.reject(OFFLINE_PLUGIN_NOT_FOUND);\n    }\n    if (!networkService.isConnected()) {\n        return Promise.reject(APP_IS_OFFLINE);\n    }\n    return toPromise(initiateCallback(VARIABLE_CONSTANTS.EVENT.BEFORE, variable, null))\n        .then(proceed => {\n            if (proceed === false) {\n                return Promise.reject(ON_BEFORE_BLOCKED);\n            }\n            // If user is authenticated and online, then start the data pull process.\n            return securityService.onUserLogin();\n        });\n};\n\nconst generateChangeSet = (changes: Change[]) => {\n    const createChanges =  _.filter(changes, c => {\n        return c.service === 'DatabaseService' &&\n            (c.operation === 'insertTableData'\n                || c.operation === 'insertMultiPartTableData');\n    }), updateChanges =  _.filter(changes, c => {\n        return c.service === 'DatabaseService' &&\n            (c.operation === 'updateTableData'\n                || c.operation === 'updateMultiPartTableData');\n    });\n    return {\n        total: changes ? changes.length : 0,\n        database: {\n            create: createChanges,\n            update: updateChanges,\n            delete: _.filter(changes, {service: 'DatabaseService', operation: 'deleteTableData'})\n        },\n        uploads: _.filter(changes, {service: 'OfflineFileUploadService', operation: 'uploadToServer'})\n    };\n};\n\nconst getOfflineChanges = (changeLogService: ChangeLogService) => {\n    return changeLogService.getChanges().then(changes => {\n        return {\n            'total' : changes ? changes.length : 0,\n            'pendingToSync' : generateChangeSet(_.filter(changes, {'hasError' : 0})),\n            'failedToSync' : generateChangeSet(_.filter(changes, {'hasError' : 1}))\n        };\n    });\n};\n","import { AppVersion } from '@ionic-native/app-version';\nimport { Device } from '@ionic-native/device';\nimport { Geolocation, GeolocationOptions } from '@ionic-native/geolocation';\nimport { Vibration } from '@ionic-native/vibration';\n\nimport { $appDigest, App } from '@wm/core';\nimport { NetworkService } from '@wm/mobile/core';\nimport { DeviceVariableService, IDeviceVariableOperation, initiateCallback } from '@wm/variables';\n\ndeclare const navigator, $;\n/**\n * this file contains all device operations under 'device' service.\n */\nexport class DeviceService extends DeviceVariableService {\n    public readonly name = 'device';\n    public readonly operations: IDeviceVariableOperation[] = [];\n\n    constructor(app: App,\n        appVersion: AppVersion,\n        device: Device,\n        geoLocation: Geolocation,\n        networkService: NetworkService,\n        vibrateService: Vibration) {\n        super();\n        this.operations.push(new AppInfoOperation(device, appVersion),\n            new CurrentGeoPositionOperation(geoLocation),\n            new DeviceInfoOperation(device),\n            new GetNetworkInfoOperation(app, networkService),\n            new GoOfflineOperation(networkService),\n            new GoOnlineOperation(networkService),\n            new VibrateOperation(vibrateService));\n        app.subscribe('onNetworkStateChange', data => {\n            app.networkStatus = data;\n            $appDigest();\n        });\n        app.networkStatus = {\n            isConnecting : false,\n            isConnected : true,\n            isNetworkAvailable : true,\n            isServiceAvailable : true\n        };\n    }\n}\n\n\n/**\n * This class handles 'getAppInfo' device operation.\n */\nclass AppInfoOperation implements IDeviceVariableOperation {\n    public readonly name = 'getAppInfo';\n    public readonly model = {\n        appversion: 'X.X.X',\n        cordovaversion: 'X.X.X'\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean', value: true, hide: true}\n    ];\n\n    constructor (private device: Device, private appVersion: AppVersion) {\n\n    }\n\n    public invoke(variable: any, options: any): Promise<any> {\n        const cordovaVersion = this.device.cordova;\n        return this.appVersion.getVersionNumber().then(appVersion => {\n            return {\n                appversion: appVersion,\n                cordovaversion: cordovaVersion\n            };\n        });\n    }\n}\n\n/**\n * This class handles 'getCurrentGeoPosition' device operation.\n */\nclass CurrentGeoPositionOperation implements IDeviceVariableOperation {\n    public readonly name = 'getCurrentGeoPosition';\n    public readonly model = {\n        coords: {\n            latitude: 0,\n            longitude: 0,\n            altitude: 0,\n            accuracy: 0,\n            altitudeAccuracy: 0,\n            heading: 0,\n            speed: 0\n        },\n        timestamp: 0\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean', value: true, hide : true},\n        {target: 'autoUpdate', type: 'boolean', value: true, hide : true},\n        {target: 'geolocationHighAccuracy', type: 'boolean', value: true, dataBinding: true},\n        {target: 'geolocationMaximumAge', type: 'number', value: 3, dataBinding: true},\n        {target: 'geolocationTimeout', type: 'number', value: 5, dataBinding: true}\n    ];\n    public readonly requiredCordovaPlugins = ['GEOLOCATION'];\n\n    private lastKnownPosition;\n    private waitingQueue = [];\n    private watchId;\n    private options = {\n        maximumAge: 3000,\n        timeout: (2 * 60) * 1000,\n        enableHighAccuracy: true\n    };\n\n    constructor (private geoLocation: Geolocation) {}\n\n    private watchPosition() {\n        if (this.watchId) {\n            navigator.geolocation.clearWatch(this.watchId);\n            this.watchId = null;\n        }\n        const options = window['WM_GEO_LOCATION_OPTIONS'] || this.options;\n        this.watchId = navigator.geolocation.watchPosition(position => {\n            this.lastKnownPosition = {\n                coords: {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude,\n                    altitude: position.coords.altitude,\n                    accuracy: position.coords.accuracy,\n                    altitudeAccuracy: position.coords.altitudeAccuracy,\n                    heading: position.coords.heading,\n                    speed: position.coords.speed\n                },\n                timestamp: position.timestamp\n            };\n            if (this.waitingQueue.length > 0) {\n                this.waitingQueue.forEach(fn => fn(this.lastKnownPosition));\n                this.waitingQueue.length = 0;\n            }\n            $(document).off('touchend.usergesture');\n        }, () => {\n            this.watchId = null;\n        }, options);\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        if (!this.watchId || !this.lastKnownPosition) {\n            this.watchPosition();\n            $(document).on('touchend.usergesture', () => this.watchPosition());\n        }\n        const geoLocationOptions: GeolocationOptions = {\n            maximumAge: dataBindings.get('geolocationMaximumAge') * 1000,\n            timeout: dataBindings.get('geolocationTimeout') * 1000,\n            enableHighAccuracy: dataBindings.get('geolocationHighAccuracy')\n        };\n        if (this.lastKnownPosition) {\n            return Promise.resolve(this.lastKnownPosition);\n        }\n        return new Promise(resolve => {\n            const c = position => {\n                resolve(position);\n            };\n            setTimeout(() => {\n                const index = this.waitingQueue.indexOf(c);\n                if (index > -1) {\n                    this.waitingQueue.splice(index, 1);\n                    resolve(this.model);\n                }\n            }, this.options.timeout);\n\n            this.waitingQueue.push(c);\n        });\n    }\n}\n\n\n\n/**\n * This class handles 'getDeviceInfo' device operation.\n */\nclass DeviceInfoOperation implements IDeviceVariableOperation {\n    public readonly name = 'getDeviceInfo';\n    public readonly model = {\n        deviceModel: 'DEVICEMODEL',\n        os: 'DEVICEOS',\n        osVersion: 'X.X.X',\n        deviceUUID: 'DEVICEUUID'\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean', value: true, hide: true}\n    ];\n\n    constructor (private device: Device) {\n\n    }\n\n    public invoke(variable: any, options: any): Promise<any> {\n        const response = {\n            'deviceModel': this.device.model,\n            'os': this.device.platform,\n            'osVersion': this.device.version,\n            'deviceUUID': this.device.uuid\n        };\n        return Promise.resolve(response);\n    }\n}\n\nclass GetNetworkInfoOperation implements IDeviceVariableOperation {\n    public readonly name = 'getNetworkInfo';\n    public readonly model = {\n        connectionType: 'NONE',\n        isConnecting: false,\n        isNetworkAvailable: true,\n        isOnline: true,\n        isOffline: false\n    };\n    public readonly properties = [\n        {target: 'autoUpdate', type: 'boolean', value: true, hide : true},\n        {target: 'startUpdate', type: 'boolean', value: true, hide : true},\n        {target: 'networkStatus', type: 'object', value: 'bind:App.networkStatus', dataBinding: true, hide: true},\n        {target: 'onOnline', hide : false},\n        {target: 'onOffline', hide : false}\n    ];\n    public readonly requiredCordovaPlugins = ['NETWORK'];\n\n    constructor (private app: App, private networkService: NetworkService) {\n\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        const data = {\n            connectionType: navigator.connection.type,\n            isConnecting: this.app.networkStatus.isConnecting,\n            isNetworkAvailable: this.app.networkStatus.isNetworkAvailable,\n            isOnline: this.app.networkStatus.isConnected,\n            isOffline: !this.app.networkStatus.isConnected\n        };\n        if (this.networkService.isConnected()) {\n            initiateCallback('onOnline', variable, data);\n        } else {\n            initiateCallback('onOffline', variable, data);\n        }\n        return Promise.resolve(data);\n    }\n}\n\nclass GoOfflineOperation implements IDeviceVariableOperation {\n    public readonly name = 'goOffline';\n    public readonly model = {};\n    public readonly properties = [];\n    public readonly requiredCordovaPlugins = ['NETWORK'];\n\n    constructor (private networkService: NetworkService) {\n\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        return this.networkService.disconnect();\n    }\n}\n\nclass GoOnlineOperation implements IDeviceVariableOperation {\n    public readonly name = 'goOnline';\n    public readonly model = {};\n    public readonly properties = [];\n    public readonly requiredCordovaPlugins = ['NETWORK'];\n\n    constructor (private networkService: NetworkService) {\n\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        return this.networkService.connect();\n    }\n}\n\n/**\n * This class handles 'vibrate' device operation.\n */\nclass VibrateOperation implements IDeviceVariableOperation {\n    public readonly name = 'vibrate';\n    public readonly model = {\n        appversion: 'X.X.X',\n        cordovaversion: 'X.X.X'\n    };\n    public readonly properties = [\n        {target: 'vibrationtime', type: 'number', value: 2, dataBinding: true}\n    ];\n    public readonly requiredCordovaPlugins = ['VIBRATE'];\n\n    constructor (private vibrationService: Vibration) {\n\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        this.vibrationService.vibrate(dataBindings.get('vibrationtime') * 1000);\n        return Promise.resolve();\n    }\n}\n","import { Contact, ContactFieldType, Contacts } from '@ionic-native/contacts';\n\nimport { DeviceVariableService, IDeviceVariableOperation } from '@wm/variables';\n\nexport class ContactsService extends DeviceVariableService {\n    public readonly name = 'contacts';\n    public readonly operations: IDeviceVariableOperation[] = [];\n\n    constructor(contacts: Contacts) {\n        super();\n        this.operations.push(new GetContactsOperation(contacts));\n    }\n}\n\nclass GetContactsOperation implements IDeviceVariableOperation {\n    public readonly name = 'getContacts';\n    public readonly model = {\n        id : '',\n        displayName : '',\n        phoneNumbers : [{value: ''}]\n    };\n    public readonly properties = [\n        {target: 'startUpdate', type: 'boolean'},\n        {target: 'autoUpdate', type: 'boolean'},\n        {target: 'contactFilter', type: 'string', value: '', dataBinding: true}\n    ];\n    public readonly requiredCordovaPlugins = ['CONTACTS'];\n\n    public waitingCalls: (() => void)[] = [];\n\n    constructor(private contacts: Contacts) {\n\n    }\n\n    private extractDisplayName(c: Contact): string {\n        const name = c.displayName;\n        // In IOS, displayName is undefined, so using the formatted name.\n        if (!name || name === '') {\n            if (c.name.formatted) {\n                return c.name.formatted;\n            }\n        }\n        return name;\n    }\n\n    private processNextCall() {\n        if (this.waitingCalls.length > 0) {\n            this.waitingCalls[0]();\n        }\n    }\n\n    private findContacts(requiredFields, findOptions): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            // Contacts plugin is not processing two simultaneous calls. It is anwsering to only call.\n            this.waitingCalls.push(() => {\n                this.contacts.find(requiredFields, findOptions).then(data => {\n                    if (data != null) {\n                        const contacts = data.filter(c => {\n                            c.displayName = this.extractDisplayName(c);\n                            return c.phoneNumbers && c.phoneNumbers.length > 0;\n                        });\n                        resolve(contacts);\n                    }\n                }, reject).then(() => {\n                    this.waitingCalls.shift();\n                    this.processNextCall();\n                });\n            });\n            if (this.waitingCalls.length === 1) {\n                this.processNextCall();\n            }\n        });\n    }\n\n    public invoke(variable: any, options: any, dataBindings: Map<string, any>): Promise<any> {\n        const requiredFields: ContactFieldType[] = ['displayName', 'name'];\n        const findOptions = {\n            filter : dataBindings.get('contactFilter'),\n            multiple : true\n        };\n        return this.findContacts(requiredFields, findOptions);\n    }\n}\n","import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\nimport { DeviceVariableService, IDeviceVariableOperation } from '@wm/variables';\n\nconst barcodeFormatOptions = {\n    'ALL' : 'ALL',\n    'CODABAR' : 'CODABAR (not supported in iOS)',\n    'CODE_39' : 'CODE_39',\n    'CODE_93' : 'CODE_93 (not supported in iOS)',\n    'CODE_128' : 'CODE_128',\n    'DATA_MATRIX' : 'DATA_MATRIX',\n    'EAN_8' : 'EAN_8',\n    'EAN_13' : 'EAN_13',\n    'ITF' : 'ITF',\n    'PDF_417' : 'PDF_417 (not supported in iOS)',\n    'QR_CODE' : 'QR_CODE',\n    'RSS14' : 'RSS14 (not supported in iOS)',\n    'RSS_EXPANDED' : 'RSS_EXPANDED (not supported in iOS)',\n    'UPC_E' : 'UPC_E',\n    'UPC_A' : 'UPC_A'\n};\n\nexport class ScanService extends DeviceVariableService {\n    name = 'scan';\n    operations: IDeviceVariableOperation[] = [];\n\n    constructor(barcodeScanner: BarcodeScanner) {\n        super();\n        this.operations.push(new ScanOperation(barcodeScanner));\n    }\n}\n\nclass ScanOperation implements IDeviceVariableOperation {\n    public readonly name = 'scanBarCode';\n    public readonly model = {\n        text : 'BAR CODE',\n        format : 'TEXT',\n        cancelled : false\n    };\n    public readonly properties = [\n        {\n            target    : 'barcodeFormat',\n            type      : 'list',\n            options   : barcodeFormatOptions,\n            value     : 'ALL',\n            group     : 'properties',\n            subGroup  : 'behavior',\n            hide      : false\n        }\n    ];\n    public readonly requiredCordovaPlugins = ['BARCODE_SCANNER'];\n\n    constructor(private barcodeScanner: BarcodeScanner) {\n\n    }\n\n    public invoke(variable: any, options: any): Promise<any> {\n        let scanOptions;\n        if (variable.barcodeFormat && variable.barcodeFormat !== 'ALL') {\n            scanOptions = {formats : variable.barcodeFormat};\n        }\n        return this.barcodeScanner.scan(scanOptions);\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AppVersion } from '@ionic-native/app-version';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { Calendar } from '@ionic-native/calendar';\nimport { Camera } from '@ionic-native/camera';\nimport { Device } from '@ionic-native/device';\nimport { Contacts } from '@ionic-native/contacts';\nimport { MediaCapture } from '@ionic-native/media-capture';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { Vibration } from '@ionic-native/vibration';\n\nimport { App } from '@wm/core';\nimport { DeviceFileOpenerService, DeviceFileUploadService, NetworkService } from '@wm/mobile/core';\nimport { ChangeLogService, LocalDBManagementService, LocalDBDataPullService, OfflineModule } from '@wm/mobile/offline';\nimport { SecurityService } from '@wm/security';\nimport { DeviceVariableManager, VARIABLE_CONSTANTS, VariableManagerFactory } from '@wm/variables';\n\nimport { CalendarService } from './services/calendar-service';\nimport { CameraService } from './services/camera-service';\nimport { FileService } from './services/file-service';\nimport { DatasyncService } from './services/datasync-service';\nimport { DeviceService } from './services/device-service';\nimport { ContactsService } from './services/contacts-service';\nimport { ScanService } from './services/scan-service';\nimport { FileSelectorService, ProcessManagementService } from '@wm/mobile/components';\n\n@NgModule({\n    imports: [\n        OfflineModule\n    ],\n    declarations: [],\n    providers: [\n        // add providers to mobile-runtime module.\n    ]\n})\nexport class VariablesModule {\n\n    private static initialized = false;\n    // Device variable services have to be added only once in the app life-cycle.\n    private static initialize(app: App,\n                              appVersion: AppVersion,\n                              barcodeScanner: BarcodeScanner,\n                              changeLogService: ChangeLogService,\n                              calendar: Calendar,\n                              contacts: Contacts,\n                              camera: Camera,\n                              fileOpener: DeviceFileOpenerService,\n                              fileSelectorService: FileSelectorService,\n                              fileUploader: DeviceFileUploadService,\n                              device: Device,\n                              geoLocation: Geolocation,\n                              localDBDataPullService: LocalDBDataPullService,\n                              localDBManagementService: LocalDBManagementService,\n                              mediaCapture: MediaCapture,\n                              processManagementService: ProcessManagementService,\n                              securityService: SecurityService,\n                              networkService: NetworkService,\n                              vibrateService: Vibration) {\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        const deviceVariableManager = VariableManagerFactory.get(VARIABLE_CONSTANTS.CATEGORY.DEVICE) as DeviceVariableManager;\n        deviceVariableManager.registerService(new CameraService(camera, mediaCapture));\n        deviceVariableManager.registerService(new CalendarService(calendar));\n        deviceVariableManager.registerService(new FileService(fileOpener, fileUploader));\n        deviceVariableManager.registerService(new ContactsService(contacts));\n        deviceVariableManager.registerService(new DatasyncService(app, changeLogService, fileSelectorService, localDBManagementService, localDBDataPullService, processManagementService, securityService, networkService));\n        deviceVariableManager.registerService(new DeviceService(app, appVersion, device, geoLocation, networkService, vibrateService));\n        deviceVariableManager.registerService(new ScanService(barcodeScanner));\n    }\n\n    constructor(\n        app: App,\n        appVersion: AppVersion,\n        barcodeScanner: BarcodeScanner,\n        changeLogService: ChangeLogService,\n        calendar: Calendar,\n        contacts: Contacts,\n        camera: Camera,\n        fileOpener: DeviceFileOpenerService,\n        fileSelectorService: FileSelectorService,\n        fileUploader: DeviceFileUploadService,\n        device: Device,\n        geoLocation: Geolocation,\n        localDBDataPullService: LocalDBDataPullService,\n        localDBManagementService: LocalDBManagementService,\n        mediaCapture: MediaCapture,\n        processManagementService: ProcessManagementService,\n        securityService: SecurityService,\n        networkService: NetworkService,\n        vibrateService: Vibration\n    ) {\n        VariablesModule.initialize(app,\n                                    appVersion,\n                                    barcodeScanner,\n                                    changeLogService,\n                                    calendar,\n                                    contacts,\n                                    camera,\n                                    fileOpener,\n                                    fileSelectorService,\n                                    fileUploader,\n                                    device,\n                                    geoLocation,\n                                    localDBDataPullService,\n                                    localDBManagementService,\n                                    mediaCapture,\n                                    processManagementService,\n                                    securityService,\n                                    networkService,\n                                    vibrateService);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__extends"],"mappings":"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"}
