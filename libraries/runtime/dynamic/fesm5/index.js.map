{"version":3,"file":"index.js.map","sources":["ng://@wm/runtime/dynamic/app/components/page-wrapper.component.ts","ng://@wm/runtime/dynamic/app/app.routes.ts","ng://@wm/runtime/dynamic/app/services/app-js-provider.service.ts","ng://@wm/runtime/dynamic/app/services/app-resource-manager.service.ts","ng://@wm/runtime/dynamic/app/services/app-variables-provider.service.ts","ng://@wm/runtime/dynamic/app/services/component-ref-provider.service.ts","ng://@wm/runtime/dynamic/app/services/prefab-config-provider.service.ts","ng://@wm/runtime/dynamic/app/app.module.ts","ng://@wm/runtime/dynamic/main.ts","ng://@wm/runtime/dynamic/index.ts"],"sourcesContent":["import {\n    ApplicationRef,\n    Component,\n    ElementRef,\n    Injector,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewContainerRef,\n    HostListener\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { AbstractSpinnerService, App, noop} from '@wm/core';\nimport { MetadataService } from '@wm/variables';\nimport { SecurityService } from '@wm/security';\nimport { AppManagerService, ComponentRefProvider, ComponentType } from '@wm/runtime/base';\n\n@Component({\n    selector: 'app-page-outlet',\n    template: '<div></div>'\n})\nexport class PageWrapperComponent implements OnInit, OnDestroy {\n\n    subscription: Subscription;\n\n    constructor(\n        private injector: Injector,\n        private route: ActivatedRoute,\n        private vcRef: ViewContainerRef,\n        private appRef: ApplicationRef,\n        private metadataService: MetadataService,\n        private securityService: SecurityService,\n        private appManager: AppManagerService,\n        private app: App,\n        private ngZone: NgZone,\n        private elRef: ElementRef,\n        private spinnerService: AbstractSpinnerService,\n        private componentRefProvider: ComponentRefProvider,\n        private router: Router\n    ) {}\n\n    getTargetNode() {\n        return this.elRef.nativeElement;\n    }\n\n    resetViewContainer() {\n        this.vcRef.clear();\n        const $target = this.getTargetNode();\n        $target.innerHTML = '';\n    }\n\n    renderPage(pageName) {\n        const $target = this.getTargetNode();\n\n        this.appManager.loadAppVariables()\n            .then(async () => {\n                const pageComponentFactoryRef = await this.componentRefProvider.getComponentFactoryRef(pageName, ComponentType.PAGE);\n                if (pageComponentFactoryRef) {\n                    const instance = this.vcRef.createComponent(pageComponentFactoryRef, 0, this.injector);\n                    $target.appendChild(instance.location.nativeElement);\n                }\n                if (this.vcRef.length > 1) {\n                    this.vcRef.remove(1);\n                }\n            });\n    }\n\n    renderPrefabPreviewPage() {\n        this.router.navigate(['prefab-preview']);\n    }\n\n    /**\n     * canDeactivate is called before a route change.\n     * This will internally call onBeforePageLeave method present\n     * at page level and app level in the application and decide\n     * whether to change route or not based on return value.\n     */\n    @HostListener('window:beforeunload')\n    canDeactivate() {\n        let retVal;\n        // Calling onBeforePageLeave method present at page level\n        retVal = this.app.activePage && this.app.activePage.onBeforePageLeave();\n        // Calling onBeforePageLeave method present at app level only if page level method return true\n        // or if there is no page level method\n        if (retVal !== false ) {\n            retVal =  (this.app.onBeforePageLeave || noop)(this.app.activePageName, this.app.activePage);\n        }\n        return retVal === undefined ? true : retVal;\n    }\n\n    ngOnInit() {\n        if (this.app.isPrefabType) {\n            // there is only one route\n            this.renderPrefabPreviewPage();\n        } else {\n            $(this.getTargetNode()).find('>div:first').remove();\n            this.subscription = this.route.params.subscribe(({pageName}: any) => {\n                this.ngZone.run(() => {\n                    if (pageName) {\n                        this.renderPage(pageName);\n                    }\n                });\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.vcRef.clear();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n","import { AppJSResolve, MetadataResolve } from '@wm/runtime/base';\nimport { SecurityConfigResolve, PrefabPreviewComponent, CanDeactivatePageGuard, EmptyPageComponent } from '@wm/runtime/base';\n\nimport { PageWrapperComponent } from './components/page-wrapper.component';\n\nconst appDependenciesResolve = {\n    securityConfig: SecurityConfigResolve,\n    metadata: MetadataResolve,\n    appJS: AppJSResolve\n};\n\nexport const routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        resolve: appDependenciesResolve,\n        component: EmptyPageComponent\n    },\n    {\n        path: 'prefab-preview',\n        pathMatch: 'full',\n        resolve: appDependenciesResolve,\n        component: PrefabPreviewComponent\n    },\n    {\n        path: ':pageName',\n        pathMatch: 'full',\n        resolve: appDependenciesResolve,\n        component: PageWrapperComponent,\n        canDeactivate: [CanDeactivatePageGuard]\n    }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AppJSProvider } from '@wm/runtime/base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppJSProviderService extends AppJSProvider {\n    constructor(private $http: HttpClient) {\n        super();\n    }\n\n    public getAppScriptFn(): Promise<Function> {\n        return this.$http.get('./app.js', {responseType: 'text'})\n            .toPromise()\n            .then(script => new Function('App', 'Utils', 'Injector', script));\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { AbstractHttpService, App } from '@wm/core';\n\nconst cache = new Map<string, string>();\n\n@Injectable()\nexport class AppResourceManagerService {\n\n    get(url: string, useCache?: boolean): string | any {\n        const cachedResponse = cache.get(url);\n\n        if (cachedResponse) {\n            return Promise.resolve(cachedResponse);\n        }\n\n        return this.$http.get(url).then(response => {\n            if (useCache) {\n                cache.set(url, response);\n            }\n            return response;\n        });\n    }\n\n    public clearCache() {\n        cache.clear();\n    }\n\n    constructor(private $http: AbstractHttpService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { AppVariablesProvider } from '@wm/runtime/base';\nimport { AppResourceManagerService } from './app-resource-manager.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppVariablesProviderService extends AppVariablesProvider {\n    constructor(private resourceManager: AppResourceManagerService) {\n        super();\n    }\n\n    public async getAppVariables(): Promise<any> {\n        return this.resourceManager.get('./app.variables.json');\n    }\n}\n","import {\n    Compiler,\n    Component,\n    CUSTOM_ELEMENTS_SCHEMA,\n    Injectable,\n    Injector,\n    NgModule,\n    NO_ERRORS_SCHEMA,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { App, getValidJSON, UserDefinedExecutionContext } from '@wm/core';\nimport { transpile, scopeComponentStyles } from '@wm/transpiler';\nimport {\n    AppManagerService,\n    BasePageComponent,\n    BasePartialComponent,\n    BasePrefabComponent,\n    ComponentRefProvider,\n    ComponentType,\n    RuntimeBaseModule,\n    getPrefabMinJsonUrl\n} from '@wm/runtime/base';\n\nimport { AppResourceManagerService } from './app-resource-manager.service';\n\ninterface IPageMinJSON {\n    markup: string;\n    script: string;\n    styles: string;\n    variables: string;\n    config?: string;\n}\n\ndeclare const window: any;\n\nconst fragmentCache = new Map<string, any>();\n\nwindow.resourceCache = fragmentCache;\n\nconst componentFactoryRefCache = new Map<ComponentType, Map<string, any>>();\n\ncomponentFactoryRefCache.set(ComponentType.PAGE, new Map<string, any>());\ncomponentFactoryRefCache.set(ComponentType.PARTIAL, new Map<string, any>());\ncomponentFactoryRefCache.set(ComponentType.PREFAB, new Map<string, any>());\n\nconst _decodeURIComponent = (str: string) => decodeURIComponent(str.replace(/\\+/g, ' '));\n\nconst getFragmentUrl = (fragmentName: string, type: ComponentType) => {\n    if (type === ComponentType.PAGE || type === ComponentType.PARTIAL) {\n        return `./pages/${fragmentName}/page.min.json`;\n    } else if (type === ComponentType.PREFAB) {\n        return getPrefabMinJsonUrl(fragmentName);\n    }\n};\n\nconst scriptCache = new Map<string, Function>();\nconst execScript = (\n    script: string,\n    identifier: string,\n    ctx: string,\n    instance: any,\n    app: any,\n    utils: any\n) => {\n    let fn = scriptCache.get(identifier);\n    if (!fn) {\n        fn = new Function(ctx, 'App', 'Utils', script);\n        scriptCache.set(identifier, fn);\n    }\n    fn(instance, app, utils);\n};\n\nclass BaseDynamicComponent {\n    init() {}\n}\n\nconst getDynamicModule = (componentRef: any) => {\n    @NgModule({\n        declarations: [componentRef],\n        imports: [\n            RuntimeBaseModule\n        ],\n        schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n    })\n    class DynamicModule {}\n\n    return DynamicModule;\n};\n\nconst getDynamicComponent = (\n    componentName,\n    type: ComponentType,\n    template: string,\n    css: string,\n    script: any,\n    variables: string,\n) => {\n\n    const componentDef = {\n        template,\n        styles: [css],\n        encapsulation: ViewEncapsulation.None\n    };\n\n    let BaseClass: any = BaseDynamicComponent;\n    let selector = '';\n    let context = '';\n\n    switch (type) {\n        case ComponentType.PAGE:\n            BaseClass = BasePageComponent;\n            selector = `app-page-${componentName}`;\n            context = 'Page';\n            break;\n        case ComponentType.PARTIAL:\n            BaseClass = BasePartialComponent;\n            selector = `app-partial-${componentName}`;\n            context = 'Partial';\n            break;\n        case ComponentType.PREFAB:\n            BaseClass = BasePrefabComponent;\n            selector = `app-prefab-${componentName}`;\n            context = 'Prefab';\n            break;\n    }\n\n    @Component({\n        ...componentDef,\n        selector,\n        providers: [\n            {\n                provide: UserDefinedExecutionContext,\n                useExisting: DynamicComponent\n            }\n        ]\n    })\n    class DynamicComponent extends BaseClass {\n        pageName;\n        partialName;\n        prefabName;\n\n        constructor(public injector: Injector) {\n            super();\n\n            switch (type) {\n                case ComponentType.PAGE:\n                    this.pageName = componentName;\n                    break;\n                case ComponentType.PARTIAL:\n                    this.partialName = componentName;\n                    break;\n                case ComponentType.PREFAB:\n                    this.prefabName = componentName;\n                    break;\n            }\n\n            super.init();\n        }\n\n        evalUserScript(instance: any, appContext: any, utils: any) {\n            execScript(script, selector, context, instance, appContext, utils);\n        }\n\n        getVariables() {\n            return JSON.parse(variables);\n        }\n    }\n\n    return DynamicComponent;\n};\n\n@Injectable()\nexport class ComponentRefProviderService extends ComponentRefProvider {\n\n    private loadResourcesOfFragment(componentName, componentType): Promise<IPageMinJSON> {\n        const url = getFragmentUrl(componentName, componentType);\n\n        const resource = fragmentCache.get(url);\n\n        if (resource) {\n            return Promise.resolve(resource);\n        }\n\n        return this.resouceMngr.get(url, true)\n            .then(({markup, script, styles, variables}: IPageMinJSON) => {\n                const response = {\n                    markup: transpile(_decodeURIComponent(markup)),\n                    script: _decodeURIComponent(script),\n                    styles: scopeComponentStyles(componentName, componentType, _decodeURIComponent(styles)),\n                    variables: getValidJSON(_decodeURIComponent(variables))\n                };\n                fragmentCache.set(url, response);\n\n                return response;\n            }, e => {\n                const status = e.details.status;\n                const errorMsgMap = {\n                    404 : this.app.appLocale.MESSAGE_PAGE_NOT_FOUND || 'The page you are trying to reach is not available',\n                    403 : this.app.appLocale.LABEL_ACCESS_DENIED || 'Access Denied'\n                };\n                return Promise.reject(errorMsgMap[status]);\n            });\n    }\n\n    constructor(\n        private resouceMngr: AppResourceManagerService,\n        private app: App,\n        private appManager: AppManagerService,\n        private compiler: Compiler\n    ) {\n        super();\n    }\n\n    public async getComponentFactoryRef(componentName: string, componentType: ComponentType): Promise<any> {\n        // check in the cache.\n        const componentFactoryMap = componentFactoryRefCache.get(componentType);\n        let componentFactoryRef;\n        if (componentFactoryMap) {\n            componentFactoryRef = componentFactoryMap.get(componentName);\n\n            if (componentFactoryRef) {\n                return componentFactoryRef;\n            }\n        }\n\n        return this.loadResourcesOfFragment(componentName, componentType)\n            .then(({markup, script, styles, variables})  => {\n\n                const componentDef = getDynamicComponent(componentName, componentType, markup, styles, script, JSON.stringify(variables));\n                const moduleDef = getDynamicModule(componentDef);\n\n                componentFactoryRef = this.compiler\n                    .compileModuleAndAllComponentsSync(moduleDef)\n                    .componentFactories\n                    .filter(factory => factory.componentType === componentDef)[0];\n\n                componentFactoryRefCache.get(componentType).set(componentName, componentFactoryRef);\n\n                return componentFactoryRef;\n            }, (err) => {\n                if (err) {\n                    this.appManager.notifyApp(\n                        err,\n                        'error'\n                    );\n                }\n            });\n    }\n\n    // clears the cache map\n    public clearComponentFactoryRefCache() {\n        this.resouceMngr.clearCache();\n        fragmentCache.clear();\n        componentFactoryRefCache.forEach(map => {\n            map.clear();\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { getPrefabConfigUrl, PrefabConfigProvider } from '@wm/runtime/base';\n\nimport { AppResourceManagerService } from './app-resource-manager.service';\n\nconst cache = new Map<string, any>();\n@Injectable()\nexport class PrefabConfigProviderService extends PrefabConfigProvider {\n\n    constructor(private resourceMngr: AppResourceManagerService) {\n        super();\n    }\n\n    public getConfig(prefabName: string): Promise<any> {\n        const config = cache.get(prefabName);\n        if (config) {\n            return Promise.resolve(config);\n        }\n\n        return this.resourceMngr.get(getPrefabConfigUrl(prefabName))\n            .then(_config => {\n                cache.set(prefabName, _config);\n                return _config;\n            });\n    }\n}\n","import { Injector, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { App, getWmProjectProperties } from '@wm/core';\n\nimport {\n    AppComponent,\n    AppJSProvider,\n    AppVariablesProvider,\n    ComponentRefProvider,\n    PrefabConfigProvider,\n    WM_MODULES_FOR_ROOT,\n    PartialRefProvider\n} from '@wm/runtime/base';\n\nimport { routes } from './app.routes';\nimport { PageWrapperComponent } from './components/page-wrapper.component';\nimport { AppJSProviderService } from './services/app-js-provider.service';\nimport { AppVariablesProviderService } from './services/app-variables-provider.service';\nimport { ComponentRefProviderService } from './services/component-ref-provider.service';\nimport { PrefabConfigProviderService } from './services/prefab-config-provider.service';\nimport { AppResourceManagerService } from './services/app-resource-manager.service';\n\nexport const routerModule = RouterModule.forRoot(routes, {useHash: true, scrollPositionRestoration: 'top'});\nexport const toastrModule = ToastrModule.forRoot({maxOpened: 1, autoDismiss: true });\nexport const httpClientXsrfModule = HttpClientXsrfModule.withOptions({\n    cookieName: 'wm_xsrf_token',\n    headerName: getWmProjectProperties().xsrf_header_name\n});\n\n@NgModule({\n    declarations: [\n        PageWrapperComponent\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        RouterModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n\n        routerModule,\n        toastrModule,\n        httpClientXsrfModule,\n\n        WM_MODULES_FOR_ROOT\n    ],\n    providers: [\n        AppResourceManagerService,\n        {provide: AppJSProvider, useClass: AppJSProviderService},\n        {provide: AppVariablesProvider, useClass: AppVariablesProviderService},\n        {provide: ComponentRefProvider, useClass: ComponentRefProviderService},\n        {provide: PartialRefProvider, useClass: ComponentRefProviderService},\n        {provide: PrefabConfigProvider, useClass: PrefabConfigProviderService}\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor(private app: App, private inj: Injector, private componentRefProvider: ComponentRefProvider) {\n        if (window['cordova']) {\n            // clear the cached urls on logout, to load the Login Page and not the Main Page as app reload(window.location.reload) is not invoked in mobile\n            this.app.subscribe('userLoggedOut', this.componentRefProvider.clearComponentFactoryRefCache.bind(this.componentRefProvider));\n        }\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\ndeclare const _;\nconst DEBUG_MODE = 'debugMode';\n\nif (sessionStorage.getItem(DEBUG_MODE) !== 'true') {\n    enableProdMode();\n}\n\nconsole.time('bootstrap');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    new Promise( resolve => {\n        if (window['cordova']) {\n            document.addEventListener('deviceready', resolve);\n        } else {\n            resolve();\n        }\n    }).then(() => platformBrowserDynamic().bootstrapModule(AppModule))\n        .then(() => console.timeEnd('bootstrap'), err => console.log(err));\n});\n\n(window as any).debugMode = function(on) {\n    if (_.isEmpty(on)) {\n        on = true;\n    }\n    const value = on ? 'true' : 'false';\n    if (sessionStorage.getItem(DEBUG_MODE) !== value) {\n        sessionStorage.setItem(DEBUG_MODE, value);\n        window.location.reload();\n    }\n};\n\nexport default () => {};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {routes as Éµa} from './app/app.routes';\nexport {PageWrapperComponent as Éµb} from './app/components/page-wrapper.component';\nexport {AppJSProviderService as Éµd} from './app/services/app-js-provider.service';\nexport {AppResourceManagerService as Éµc} from './app/services/app-resource-manager.service';\nexport {AppVariablesProviderService as Éµe} from './app/services/app-variables-provider.service';\nexport {ComponentRefProviderService as Éµf} from './app/services/component-ref-provider.service';\nexport {PrefabConfigProviderService as Éµg} from './app/services/prefab-config-provider.service';"],"names":["tslib_1.__extends","cache"],"mappings":"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"}
