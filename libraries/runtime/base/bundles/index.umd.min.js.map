{"version":3,"sources":["ng://@wm/runtime/base/types/types.ts","ng://@wm/runtime/base/services/app.manager.service.ts","ng://@wm/runtime/base/util/utils.ts","ng://@wm/runtime/base/services/prefab-manager.service.ts","node_modules/tslib/tslib.es6.js","ng://@wm/runtime/base/directives/accessroles.directive.ts","ng://@wm/runtime/base/util/fragment-monitor.ts","ng://@wm/runtime/base/components/base-partial.component.ts","ng://@wm/runtime/base/components/base-page.component.ts","ng://@wm/runtime/base/components/base-prefab.component.ts","ng://@wm/runtime/base/directives/partial-container.directive.ts","ng://@wm/runtime/base/components/app-spinner.component.ts","ng://@wm/runtime/base/components/custom-toaster.component.ts","ng://@wm/runtime/base/components/empty-component/empty-page.component.ts","ng://@wm/runtime/base/directives/prefab.directive.ts","ng://@wm/runtime/base/services/app.service.ts","ng://@wm/runtime/base/services/toaster.service.ts","ng://@wm/runtime/base/services/i18n.service.ts","ng://@wm/runtime/base/services/spinner.service.ts","ng://@wm/runtime/base/services/navigation.service.ts","ng://@wm/runtime/base/services/app-defaults.service.ts","ng://@wm/runtime/base/guards/auth.guard.ts","ng://@wm/runtime/base/guards/role.guard.ts","ng://@wm/runtime/base/guards/page-not-found.gaurd.ts","ng://@wm/runtime/base/resolves/app-js.resolve.ts","ng://@wm/runtime/base/resolves/i18n.resolve.ts","ng://@wm/runtime/base/services/pipe-provider.service.ts","ng://@wm/runtime/base/components/app-component/app.component.ts","ng://@wm/runtime/base/services/http-interceptor.services.ts","ng://@wm/runtime/base/components/prefab-preview.component.ts","ng://@wm/runtime/base/services/dynamic-component-ref-provider.service.ts","ng://@wm/runtime/base/guards/can-deactivate-page.guard.ts","ng://@wm/runtime/base/runtime-base.module.ts","ng://@wm/runtime/base/resolves/app-variables.resolve.ts","ng://@wm/runtime/base/resolves/metadata.resolve.ts","ng://@wm/runtime/base/resolves/security-config.resolve.ts"],"names":["ComponentType","POST_MESSAGES","ComponentRefProvider","prototype","clearComponentFactoryRefCache","PrefabConfigProvider","AppJSProvider","AppVariablesProvider","PartialRefProvider","AppManagerService","$http","$security","$dialog","$router","$app","$variables","$metadata","$spinner","$i18n","$datePipe","_this","this","appVariablesLoaded","appVariablesFired","_noRedirect","registerOnSessionTimeout","handle401","bind","registerDependency","subscribe","data","variable","active","_","isEmpty","trim","spinnerContext","_spinnerId","spinnerId","show","spinnerMessage","_id","Date","now","spinnerclass","push","hide","shift","setLandingPage","then","window","navigate","d","page","options","showLoginDialog","open","$appDigest","loadAppJS","loadCommonPage","loadSecurityConfig","load","r","landingPageName","loadMetadata","loadAppVariables","variables","Promise","resolve","init","response","register","extend","Variables","Actions","updateLoggedInUserVariable","updateSupportedLocaleVariable","isDefined","get","isAppVariablesFired","isFired","clearLoggedInUserVariable","isAuthenticated","roles","name","undefined","id","tenantId","loggedInUser","securityConfig","securityEnabled","authenticated","isSecurityEnabled","userInfo","userRoles","userName","userId","catch","err","handleSSOLogin","config","pageParams","getRedirectPage","CONSTANTS","hasCordova","lastLoggedInUsername_1","authInBrowser","reloadAppData","presentLoggedInUsername","routerService","encodeURIComponent","getQueryString","getRedirectedRouteQueryParams","document","body","textContent","getAppLocale","ssoUrl","getDeployedURL","self","top","parent","location","href","sessionTimeoutConfig","loginConfig","LOGIN_METHOD","queryParamsObj","sessionTimeout","type","toUpperCase","getCurrentRoutePage","merge","pageName","queryParams","noRedirect","value","isUndefined","executeSessionFailureRequests","pushToSessionFailureRequests","callback","pushToSessionFailureQueue","deployedUrl","$rootScope","project","notify","eventName","getActivePage","activePage","appLocale","getSelectedLocale","notifyApp","template","title","appOnBeforeServiceCall","requestParams","triggerFn","onBeforeServiceCall","appOnServiceSuccess","xhrObj","onServiceSuccess","appOnServiceError","xhrOb","onServiceError","appVariablesReady","onAppVariablesReady","getPipe","pipe","getPageByLoggedInUser","p","isPrefabType","isTemplateBundleType","postMessage","content","showTemplate","idx","templates","postTemplateBundleInfo","onmessage","evt","msgData","isObject","key","HIDE_TEMPLATES_SHOW_CASE","SELECT_TEMPLATE","templateIndex","setTimeout","ON_LOAD","fetchContent","error","TEMPLATEBUNDLE_CONFIG","postAppTypeInfo","Injectable","AbstractHttpService","SecurityService","AbstractDialogService","Router","App","VariablesService","MetadataService","AbstractSpinnerService","AbstractI18nService","DatePipe","isPrefabInPreview","prefabName","getPrefabBaseUrl","prefabsWithError","Set","inProgress","Map","resolvedPrefabs","getPrefabResourceUrl","resourcePath","resourceBasePath","_url","stringStartsWith","replace","PrefabManagerService","prefabConfigProvider","getConfig","loadServiceDefs","loadStyles","_a","styles","resources","baseUrl","_styles","map","url","endsWith","filter","loadStyleSheets","loadScripts","scripts","_scripts","setInProgress","_res","_rej","_promise","res","rej","reject","set","resolveInProgress","delete","loadDependencies","has","all","add","extendStatics","Object","setPrototypeOf","__proto__","Array","b","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","call","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","apply","__generator","f","y","g","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","__values","o","m","__read","ar","__spread","concat","USER_ROLE","FragmentMonitor","fragments","fragmentsLoaded$","Subject","viewInit$","noop","isViewInitialized","isReady","registerFragment","resolveFragment","complete","commonPartialWidgets","BasePartialComponent","_super","destroy$","tslib_1.__extends","getContainerWidgetInjector","containerWidget","inj","injector","WidgetRef","i18nService","view","component","initUserScript","registerWidgets","initVariables","activePageName","registerPageParams","defineI18nProps","partialParams","partialName","Widgets","registerDestroyListener","fn","evalUserScript","UtilsService","console","variableCollection","getVariables","entries","forEach","_b","action","$invokeWatchers","invokeOnReady","onReady","ngAfterViewInit","ngOnDestroy","BasePageComponent","startupVariablesLoaded","pageTransitionCompleted","muteWatchers","route","ActivatedRoute","appManager","navigationService","AbstractNavigationService","router","lastActivePageName","subscription","params","unsubscribe","showPageContent","runPageTransition","transition","$target","$","onTransitionEnd_1","off","removeClass","children","first","remove","addClass","on","onPageReady","instance","getPageTransition","pageOutlet","prepend","clone","compilePageContent","unMuteWatchers","isMobileApp","onPageContentReady","onBeforePageLeave","BasePrefabComponent","prefabMngr","registerProps","registerChangeListeners","registerPropertyChangeListener","onPropertyChange","registerStyleChangeListener","getPrefabLocaleBundle","displayName","properties","expr","prop","startsWith","defineProperty","nv","widget","$watch","events","args","_i","substr","toLowerCase","invokeEventCallback","$event","$data","methods","warn","setProps","isIE","createProxy","AccessrolesDirective","templateRef","viewContainerRef","securityService","processed","isUserAuthenticated","getWidgetRolesArrayFromStr","val","UNICODE_COMMA_REGEX","split","matchRoles","widgetRoles","some","item","includes","hasAccessToWidget","EVERYONE","ANONYMOUS","AUTHENTICATED","createEmbeddedView","clear","Directive","selector","TemplateRef","ViewContainerRef","Input","PartialContainerDirective","componentInstance","vcRef","elRef","app","_content","resolver","componentRefProvider","partialRefProvider","contentInitialized","renderPartial","debounce","_renderPartial","leading","ov","$lazyLoad","params$","debounceTime","getComponentFactoryRef","PARTIAL","componentFactory","instanceRef","createComponent","nativeElement","querySelector","innerHTML","appendChild","onLoadSuccess","Self","Inject","ElementRef","Injector","Attribute","ComponentFactoryResolver","AppSpinnerComponent","Component","CustomToasterComponent","toastrService","toastPackage","watchers","pagename","message","generateParams","param","isString","indexOf","context","generateDynamicComponent","$targetLayout","customToastRef","customToastTmpl","rootNodes","watcher","preserveWhitespaces","ToastrService","ToastPackage","ViewChild","read","Toast","EmptyPageComponent","appManger","ngOnInit","isApplicationType","getWmProjectProperties","homePage","PrefabDirective","PREFAB","injectorMap","DialogService","SpinnerService","ToasterService","AbstractToasterService","Utils","FIELD_TYPE","FieldTypeService","FIELD_WIDGET","FieldWidgetService","DynamicComponentService","DynamicComponentRefProvider","AppRef","httpService","onSessionTimeout","dynamicComponentContainerRef","changeLocale","setSelectedLocale","_eventNotifier","EventNotifier","wmProjectProperties","projectName","on401","setLocale","reload","getDependency","injToken","from","slice","providerInstance_1","toString","notificationAction","invoke","class","duration","ToasterServiceImpl","toaster","_showToaster","desc","isNumber","timeOut","enableHtml","positionClass","toastClass","bodyOutputType","JSON","stringify","success","info","toasterObj","toastId","showCustom","toastComponent","RTL_LANGUAGE_CODES","I18nServiceImpl","bsLocaleService","appDefaults","defaultSupportedLocale","_isAngularLocaleLoaded","prefabLocale","updateLocaleDirection","direction","selectedLocale","setCSS","messages","getDefaultSupportedLocale","extendPrefabMessages","prefabMessages","keys","bundle","extendMessages","loadResource","path","toPromise","loadAppLocaleBundle","APP_LOCALE_ROOT_PATH","setFormats","formats","loadMomentLocaleBundle","momentLocale","_cdnUrl","_WM_APP_PROJECT","cdnUrl","ngDest","responseType","_config","Function","moment","locale","defineLocale","code","use","loadAngularLocaleBundle","angLocale","module","exports","registerLocaleData","default","loadCalendarLocaleBundle","calendarLocale","isMobile","loadLocaleBundles","libLocale","fullCalendar","angular","datavalue","supportedLanguages","supportedLocale","setSessionStorageItem","loadDefaultLocale","_acceptLang","getAcceptedLanguages","defaultLanguage","_supportedLang","_defaultLang","getSessionStorageItem","intersection","getLocalizedMessage","languages","navigator","language","preferredLanguage","toLower","isAngularLocaleLoaded","HttpClient","BsLocaleService","AppDefaults","SpinnerServiceImpl","messageSource","messagesByContext","getMessageSource","showContextSpinner","ctx","ctxMarkup","find","html","ctxSpinnerTemp","showAppSpinner","msg","values","hideContextSpinner","spinnerClass","variableScopeId","findKey","obj","pageSpinnerCount","parentSelector","NavigationServiceImpl","history","History","isPageAddedToHistory","event","NavigationStart","urlParams_1","splits","PageInfo","isEqual","goToPage","getCurrentPage","urlParams","isWaveLens","location_1","strQueryParams","strQuery","join","origin","pathname","goToPrevious","getPagesCount","back","goToView","viewName","_context","goToElementView","isPrefabWithNameExists","WIDGET_DOESNT_EXIST","isPartialWithNameExists","pageReadySubscriber_1","viewElement","$el","parentDialog","getViewElementInActivePage","widgetType","showAncestors","expand","select","expanded","showAncestorDialog","childSelector","closest","element","parents","toArray","reverse","dialogId","each","dialog","attr","page1","stack","currentPage","isLastVisitedPage","getLastPage","pageInfo","AppDefaultsService","dateFormat","date","timeFormat","time","dateTimeFormat","securityConfigLoaded","AuthGuard","canActivate","isLoggedIn","routeConfig","RoleGuard","authGuard","toasterService","allowedRoles","LABEL_ACCESS_DENIED","PageNotFoundGaurd","MESSAGE_PAGE_NOT_FOUND","appJsLoaded","AppJSResolve","utilService","appJsProvider","getAppScriptFn","appScriptFn","e_1","I18nResolve","PipeProvider","compiler","_locale","preparePipeMeta","reference","pure","diDeps","_pipeData","AsyncPipe","ChangeDetectorRef","SlicePipe","PercentPipe","I18nPluralPipe","NgLocalization","I18nSelectPipe","KeyValuePipe","KeyValueDiffers","FileIconClassPipe","FileExtensionFromMimePipe","StateClassPipe","FileSizePipe","FilterPipe","UpperCasePipe","LowerCasePipe","JsonPipe","DecimalPipe","TitleCasePipe","CurrencyPipe","ToDatePipe","ToNumberPipe","ToCurrencyPipe","PrefixPipe","SuffixPipe","TimeFromNowPipe","NumberToStringPipe","StringToNumberPipe","_pipeMeta","unknownPipe","Error","meta","getPipeNameVsIsPureMap","_map","k","resolveDep","dep","token","identifier","getInstance","ref","deps","deps_1","tslib_1.__values","deps_1_1","providedIn","Compiler","AppComponent","_pipeProvider","_appRef","oAuthService","dialogService","spinnerService","ngZone","startApp","spinner","isOAuthDialogOpen","setPipeProvider","setNgZone","setAppRef","getOAuthProvidersAsObservable","providers","providersConfig","showOAuthDialog","closeOAuthDialog","asObservable","setTheme","addEventListener","node","NavigationEnd","NavigationCancel","NavigationError","close","ngDoCheck","encapsulation","ViewEncapsulation","None","ApplicationRef","OAuthService","NgZone","HttpCallInterceptor","wmHttpRequest","WmHttpRequest","wmHttpResponse","WmHttpResponse","createSubject","intercept","request","modifiedReq","modifiedResp","req","angularToWmRequest","wmToAngularRequest","handle","tap","resp","angularToWmResponse","wmToAngularResponse","_401Subscriber","isPlatformSessionTimeout","handleSessionTimeout","PrefabPreviewComponent","prefabManager","payload","setProperty","getOutboundProps","invokeScript","setupEventListeners","prefabInstance","locals","previewMode","readyState","isOutBoundProp","bindable","_c","_d","name_1","script","retVal","methodName","output","initComponentsBuildTask","componentFactoryRefCache","DynamicComponentRefProviderService","counter","markup","componentRef","componentFactoryRef","transpile","noCache","componentDef_1","css","componentDef","DynamicComponent","getDynamicComponent","moduleDef","DynamicModule","NgModule","declarations","imports","RuntimeBaseModule","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","compileModuleAndAllComponentsSync","componentFactories","factory","componentType","addComponent","target","extendProto","CanDeactivatePageGuard","canDeactivate","state","InitializeApp","I18nService","getAttribute","setAngularLocale","definitions","carouselModule","CarouselModule","forRoot","bsDropDownModule","BsDropdownModule","popoverModule","PopoverModule","tooltipModule","TooltipModule","swipeAnimation","expressionEvaluator","$parseExpr","addCustomEventPolyfill","CustomEvent","bubbles","cancelable","detail","createEvent","initCustomEvent","ngModule","provide","useClass","APP_INITIALIZER","useFactory","multi","LOCALE_ID","HTTP_INTERCEPTORS","CommonModule","FormsModule","RouterModule","ReactiveFormsModule","HttpClientModule","ModalModule","WmComponentsModule","MobileRuntimeModule","CoreModule","SecurityModule","OAuthModule","VariablesModule","HttpServiceModule","entryComponents","WM_MODULES_FOR_ROOT","AppVariablesResolve","appVariablesProvider","getAppVariables","metadataResolved","MetadataResolve","SecurityConfigResolve","loaded"],"mappings":"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","sourcesContent":["export enum ComponentType {\n    PAGE,\n    PREFAB,\n    PARTIAL\n}\n\nexport abstract class ComponentRefProvider {\n    abstract async getComponentFactoryRef(componentName: string, componentType: ComponentType): Promise<any>;\n    clearComponentFactoryRefCache():void {};\n}\n\nexport abstract class PrefabConfigProvider {\n    abstract async getConfig(prefabName: string): Promise<any>;\n}\n\nexport abstract class AppJSProvider {\n    abstract async getAppScriptFn(): Promise<Function>;\n}\n\nexport abstract class AppVariablesProvider {\n    abstract async getAppVariables(): Promise<any>;\n}\n\nexport abstract class PartialRefProvider {\n    abstract async getComponentFactoryRef(partialName:string,componentType: ComponentType): Promise<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\nimport {\n    AbstractDialogService,\n    AbstractHttpService,\n    AbstractI18nService,\n    AbstractSpinnerService,\n    App,\n    fetchContent,\n    isDefined,\n    triggerFn,\n    $appDigest\n} from '@wm/core';\nimport { SecurityService } from '@wm/security';\nimport { CONSTANTS, $rootScope, routerService,  MetadataService, VariablesService } from '@wm/variables';\n\ndeclare const _;\n\nenum POST_MESSAGES {\n    HIDE_TEMPLATES_SHOW_CASE = 'hide-templates-show-case',\n    SHOW_TEMPLATES_SHOW_CASE = 'show-templates-show-case',\n    UPDATE_LOCATION          = 'update-location-path',\n    SELECT_TEMPLATE          = 'select-template',\n    TEMPLATEBUNDLE_CONFIG    = 'template-bundle-config',\n    ON_LOAD                  = 'on-load'\n}\n\n@Injectable()\nexport class AppManagerService {\n\n    private appVariablesLoaded = false;\n    private appVariablesFired = false;\n    private _noRedirect = false;\n    private templates: Array<any>;\n\n    constructor(\n        private $http: AbstractHttpService,\n        private $security: SecurityService,\n        private $dialog: AbstractDialogService,\n        private $router: Router,\n        private $app: App,\n        private $variables: VariablesService,\n        private $metadata: MetadataService,\n        private $spinner: AbstractSpinnerService,\n        private $i18n: AbstractI18nService,\n        private $datePipe: DatePipe\n    ) {\n        // register method to invoke on session timeout\n        this.$http.registerOnSessionTimeout(this.handle401.bind(this));\n\n        this.$variables.registerDependency('appManager', this);\n\n        this.$app.subscribe('toggle-variable-state', (data) => {\n            const variable = data.variable,\n                active = data.active;\n            if (!_.isEmpty(_.trim(variable.spinnerContext))) {\n                if (active) {\n                    variable._spinnerId = variable._spinnerId || [];\n                    const spinnerId = this.$spinner.show(variable.spinnerMessage,\n                        variable._id + '_' + Date.now(),\n                        variable.spinnerclass,\n                        variable.spinnerContext);\n                    variable._spinnerId.push(spinnerId);\n                } else {\n                    this.$spinner.hide(variable._spinnerId.shift());\n                }\n            }\n        });\n        this.$app.subscribe('userLoggedIn', () => this.setLandingPage());\n        this.$app.subscribe('userLoggedOut', () => this.setLandingPage().then(() => {\n            // navigate to the landing page without reloading the window in device.\n            if (window['cordova']) {\n                this.$router.navigate([`/`]);\n            }\n        }));\n        this.$app.subscribe('http401', (d = {}) => this.handle401(d.page, d.options));\n    }\n\n    /**\n     * On session timeout, if the session timeout config is set to a dialog, then open login dialog\n     */\n    private showLoginDialog() {\n        this.$spinner.hide('globalSpinner');\n        // Removing the close all dialogs call, so the existing dialogs remain open and\n        // the login dialog comes on top of it.\n        this.$dialog.open('CommonLoginDialog');\n        // Since the login dialog is closed and opened its updated property isn't read by angular.\n        // Hence we trigger the digest cycle\n        $appDigest();\n    }\n\n    loadAppJS() {\n\n    }\n\n    loadCommonPage() {\n\n    }\n\n    loadSecurityConfig() {\n        return this.$security.load().then((r) => {\n            if (!this.$app.landingPageName) {\n                this.setLandingPage();\n            }\n            return r;\n        });\n    }\n\n    loadMetadata() {\n        return this.$metadata.load();\n    }\n\n    loadAppVariables(variables?: any) {\n        if (this.appVariablesLoaded) {\n            return Promise.resolve();\n        }\n\n        const init = response => {\n            const data = this.$variables.register('app', response, this.$app);\n            // not assigning directly to this.$app to keep the reference in tact\n            _.extend(this.$app.Variables, data.Variables);\n            _.extend(this.$app.Actions, data.Actions);\n            this.updateLoggedInUserVariable();\n            this.updateSupportedLocaleVariable();\n            this.appVariablesLoaded = true;\n            this.appVariablesFired = false;\n        };\n\n        if (isDefined(variables)) {\n            init(variables);\n            return Promise.resolve();\n        }\n\n        return this.$http.get('./app.variables.json').then(response => init(response));\n    }\n\n    /**\n     * getter and setter for the property appVariablesFired\n     * this flag determines if the app variables(with startUpdate:true) have been fired\n     * they should get fired only once through app lifecycle\n     * @param {boolean} isFired\n     * @returns {boolean}\n     */\n    isAppVariablesFired(isFired?: boolean) {\n        if (isDefined(isFired)) {\n            this.appVariablesFired = isFired;\n        }\n        return this.appVariablesFired;\n    }\n\n    private clearLoggedInUserVariable(variable) {\n        variable.isAuthenticated = false;\n        variable.roles           = [];\n        variable.name            = undefined;\n        variable.id              = undefined;\n        variable.tenantId        = undefined;\n    }\n\n    private updateLoggedInUserVariable() {\n        const loggedInUser = _.get(this.$app, 'Variables.loggedInUser.dataSet');\n\n        // sanity check\n        if (!loggedInUser) {\n            return;\n        }\n        this.$security.load().then(()=>{\n            const securityConfig = this.$security.get();\n            if (securityConfig && securityConfig.securityEnabled && securityConfig.authenticated) {\n                loggedInUser.isAuthenticated = securityConfig.authenticated;\n                loggedInUser.roles           = securityConfig.userInfo.userRoles;\n                loggedInUser.name            = securityConfig.userInfo.userName;\n                loggedInUser.id              = securityConfig.userInfo.userId;\n                loggedInUser.tenantId        = securityConfig.userInfo.tenantId;\n            } else {\n                this.clearLoggedInUserVariable(loggedInUser);\n                loggedInUser.isSecurityEnabled = securityConfig && securityConfig.securityEnabled;\n                throw null;\n            }\n        }).catch(err => {\n            loggedInUser.isAuthenticated = false;\n            loggedInUser.roles           = [];\n            loggedInUser.name            = undefined;\n            loggedInUser.id              = undefined;\n            loggedInUser.tenantId        = undefined;\n        });\n    }\n\n    /**\n     * Overriding the app variable supported locale with the wmProperties i18n DataValues\n     *\n     * TODO[Vibhu]:\n     * Can write a simple migration to sync the supportedLocale variable with '_WM_APP_PROPERTIES.supportedLanguages'\n     * Hence, this may not be required\n     *\n     */\n    updateSupportedLocaleVariable() {\n        const supportedLocaleVar = _.get(this.$app, 'Variables.supportedLocale');\n    }\n\n    handleSSOLogin(config) {\n        const SSO_URL = 'services/security/ssologin',\n            PREVIEW_WINDOW_NAME = 'WM_PREVIEW_WINDOW';\n        let page,\n            pageParams;\n\n        // do not provide redirectTo page if fetching HOME page resulted 401\n        // on app load, by default Home page is loaded\n        page = this.$security.getRedirectPage(config);\n\n        if (CONSTANTS.hasCordova) {\n            // get previously loggedInUser name (if any)\n            const lastLoggedInUsername = _.get(this.$security.get(), 'userInfo.userName');\n            this.$security.authInBrowser()\n                .then(() => this.reloadAppData())\n                .then(() => {\n                    const presentLoggedInUsername = _.get(this.$security.get(), 'userInfo.userName');\n                    if (presentLoggedInUsername && presentLoggedInUsername === lastLoggedInUsername) {\n                        routerService.navigate([page]);\n                    } else {\n                        routerService.navigate([`/`]);\n                    }\n                });\n        } else {\n            page = page ? '?redirectPage=' + encodeURIComponent(page) : '';\n            pageParams = this.$security.getQueryString(this.$security.getRedirectedRouteQueryParams());\n            pageParams = pageParams ? '?' + pageParams : '';\n            // showing a redirecting message\n            document.body.textContent = _.get(this.getAppLocale(), ['MESSAGE_LOGIN_REDIRECTION']) || 'Redirecting to sso login...';\n            // appending redirect to page and page params\n            const ssoUrl = this.getDeployedURL() + SSO_URL + page + pageParams;\n            /*\n             * remove iFrame when redirected to IdP login page.\n             * this is being done as IDPs do not allow to get themselves loaded into iFrames.\n             * remove-toolbar has been assigned with a window name WM_PREVIEW_WINDOW, check if the iframe is our toolbar related and\n             * safely change the location of the parent toolbar with current url.\n             */\n            if (window.self !== window.top && window.parent.name === PREVIEW_WINDOW_NAME) {\n                window.parent.location.href = window.self.location.href;\n                window.parent.name = '';\n            } else {\n                window.location.href = ssoUrl;\n            }\n        }\n    }\n\n    /**\n     * Handles the app when a XHR request returns 401 response\n     * If no user was logged in before 401 occurred, First time Login is simulated\n     * Else, a session timeout has occurred and the same is simulated\n     * @param page  if provided, represents the page name for which XHR request returned 401, on re-login\n     *              if not provided, a service request returned 401\n     * @param onSuccess success handler\n     * @param onError error handler\n     */\n    handle401(page?, options?) {\n        let sessionTimeoutConfig,\n            sessionTimeoutMethod,\n            loginConfig,\n            loginMethod;\n        const LOGIN_METHOD = {\n                'DIALOG' : 'DIALOG',\n                'PAGE'   : 'PAGE',\n                'SSO'    : 'SSO'\n            };\n\n        const config = this.$security.get();\n        let queryParamsObj = {};\n        loginConfig = config.loginConfig;\n        // if user found, 401 was thrown after session time\n        if (config.userInfo && config.userInfo.userName) {\n            config.authenticated = false;\n            sessionTimeoutConfig = loginConfig.sessionTimeout || {'type': LOGIN_METHOD.DIALOG};\n            sessionTimeoutMethod = sessionTimeoutConfig.type.toUpperCase();\n            switch (sessionTimeoutMethod) {\n                case LOGIN_METHOD.DIALOG:\n                    this.showLoginDialog();\n                    break;\n                case LOGIN_METHOD.PAGE:\n                    if (!page) {\n                        page = this.$security.getCurrentRoutePage();\n                    }\n                    queryParamsObj['redirectTo'] = page;\n                    // Adding query params(page params of page being redirected to) to the URL.\n                    queryParamsObj = _.merge(queryParamsObj, this.$security.getRedirectedRouteQueryParams());\n                    // the redirect page should not be same as session timeout login page\n                    if ( page !== sessionTimeoutConfig.pageName) {\n                        this.$router.navigate([sessionTimeoutConfig.pageName], {queryParams: queryParamsObj});\n                    }\n                    break;\n                case LOGIN_METHOD.SSO:\n                    this.handleSSOLogin(config);\n                    break;\n            }\n            this.setLandingPage();\n        } else {\n            // if no user found, 401 was thrown for first time login\n            loginMethod = loginConfig.type.toUpperCase();\n            switch (loginMethod) {\n                case LOGIN_METHOD.DIALOG:\n                    // Through loginDialog, user will remain in the current state and failed calls will be executed post login through LoginVariableService.\n                    // NOTE: user will be redirected to respective landing page only if dialog is opened manually(not through a failed 401 call).\n                    this.noRedirect(true);\n                    this.showLoginDialog();\n                    break;\n                case LOGIN_METHOD.PAGE:\n                    // do not provide redirectTo page if fetching HOME page resulted 401\n                    // on app load, by default Home page is loaded\n                    page = this.$security.getRedirectPage(config);\n                    queryParamsObj['redirectTo'] = page;\n                    queryParamsObj = _.merge(queryParamsObj, this.$security.getRedirectedRouteQueryParams());\n                    this.$router.navigate([loginConfig.pageName], {queryParams: queryParamsObj});\n                    this.$app.landingPageName = loginConfig.pageName;\n                    break;\n                case LOGIN_METHOD.SSO:\n                    this.handleSSOLogin(config);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Updates data dependent on logged in user\n     * Reloads security config, metadata\n     * Updates the loggedInUserVariable\n     * @returns {Promise<void>}\n     */\n    reloadAppData() {\n        return this.loadSecurityConfig().then(() => {\n            return this.loadMetadata().then(() => {\n                this.updateLoggedInUserVariable();\n            });\n        });\n    }\n\n    noRedirect(value?: boolean) {\n        if (_.isUndefined(value)) {\n            return this._noRedirect;\n        }\n\n        this._noRedirect = value;\n        return this._noRedirect;\n    }\n\n    /**\n     * invokes session failure requests\n     */\n    executeSessionFailureRequests() {\n        this.$http.executeSessionFailureRequests();\n    }\n\n    pushToSessionFailureRequests(callback) {\n        this.$http.pushToSessionFailureQueue(callback);\n    }\n\n    public getDeployedURL() {\n        return this.$app.deployedUrl ? this.$app.deployedUrl : $rootScope.project.deployedUrl;\n    }\n\n    notify(eventName, data) {\n        this.$app.notify(eventName, data);\n    }\n\n    subscribe(eventName, data) {\n        return this.$app.subscribe(eventName, data);\n    }\n\n    getActivePage() {\n        return this.$app.activePage;\n    }\n\n    getAppLocale() {\n        return this.$app.appLocale;\n    }\n\n    getSelectedLocale() {\n        return this.$i18n.getSelectedLocale();\n    }\n\n    notifyApp(template, type, title?) {\n        this.$app.notifyApp(template, type, title);\n    }\n\n    /**\n     * Triggers the onBeforeService method defined in app.js of the app\n     * @param requestParams\n     */\n    appOnBeforeServiceCall(requestParams: any) {\n        return triggerFn(this.$app.onBeforeServiceCall, requestParams);\n    }\n\n    /**\n     * Triggers the onServiceSuccess method defined in app.js of the app\n     * @param data\n     * @param xhrObj\n     */\n    appOnServiceSuccess(data: any, xhrObj: any) {\n        return triggerFn(this.$app.onServiceSuccess, data, xhrObj);\n    }\n\n    /**\n     * Triggers the onServiceError method defined in app.js of the app\n     * @param data\n     * @param xhrOb\n     */\n    appOnServiceError(data: any, xhrOb?: any) {\n        return triggerFn(this.$app.onServiceError, data, xhrOb);\n    }\n\n    /**\n     * Triggers the appVariablesReady method defined in app.js of the app\n     */\n    appVariablesReady() {\n        triggerFn(this.$app.onAppVariablesReady);\n    }\n\n    /**\n     * Returns the pipe based on the input\n     */\n    getPipe(pipe) {\n        if (pipe === 'date') {\n            return this.$datePipe;\n        }\n    }\n\n    private setLandingPage() {\n        return this.$security.getPageByLoggedInUser().then(p => this.$app.landingPageName = <string> p);\n    }\n\n    /**\n     * return true if prefab type app\n     * @returns {boolean}\n     */\n    isPrefabType() {\n        return this.$app.isPrefabType;\n    }\n\n    /**\n     * return true if template bundle type app\n     * @returns {boolean}\n     */\n    isTemplateBundleType() {\n        return this.$app.isTemplateBundleType;\n    }\n\n    postMessage(content) {\n        window.top.postMessage(content, '*');\n    }\n\n    showTemplate(idx) {\n        const template = this.templates[idx];\n        // scope.activeTemplateIndex = idx;\n        this.$router.navigate([template.id]);\n    }\n    postTemplateBundleInfo() {\n\n        window.onmessage = (evt) => {\n            const msgData = evt.data;\n\n            if (!_.isObject(msgData)) {\n                return;\n            }\n\n            const key = msgData.key;\n\n            switch (key) {\n                case POST_MESSAGES.HIDE_TEMPLATES_SHOW_CASE:\n                    // scope.hideShowCase = true;\n                    break;\n                case POST_MESSAGES.SELECT_TEMPLATE:\n                    this.showTemplate(msgData.templateIndex);\n                    break;\n            }\n        };\n\n        setTimeout(() => {\n            this.postMessage({key: POST_MESSAGES.ON_LOAD});\n        });\n\n        return fetchContent('json', './config.json', true, response => {\n            this.templates = [];\n            if (!response.error) {\n                this.templates = response.templates;\n                this.postMessage({'key': POST_MESSAGES.TEMPLATEBUNDLE_CONFIG, 'config': response});\n            }\n        });\n    }\n\n    postAppTypeInfo() {\n        if (this.isTemplateBundleType()) {\n            return this.postTemplateBundleInfo();\n        }\n    }\n}\n","export const isPrefabInPreview = (prefabName: string) => prefabName === '__self__';\n\nexport const getPrefabBaseUrl = (prefabName: string) => isPrefabInPreview(prefabName) ? '.' : `app/prefabs/${prefabName}`;\n\nexport const getPrefabConfigUrl = (prefabName: string) => `${getPrefabBaseUrl(prefabName)}/config.json`;\n\nexport const getPrefabMinJsonUrl = (prefabName: string) => `${getPrefabBaseUrl(prefabName)}/pages/Main/page.min.json`;\n","import { Injectable } from '@angular/core';\n\nimport { loadScripts, loadStyleSheets, stringStartsWith } from '@wm/core';\nimport { MetadataService } from '@wm/variables';\n\nimport { PrefabConfigProvider } from '../types/types';\nimport { getPrefabBaseUrl, isPrefabInPreview } from '../util/utils';\n\ndeclare const _;\n\nconst prefabsWithError = new Set<string>();\nconst inProgress = new Map<string, Promise<any>>();\nconst resolvedPrefabs = new Set<string>();\n\nconst getPrefabResourceUrl = (resourcePath, resourceBasePath) => {\n    let _url = resourcePath;\n    if (!stringStartsWith(resourcePath, 'http://|https://|//')) {\n        _url = (resourceBasePath + _url).replace('//', '/');\n    }\n    return _url;\n};\n\n@Injectable()\nexport class PrefabManagerService {\n\n    constructor(\n        private $metadata: MetadataService,\n        private prefabConfigProvider: PrefabConfigProvider\n    ) {}\n\n    public getConfig(prefabName): Promise<any> {\n        return this.prefabConfigProvider.getConfig(prefabName);\n    }\n\n    public loadServiceDefs(prefabName): Promise<any> {\n        return isPrefabInPreview(prefabName) ? Promise.resolve() : this.$metadata.load(prefabName);\n    }\n\n    protected loadStyles(prefabName, {resources: {styles}} = {resources: {styles: []}}): Promise<void> {\n        const baseUrl = getPrefabBaseUrl(prefabName);\n        const _styles = styles.map(url => {\n            if (!_.endsWith(url, '/pages/Main/Main.css')) {\n                return getPrefabResourceUrl(url, baseUrl);\n            }\n            return undefined;\n        }).filter(url => !!url);\n\n        loadStyleSheets(_styles);\n\n        return Promise.resolve();\n    }\n\n    // TODO [Vinay] - implement onPrefabResourceLoad\n    protected loadScripts(prefabName, {resources: {scripts}} = {resources: {scripts: []}}): Promise<any> {\n        const baseUrl = getPrefabBaseUrl(prefabName);\n        const _scripts = scripts.map(url => getPrefabResourceUrl(url, baseUrl));\n\n        return loadScripts(_scripts);\n    }\n\n    private setInProgress(prefabName: string) {\n        let _res;\n        let _rej;\n        const _promise: any = new Promise((res, rej) => {\n            _res = res;\n            _rej = rej;\n        });\n\n        _promise.resolve = _res;\n        _promise.reject = _rej;\n\n        inProgress.set(prefabName, _promise);\n    }\n\n    private resolveInProgress(prefabName: string) {\n        if (inProgress.get(prefabName)) {\n            (inProgress.get(prefabName) as any).resolve();\n            inProgress.delete(prefabName);\n        }\n    }\n\n    public loadDependencies(prefabName): Promise<void> {\n\n        if (resolvedPrefabs.has(prefabName)) {\n            return Promise.resolve();\n        }\n\n        if (prefabsWithError.has(prefabName)) {\n            return Promise.reject('');\n        }\n\n        if (inProgress.get(prefabName)) {\n            return inProgress.get(prefabName);\n        }\n\n        this.setInProgress(prefabName);\n\n        return this.getConfig(prefabName)\n            .then(config => {\n                return Promise.all([\n                    this.loadStyles(prefabName, config),\n                    this.loadScripts(prefabName, config),\n                    this.loadServiceDefs(prefabName)\n                ]).then(() => {\n                    this.resolveInProgress(prefabName);\n                    resolvedPrefabs.add(prefabName);\n                });\n            });\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { SecurityService } from '@wm/security';\n\ndeclare const _;\n\nenum USER_ROLE {\n    EVERYONE = 'Everyone',\n    ANONYMOUS = 'Anonymous',\n    AUTHENTICATED = 'Authenticated'\n}\n\n@Directive({\n    selector: '[accessroles]'\n})\nexport class AccessrolesDirective {\n\n    private processed = false;\n    private readonly isUserAuthenticated;\n    private readonly userRoles;\n    private securityEnabled: boolean;\n\n    constructor(\n        private templateRef: TemplateRef<any>,\n        private viewContainerRef: ViewContainerRef,\n        private securityService: SecurityService\n    ) {\n        const securityConfig = this.securityService.get();\n        this.securityEnabled = _.get(securityConfig, 'securityEnabled');\n        this.isUserAuthenticated = _.get(securityConfig, 'authenticated');\n        this.userRoles = _.get(securityConfig, 'userInfo.userRoles');\n    }\n\n    /**\n     * Returns array of roles from comma separated string of roles\n     * Handles encoded commas\n     * @param val\n     * @returns {any}\n     */\n    private getWidgetRolesArrayFromStr(val) {\n        const UNICODE_COMMA_REGEX = /&#44;/g;\n\n        val = val || '';\n        if (val === '') {\n            return [];\n        }\n        // replace the unicode equivalent of comma with comma\n        return _.split(val, ',').map(function (v) {\n            return _.trim(v).replace(UNICODE_COMMA_REGEX, ',');\n        });\n    }\n\n    /**\n     * Returns true if roles in first arrays is\n     * @param widgetRoles\n     * @param userRoles\n     * @returns {any}\n     */\n    private matchRoles(widgetRoles, userRoles) {\n        return widgetRoles.some(function (item) {\n            return _.includes(userRoles, item);\n        });\n    }\n\n    /**\n     * Decides whether the current logged in user has access to widget or not\n     * @param widgetRoles\n     * @param userRoles\n     * @returns {any}\n     */\n    private hasAccessToWidget(widgetRoles, userRoles) {\n        // access the widget when 'Everyone' is chosen\n        if (_.includes(widgetRoles, USER_ROLE.EVERYONE)) {\n            return true;\n        }\n\n        // access the widget when 'Anonymous' is chosen and user is not authenticated\n        if (_.includes(widgetRoles, USER_ROLE.ANONYMOUS) && !this.isUserAuthenticated) {\n            return true;\n        }\n\n        // access the widget when 'Only Authenticated Users' is chosen and user is authenticated\n        if (_.includes(widgetRoles, USER_ROLE.AUTHENTICATED) && this.isUserAuthenticated) {\n            return true;\n        }\n\n        // access the widget when widget role and logged in user role matches\n        return this.isUserAuthenticated && this.matchRoles(widgetRoles, userRoles);\n    }\n\n    @Input() set accessroles(roles) {\n        // flag to compute the directive only once\n        if (this.processed) {\n            return;\n        }\n\n        this.processed = true;\n        const widgetRoles = this.getWidgetRolesArrayFromStr(roles);\n        const isAccessible = !this.securityEnabled || this.hasAccessToWidget(widgetRoles, this.userRoles);\n        if (isAccessible) {\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\n        } else {\n            this.viewContainerRef.clear();\n        }\n    }\n}\n","import { noop } from '@wm/core';\n\nimport { Subject } from 'rxjs';\n\nexport abstract class FragmentMonitor {\n    fragments = 0;\n    viewInit$: Subject<any>;\n    isViewInitialized: boolean;\n\n    fragmentsLoaded$ = new Subject();\n\n    constructor() {}\n\n    init() {\n        // console.log(`inside fragmentMonitor: Page-${(this as any).pageName}, Partial-${(this as any).partialName}`);\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            this.isViewInitialized = true;\n            this.isReady();\n        });\n    }\n\n    registerFragment() {\n        this.fragments++;\n    }\n\n    resolveFragment() {\n        this.fragments--;\n        this.isReady();\n    }\n\n    isReady() {\n        if (this.isViewInitialized && !this.fragments) {\n            this.registerFragment = noop;\n            this.resolveFragment = noop;\n            this.fragmentsLoaded$.complete();\n        }\n    }\n}\n","import { AfterViewInit, Injector, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\nimport { AbstractI18nService, AbstractNavigationService, App, noop, UtilsService } from '@wm/core';\nimport { WidgetRef } from '@wm/components';\nimport { VariablesService } from '@wm/variables';\n\nimport { FragmentMonitor } from '../util/fragment-monitor';\nimport { AppManagerService } from '../services/app.manager.service';\nimport { $invokeWatchers } from '@wm/core';\n\nexport const commonPartialWidgets = {};\n\nexport abstract class BasePartialComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {\n    Widgets: any;\n    Variables: any;\n    Actions: any;\n    App: App;\n    injector: Injector;\n    partialName: string;\n    activePageName: string;\n    route: ActivatedRoute;\n    appManager: AppManagerService;\n    navigationService: AbstractNavigationService;\n    router: Router;\n    pageParams: any;\n    containerWidget: any;\n    i18nService: AbstractI18nService;\n    appLocale: any;\n\n    destroy$ = new Subject();\n    viewInit$ = new Subject();\n\n    abstract evalUserScript(prefabContext: any, appContext: any, utils: any);\n\n    abstract getVariables();\n\n    getContainerWidgetInjector() {\n        return this.containerWidget.inj || this.containerWidget.injector;\n    }\n\n    init() {\n\n        this.App = this.injector.get(App);\n        this.containerWidget = this.injector.get(WidgetRef);\n        this.i18nService = this.injector.get(AbstractI18nService);\n        if (this.getContainerWidgetInjector().view.component.registerFragment) {\n            this.getContainerWidgetInjector().view.component.registerFragment();\n        }\n\n        this.initUserScript();\n\n        this.registerWidgets();\n        this.initVariables();\n\n        this.activePageName = this.App.activePageName; // Todo: remove this\n        this.registerPageParams();\n\n        this.defineI18nProps();\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            this.pageParams = this.containerWidget.partialParams;\n        });\n\n        super.init();\n    }\n\n    registerWidgets() {\n        if (this.partialName === 'Common') {\n            this.Widgets = commonPartialWidgets;\n        } else {\n            this.Widgets = Object.create(commonPartialWidgets);\n        }\n\n        this.containerWidget.Widgets = this.Widgets;\n    }\n\n    registerDestroyListener(fn: Function) {\n        this.destroy$.subscribe(noop, noop, () => fn());\n    }\n\n    initUserScript() {\n        try {\n            this.evalUserScript(this, this.App, this.injector.get(UtilsService));\n        } catch (e) {\n            console.error(`Error in evaluating partial (${this.partialName}) script\\n`, e);\n        }\n    }\n\n    initVariables() {\n        const variablesService = this.injector.get(VariablesService);\n\n        // get variables and actions instances for the page\n        const variableCollection = variablesService.register(this.partialName, this.getVariables(), this);\n\n        // create namespace for Variables nad Actions on page/partial, which inherits the Variables and Actions from App instance\n        this.Variables = Object.create(this.App.Variables);\n        this.Actions = Object.create(this.App.Actions);\n\n        this.containerWidget.Variables = this.Variables;\n        this.containerWidget.Actions = this.Actions;\n\n        // assign all the page variables to the pageInstance\n        Object.entries(variableCollection.Variables).forEach(([name, variable]) => this.Variables[name] = variable);\n        Object.entries(variableCollection.Actions).forEach(([name, action]) => this.Actions[name] = action);\n\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            // TEMP: triggering watchers so variables watching over params are updated\n            $invokeWatchers(true, true);\n            variableCollection.callback(variableCollection.Variables).catch(noop);\n            variableCollection.callback(variableCollection.Actions);\n        });\n    }\n\n    registerPageParams() {\n        this.pageParams = this.containerWidget.partialParams;\n    }\n\n    defineI18nProps() {\n        this.appLocale = this.i18nService.getAppLocale();\n    }\n\n    invokeOnReady() {\n        this.onReady();\n        if (this.getContainerWidgetInjector().view.component.resolveFragment) {\n            this.getContainerWidgetInjector().view.component.resolveFragment();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.viewInit$.complete();\n\n            this.fragmentsLoaded$.subscribe(noop, noop, () => this.invokeOnReady());\n\n        }, 100);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.complete();\n    }\n\n    onReady() {\n    }\n}\n","import { AfterViewInit, Injector, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\nimport {\n    AbstractI18nService,\n    AbstractNavigationService,\n    addClass,\n    App,\n    isMobileApp,\n    muteWatchers,\n    noop,\n    removeClass,\n    unMuteWatchers,\n    UtilsService\n} from '@wm/core';\nimport { commonPartialWidgets } from './base-partial.component';\n\n\nimport { VariablesService } from '@wm/variables';\nimport { AppManagerService } from '../services/app.manager.service';\nimport { FragmentMonitor } from '../util/fragment-monitor';\n\ndeclare const $;\n\nexport abstract class BasePageComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {\n    Widgets: any;\n    Variables: any;\n    Actions: any;\n    App: App;\n    injector: Injector;\n    pageName: string;\n    activePageName: string;\n    route: ActivatedRoute;\n    appManager: AppManagerService;\n    navigationService: AbstractNavigationService;\n    router: Router;\n    pageParams: any;\n    showPageContent: boolean;\n    i18nService: AbstractI18nService;\n    appLocale: any;\n    startupVariablesLoaded = false;\n    pageTransitionCompleted = false;\n\n    destroy$ = new Subject();\n    viewInit$ = new Subject();\n\n    abstract evalUserScript(prefabContext: any, appContext: any, utils: any);\n    abstract getVariables();\n\n    init() {\n\n        muteWatchers();\n\n        this.App = this.injector.get(App);\n        this.route = this.injector.get(ActivatedRoute);\n        this.appManager = this.injector.get(AppManagerService);\n        this.navigationService = this.injector.get(AbstractNavigationService);\n        this.i18nService = this.injector.get(AbstractI18nService);\n        this.router = this.injector.get(Router);\n\n        this.initUserScript();\n\n        this.registerWidgets();\n        this.initVariables();\n\n        this.App.lastActivePageName = this.App.activePageName;\n        this.App.activePageName = this.pageName;\n        this.App.activePage = this;\n        this.activePageName = this.pageName; // Todo: remove this\n\n        this.registerPageParams();\n\n        this.defineI18nProps();\n\n        super.init();\n    }\n\n    registerWidgets() {\n        // common partial widgets should be accessible from page\n        this.Widgets = Object.create(commonPartialWidgets);\n\n        // expose current page widgets on app\n        (this.App as any).Widgets = Object.create(this.Widgets);\n    }\n\n    initUserScript() {\n        try {\n            this.evalUserScript(this, this.App, this.injector.get(UtilsService));\n        } catch (e) {\n            console.error(`Error in evaluating page (${this.pageName}) script\\n`, e);\n        }\n    }\n\n    registerPageParams() {\n        const subscription = this.route.queryParams.subscribe(params => this.pageParams = params);\n        this.registerDestroyListener(() => subscription.unsubscribe());\n    }\n\n    registerDestroyListener(fn: Function) {\n        this.destroy$.subscribe(noop, noop, () => fn());\n    }\n\n    defineI18nProps() {\n        this.appLocale = this.i18nService.getAppLocale();\n    }\n\n    initVariables() {\n        const variablesService = this.injector.get(VariablesService);\n\n        // get variables and actions instances for the page\n        const variableCollection = variablesService.register(this.pageName, this.getVariables(), this);\n\n        // create namespace for Variables nad Actions on page/partial, which inherits the Variables and Actions from App instance\n        this.Variables = Object.create(this.App.Variables);\n        this.Actions = Object.create(this.App.Actions);\n\n        // assign all the page variables to the pageInstance\n        Object.entries(variableCollection.Variables).forEach(([name, variable]) => this.Variables[name] = variable);\n        Object.entries(variableCollection.Actions).forEach(([name, action]) => this.Actions[name] = action);\n\n\n        const subscription = this.viewInit$.subscribe(noop, noop, () => {\n\n            if (!this.appManager.isAppVariablesFired()) {\n                variableCollection.callback(this.App.Variables).catch(noop).then(() => {\n                    this.appManager.notify('app-variables-data-loaded', {pageName: this.pageName});\n                });\n                variableCollection.callback(this.App.Actions);\n                this.appManager.appVariablesReady();\n                this.appManager.isAppVariablesFired(true);\n            }\n\n            variableCollection.callback(variableCollection.Variables)\n                .catch(noop)\n                .then(() => {\n                    this.appManager.notify('page-variables-data-loaded', {pageName: this.pageName});\n                    this.startupVariablesLoaded = true;\n                    // hide the loader only after the some setTimeout for smooth page load.\n                    setTimeout(() => {\n                        this.showPageContent = true;\n                    }, 100);\n                });\n            variableCollection.callback(variableCollection.Actions);\n\n            subscription.unsubscribe();\n        });\n    }\n\n    runPageTransition(transition: string): Promise<void> {\n        return new Promise(resolve => {\n            const $target = $('app-page-outlet:first');\n            if (transition) {\n                const onTransitionEnd = () => {\n                    if (resolve) {\n                        $target.off('animationend', onTransitionEnd);\n                        $target.removeClass(transition);\n                        $target.children().first().remove();\n                        resolve();\n                        resolve = null;\n                    }\n                };\n                transition = 'page-transition page-transition-' + transition;\n                $target.addClass(transition);\n                $target.on('animationend', onTransitionEnd);\n                // Wait for a maximum of 1 second for transition to end.\n                setTimeout(onTransitionEnd, 1000);\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    invokeOnReady() {\n        this.onReady();\n        (this.App.onPageReady || noop)(this.pageName, this);\n        this.appManager.notify('pageReady', {'name' : this.pageName, instance: this});\n    }\n\n    ngAfterViewInit(): void {\n        const transition = this.navigationService.getPageTransition();\n        if (transition) {\n            const pageOutlet = $('app-page-outlet:first');\n            pageOutlet.prepend(pageOutlet.children().first().clone());\n        }\n        this.runPageTransition(transition).then(() => {\n            this.pageTransitionCompleted = true;\n            (this as any).compilePageContent = true;\n        });\n        setTimeout(() => {\n            unMuteWatchers();\n            this.viewInit$.complete();\n            if (isMobileApp()) {\n                this.onPageContentReady = () => {\n                    this.fragmentsLoaded$.subscribe(noop, noop, () => {\n                        this.invokeOnReady();\n                    });\n                    this.onPageContentReady = noop;\n                };\n            } else {\n                this.fragmentsLoaded$.subscribe(noop, noop, () => this.invokeOnReady());\n            }\n        }, 300);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.complete();\n    }\n\n    onReady() {}\n\n    onBeforePageLeave() {}\n\n    onPageContentReady() {}\n}\n","import { AfterViewInit, Injector, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { $watch, AbstractI18nService, App, isIE, noop, UtilsService, $invokeWatchers } from '@wm/core';\nimport { WidgetRef } from '@wm/components';\nimport { VariablesService } from '@wm/variables';\n\nimport { PrefabManagerService } from '../services/prefab-manager.service';\nimport {FragmentMonitor} from \"../util/fragment-monitor\";\n\ndeclare const _;\n\nexport abstract class BasePrefabComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {\n    Widgets: any;\n    Variables: any;\n    Actions: any;\n    App: App;\n    injector: Injector;\n    containerWidget: any;\n    prefabMngr: PrefabManagerService;\n    displayName: string;\n    prefabName: string;\n    i18nService: AbstractI18nService;\n    appLocale: any;\n\n    destroy$ = new Subject();\n    viewInit$ = new Subject();\n\n    abstract evalUserScript(prefabContext: any, appContext: any, utils: any);\n    abstract getVariables();\n\n    getContainerWidgetInjector() {\n        return this.containerWidget.inj || this.containerWidget.injector;\n    }\n\n    init() {\n        this.App = this.injector.get(App);\n\n        this.containerWidget = this.injector.get(WidgetRef);\n        this.prefabMngr = this.injector.get(PrefabManagerService);\n        this.i18nService = this.injector.get(AbstractI18nService);\n        if (this.getContainerWidgetInjector().view.component.registerFragment) {\n            this.getContainerWidgetInjector().view.component.registerFragment()\n        }\n\n        this.initUserScript();\n\n        this.registerWidgets();\n        this.initVariables();\n        this.registerProps();\n        this.defineI18nProps();\n        super.init();\n    }\n\n    registerWidgets() {\n        this.Widgets = {};\n    }\n\n    initUserScript() {\n        try {\n            this.evalUserScript(this, this.App, this.injector.get(UtilsService));\n        } catch (e) {\n            console.error(`Error in evaluating prefab (${this.prefabName}) script\\n`, e);\n        }\n    }\n\n    registerChangeListeners() {\n        this.containerWidget.registerPropertyChangeListener(this.onPropertyChange);\n        this.containerWidget.registerStyleChangeListener(this.onPropertyChange);\n    }\n\n    registerDestroyListener(fn: Function) {\n        this.destroy$.subscribe(noop, noop, () => fn());\n    }\n\n    defineI18nProps() {\n        this.appLocale = this.i18nService.getPrefabLocaleBundle(this.prefabName);\n    }\n\n    registerProps() {\n        this.prefabMngr.getConfig(this.prefabName)\n            .then(config => {\n\n                if (config) {\n                    this.displayName = config.displayName;\n                    Object.entries((config.properties || {}))\n                        .forEach(([key, prop]: [string, any]) => {\n                            let expr;\n                            const value = _.trim(prop.value);\n\n                            if (_.startsWith(value, 'bind:')) {\n                                expr = value.replace('bind:', '');\n                            }\n\n                            Object.defineProperty(this, key, {\n                                get: () => this.containerWidget[key],\n                                set: nv => this.containerWidget.widget[key] = nv\n                            });\n\n                            if (expr) {\n                                this.registerDestroyListener(\n                                    $watch(expr, this, {}, nv => this.containerWidget.widget[key] = nv)\n                                );\n                            }\n                        });\n\n                    Object.entries((config.events || {}))\n                        .forEach(([key, prop]: [string, any]) => {\n                            this[key] = (...args) => {\n                                const eventName = key.substr(2).toLowerCase();\n                                this.containerWidget.invokeEventCallback(eventName, {$event: args[0], $data: args[1]});\n                            };\n                        });\n\n                    Object.entries((config.methods || {}))\n                        .forEach(([key, prop]: [string, any]) => {\n                            this.containerWidget[key] = (...args) => {\n                                try {\n                                    if (this[key]) {\n                                        return this[key].apply(this, args);\n                                    }\n                                } catch (e) {\n                                    console.warn(`error in executing prefab-${this.prefabName} method-${key}`);\n                                }\n                            };\n                        });\n                }\n                this.containerWidget.setProps(config);\n                // Reassigning the proxy handler for prefab inbound properties as we\n                // will get them only after the prefab config call.\n                if (isIE()) {\n                    this.containerWidget.widget = this.containerWidget.createProxy();\n                }\n            });\n    }\n\n    initVariables() {\n        const variablesService = this.injector.get(VariablesService);\n\n        // get variables and actions instances for the page\n        const variableCollection = variablesService.register(this.prefabName, this.getVariables(), this);\n\n        // create namespace for Variables nad Actions on page/partial, which inherits the Variables and Actions from App instance\n        this.Variables = {};\n        this.Actions = {};\n\n        // assign all the page variables to the pageInstance\n        Object.entries(variableCollection.Variables).forEach(([name, variable]) => this.Variables[name] = variable);\n        Object.entries(variableCollection.Actions).forEach(([name, action]) => this.Actions[name] = action);\n\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            variableCollection.callback(variableCollection.Variables).catch(noop);\n            variableCollection.callback(variableCollection.Actions);\n        });\n    }\n\n    invokeOnReady() {\n        // triggering watchers so variables and propertiers watching over an expression are updated\n        $invokeWatchers(true, true);\n        this.onReady();\n        if (this.getContainerWidgetInjector().view.component.resolveFragment) {\n            this.getContainerWidgetInjector().view.component.resolveFragment();\n        }\n        this.containerWidget.invokeEventCallback('load');\n    }\n\n\n    ngAfterViewInit(): void {\n        this.viewInit$.complete();\n        this.registerChangeListeners();\n        setTimeout(() => {\n            this.fragmentsLoaded$.subscribe(noop, noop, () => this.invokeOnReady());\n        }, 100);\n    }\n\n    ngOnDestroy(): void {\n        this.containerWidget.invokeEventCallback('destroy');\n        this.destroy$.complete();\n    }\n\n    // user overrides this\n    onPropertyChange() {}\n\n    onReady() {}\n\n}\n","import { Attribute, ComponentFactoryResolver, Directive, ElementRef, Inject, Injector, Self, ViewContainerRef } from '@angular/core';\n\nimport { debounceTime, filter } from 'rxjs/operators';\n\nimport { App, $invokeWatchers, noop } from '@wm/core';\n\nimport { WidgetRef } from '@wm/components';\n\nimport { ComponentRefProvider, ComponentType, PartialRefProvider } from '../types/types';\n\ndeclare const _;\n\n@Directive({\n    selector: '[partialContainer]'\n})\nexport class PartialContainerDirective {\n\n    private contentInitialized = false;\n    private $target;\n\n    get name() {\n        return this.componentInstance.name;\n    }\n\n    async _renderPartial(nv) {\n        // destroy the existing partial\n        this.vcRef.clear();\n        // when the container-target is inside the component template, it can be queried after viewInit of the component.\n        $invokeWatchers(true);\n\n        const componentFactory = await this.partialRefProvider.getComponentFactoryRef(nv, ComponentType.PARTIAL);\n        if (componentFactory) {\n            const instanceRef = this.vcRef.createComponent(componentFactory, 0, this.inj);\n\n            if (!this.$target) {\n                this.$target = this.elRef.nativeElement.querySelector('[partial-container-target]') || this.elRef.nativeElement;\n            }\n\n            this.$target.innerHTML = '';\n            this.$target.appendChild(instanceRef.location.nativeElement);\n            this.contentInitialized = true;\n            setTimeout(() => this.onLoadSuccess(), 200);\n        }\n    }\n\n    renderPartial = _.debounce(this._renderPartial, 200, {leading: true});\n\n    onLoadSuccess() {\n        this.componentInstance.invokeEventCallback('load');\n\n        this.app.notify('partialLoaded');\n    }\n\n    constructor(\n        @Self() @Inject(WidgetRef) public componentInstance,\n        public vcRef: ViewContainerRef,\n        public elRef: ElementRef,\n        public inj: Injector,\n        private app: App,\n        @Attribute('content') _content: string,\n        private resolver: ComponentFactoryResolver,\n        private componentRefProvider: ComponentRefProvider,\n        private partialRefProvider: PartialRefProvider\n    ) {\n\n        componentInstance.registerPropertyChangeListener((key: string, nv: any, ov?: any) => {\n            if (key === 'content') {\n                if (componentInstance.$lazyLoad) {\n                    componentInstance.$lazyLoad = () => {\n                        this.renderPartial(nv);\n                        componentInstance.$lazyLoad = noop;\n                    };\n                } else {\n                    this.renderPartial(nv);\n                }\n            }\n        });\n\n        const subscription = componentInstance.params$\n            .pipe(\n                filter(() => this.contentInitialized),\n                debounceTime(200)\n            )\n            .subscribe(() => this.renderPartial(componentInstance.content));\n        // reload the partial content on partial param change\n        componentInstance.registerDestroyListener(() => subscription.unsubscribe());\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-spinner',\n    template: `\n        <div class=\"app-spinner\" *ngIf=\"show\">\n            <div class=\"spinner-message\" aria-label=\"loading gif\">\n                <i class=\"spinner-image animated infinite fa fa-circle-o-notch fa-spin\"></i>\n                <div class=\"spinner-messages\">\n                    <p *ngFor=\"let value of spinnermessages\" [textContent]=\"value\"></p>\n                </div>\n            </div>\n        </div>\n    `\n})\nexport class AppSpinnerComponent {\n    @Input() show: boolean;\n    @Input() spinnermessages: Array<string>;\n    constructor() {}\n}\n","import { AfterViewInit, Component, ViewChild, ViewContainerRef, TemplateRef, OnDestroy } from '@angular/core';\n\nimport { Toast, ToastPackage, ToastrService } from 'ngx-toastr';\n\nimport { $watch, $appDigest } from '@wm/core';\n\ndeclare const _, $;\n\n@Component({\n    selector: '[custom-toaster-component]',\n    template: `\n        <div class=\"parent-custom-toast\"></div>\n        <ng-container #customToast></ng-container>\n        <ng-template #customToastTmpl>\n            <div wmContainer partialContainer content.bind=\"pagename\">\n                <div *ngFor=\"let param of params | keyvalue\" wmParam hidden\n                    [name]=\"param.key\" [value]=\"param.value\"></div>\n            </div>\n        </ng-template>`,\n    preserveWhitespaces: false\n})\nexport class CustomToasterComponent extends Toast implements AfterViewInit, OnDestroy {\n\n    @ViewChild('customToast', {read: ViewContainerRef}) customToastRef: ViewContainerRef;\n    @ViewChild('customToastTmpl') customToastTmpl: TemplateRef<any>;\n    pagename: any;\n    watchers: any = [];\n    params: any = {};\n\n    // constructor is only necessary when not using AoT\n    constructor(\n        protected toastrService: ToastrService,\n        public toastPackage: ToastPackage\n    ) {\n        super(toastrService, toastPackage);\n        this.pagename = this.message || '';\n        this.generateParams();\n    }\n\n    // Generate the params for partial page. If bound, watch the expression and set the value\n    generateParams() {\n        _.forEach((<any>this.options).partialParams, (param) => {\n            if (_.isString(param.value) && param.value.indexOf('bind:') === 0) {\n                this.watchers.push($watch(\n                    param.value.substr(5),\n                    (<any>this.options).context,\n                    {},\n                    nv => {\n                        this.params[param.name] = nv;\n                        $appDigest();\n                    }\n                ));\n            } else {\n                this.params[param.name] = param.value;\n            }\n        });\n    }\n\n    async generateDynamicComponent() {\n        const $targetLayout = $('.parent-custom-toast');\n\n        this.customToastRef.clear();\n\n        $targetLayout[0].appendChild(this.customToastRef.createEmbeddedView(this.customToastTmpl).rootNodes[0]);\n    }\n\n    ngAfterViewInit() {\n        this.generateDynamicComponent();\n    }\n\n    ngOnDestroy() {\n        _.forEach(this.watchers, watcher => watcher());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { App, getWmProjectProperties } from '@wm/core';\nimport { SecurityService } from '@wm/security';\n\nimport { AppManagerService } from '../../services/app.manager.service';\n\n@Component({\n    selector: 'app-empty-page',\n    template: '<div></div>'\n})\nexport class EmptyPageComponent implements OnInit {\n\n    constructor(\n        private route: ActivatedRoute,\n        private securityService: SecurityService,\n        private router: Router,\n        private app: App,\n        private appManger: AppManagerService\n    ) {}\n\n    ngOnInit() {\n        if (this.app.isPrefabType) {\n            // there is only one route\n            this.router.navigate(['prefab-preview']);\n        } else  if (this.app.isApplicationType) {\n            this.securityService.getPageByLoggedInUser().then(page => {\n                this.router.navigate([page]);\n            });\n        } else {\n            this.router.navigate([getWmProjectProperties().homePage]);\n            this.appManger.postAppTypeInfo();\n        }\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    Directive,\n    ElementRef,\n    Inject,\n    Injector,\n    Self,\n    ViewContainerRef\n} from '@angular/core';\n\nimport { WidgetRef } from '@wm/components';\n\nimport { PrefabManagerService } from '../services/prefab-manager.service';\nimport { ComponentRefProvider, ComponentType } from '../types/types';\n\n@Directive({\n    selector: '[wmPrefab][prefabname]'\n})\nexport class PrefabDirective {\n\n    constructor(\n        @Self() @Inject(WidgetRef) public componentInstance,\n        public vcRef: ViewContainerRef,\n        public elRef: ElementRef,\n        private prefabMngr: PrefabManagerService,\n        private resolver: ComponentFactoryResolver,\n        private injector: Injector,\n        private componentRefProvider: ComponentRefProvider\n    ) {\n        const prefabName = this.componentInstance.prefabName;\n\n        this.prefabMngr.loadDependencies(prefabName)\n            .then(async () => {\n                const componentFactory = await this.componentRefProvider.getComponentFactoryRef(prefabName, ComponentType.PREFAB);\n                if (componentFactory) {\n                    const instanceRef = this.vcRef.createComponent(componentFactory, 0, injector);\n                    this.elRef.nativeElement.appendChild(instanceRef.location.nativeElement);\n                }\n            });\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport {\n    AbstractDialogService,\n    AbstractHttpService,\n    AbstractI18nService,\n    AbstractSpinnerService,\n    AbstractToasterService,\n    EventNotifier,\n    FieldTypeService,\n    FieldWidgetService,\n    getWmProjectProperties,\n    isDefined,\n    isString,\n    UtilsService,\n    DynamicComponentRefProvider\n} from '@wm/core';\nimport { SecurityService } from '@wm/security';\n\ndeclare const _;\n\nconst injectorMap = {\n    DialogService: AbstractDialogService,\n    i18nService: AbstractI18nService,\n    SpinnerService: AbstractSpinnerService,\n    ToasterService: AbstractToasterService,\n    Utils: UtilsService,\n    FIELD_TYPE: FieldTypeService,\n    FIELD_WIDGET: FieldWidgetService,\n    DynamicComponentService: DynamicComponentRefProvider\n};\n\nconst enum PROJECT_TYPE {\n    APPLICATION = 'APPLICATION',\n    PREFAB = 'PREFAB',\n    TEMPLATE_BUNDLE = 'TEMPLATEBUNDLE'\n}\n\nconst noop = (...args) => {};\n\n// Wraps httpService to behave as angular 1.x $http service.\nconst getHttpDependency = function() {\n    const httpService = this.httpService;\n    const fn = function (key, options?) {\n        const args = Array.from(arguments).slice(1);\n        return Promise.resolve(httpService[key].apply(httpService, args));\n    };\n    const $http = function () {\n        return fn.apply(undefined, ['send', ...Array.from(arguments)]);\n    };\n    ['get', 'post', 'head', 'put', 'delete', 'jsonp', 'patch'].forEach(key => $http[key] = fn.bind(undefined, key));\n    return $http;\n};\n\n@Injectable()\nexport class AppRef {\n    Variables: any = {};\n    Actions: any = {};\n    onAppVariablesReady = noop;\n    onSessionTimeout = noop;\n    onPageReady = noop;\n    onBeforePageLeave = noop;\n    onBeforeServiceCall =  noop;\n    onServiceSuccess =  noop;\n    onServiceError =  noop;\n    dynamicComponentContainerRef = {};\n\n    projectName: string;\n    isPrefabType: boolean;\n    isApplicationType: boolean;\n    isTabletApplicationType: boolean;\n    isTemplateBundleType: boolean;\n\n    appLocale: any;\n\n    changeLocale = this.i18nService.setSelectedLocale.bind(this.i18nService);\n    getSelectedLocale = this.i18nService.getSelectedLocale.bind(this.i18nService);\n\n    private _eventNotifier = new EventNotifier();\n\n    landingPageName: string;\n\n    reload() {\n        window.location.reload();\n    }\n\n    constructor(\n        private inj: Injector,\n        private i18nService: AbstractI18nService,\n        private httpService: AbstractHttpService,\n        private securityService: SecurityService\n    ) {\n\n        const wmProjectProperties = getWmProjectProperties();\n\n        this.projectName = wmProjectProperties.name;\n        this.isPrefabType = wmProjectProperties.type === PROJECT_TYPE.PREFAB;\n        this.isApplicationType = wmProjectProperties.type === PROJECT_TYPE.APPLICATION;\n        this.isTemplateBundleType = wmProjectProperties.type === PROJECT_TYPE.TEMPLATE_BUNDLE;\n\n        this.httpService.registerOnSessionTimeout(this.on401.bind(this));\n\n        this.appLocale = this.i18nService.getAppLocale();\n        this.httpService.setLocale(this.appLocale);\n    }\n\n    public notify(eventName: string, ...data: Array<any>) {\n        this._eventNotifier.notify.apply(this._eventNotifier, arguments);\n    }\n\n    public getDependency(injToken) {\n        if (isString(injToken)) {\n            if (injToken === 'HttpService') {\n                return getHttpDependency.call(this);\n            }\n            let providerInstance = injectorMap[injToken] && this.inj.get(injectorMap[injToken]);\n            if (!providerInstance && this.inj['_providers']) {\n                this.inj['_providers'].forEach( e => {\n                    if (e && e.__proto__.constructor.toString().indexOf('function ' + injToken + '(') === 0) {\n                        providerInstance = this.inj.get(e.__proto__.constructor);\n                    }\n                });\n            }\n            return providerInstance;\n        }\n        return this.inj.get(injToken);\n    }\n\n    /**\n     * triggers the onSessionTimeout callback in app.js\n     */\n    on401() {\n        const userInfo = _.get(this.securityService.get(), 'userInfo');\n        // if a previous user exists, a session time out triggered\n        if (!_.isEmpty(userInfo)) {\n            this.onSessionTimeout();\n        }\n    }\n\n    public subscribe(eventName, callback: (data: any) => void): () => void {\n        return this._eventNotifier.subscribe(eventName, callback);\n    }\n\n    public notifyApp(template, type, title) {\n        const notificationAction = _.get(this, 'Actions.appNotification');\n        if (notificationAction) {\n            type = type || 'success';\n            notificationAction.invoke({\n                message: template,\n                title: isDefined(title) ? title : type.toUpperCase(),\n                class: type,\n                // If the type is error do not close the toastr\n                duration: type.toUpperCase() === 'ERROR' ? 0 : undefined\n            });\n        } else {\n            console.warn('The default Action \"appNotification\" doesn\\'t exist in the app.');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AbstractToasterService, isDefined } from '@wm/core';\n\nimport { CustomToasterComponent } from '../components/custom-toaster.component';\n\ndeclare const _;\n\n@Injectable()\nexport class ToasterServiceImpl extends AbstractToasterService {\n\n    constructor(private toaster: ToastrService) {\n        super();\n    }\n\n    private _showToaster (type: string, title: string, desc: string, options?: any) {\n        // backward compatibility (in 9.x, 4th param is timeout value).\n        if (_.isNumber(options)) {\n            options = {timeOut: options};\n        }\n\n        options = options || {};\n        options.timeOut = isDefined(options.timeOut) ? options.timeOut : 0;\n        options.enableHtml = isDefined(options.enableHtml);\n        options.positionClass = options.positionClass || 'toast-bottom-right';\n        options.toastClass = 'toast';\n        // pop the toaster only if either title or description are defined\n        if (title || desc) {\n            // if the desc is an object, stringify it.\n            if (!options.bodyOutputType && _.isObject(desc)) {\n                desc = JSON.stringify(desc);\n            }\n            const fn = this.toaster[type];\n            if (fn) {\n                return fn.call(this.toaster, desc, title, options);\n            }\n        }\n    }\n\n    public success (title, desc) {\n        return this._showToaster('success', title, desc, {timeOut: 5000});\n    }\n\n    public error (title, desc) {\n        return this._showToaster('error', title, desc, {timeOut: 0});\n    }\n\n    public info (title, desc) {\n        return this._showToaster('info', title, desc, {timeOut: 0});\n    }\n\n    public warn (title, desc) {\n        return this._showToaster('warning', title, desc, {timeOut: 0});\n    }\n\n    public show (type, title, desc, options) {\n        return this._showToaster(type, title, desc, options);\n    }\n\n    public hide (toasterObj) {\n        // in studio just ignore the toasterObj and hide all the toasters\n        if (!toasterObj) {\n            this.toaster.clear();\n            return;\n        }\n        this.toaster.clear(toasterObj.toastId);\n    }\n\n    public showCustom(page, options) {\n        if (!page) {\n            return;\n        }\n        options = options || {};\n        options.toastComponent = CustomToasterComponent;\n        options.toastClass = 'custom-toaster';\n        options.timeOut = isDefined(options.timeOut) ? options.timeOut : 0;\n        options.enableHtml = isDefined(options.enableHtml);\n        options.positionClass = options.positionClass || 'toast-bottom-right';\n        options.toastClass = 'toast';\n        return this.toaster.show(page, '', options);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { registerLocaleData } from '@angular/common';\n\nimport { BsLocaleService, defineLocale } from 'ngx-bootstrap';\n\nimport {\n    _WM_APP_PROJECT,\n    AbstractI18nService,\n    AppDefaults,\n    getSessionStorageItem,\n    getWmProjectProperties,\n    isMobile,\n    isMobileApp,\n    replace,\n    setCSS,\n    setSessionStorageItem\n} from '@wm/core';\nimport { CONSTANTS } from '@wm/variables';\n\ndeclare const _, moment;\n\nconst APP_LOCALE_ROOT_PATH = 'resources/i18n';\nconst RTL_LANGUAGE_CODES = ['ar', 'ar-001', 'ar-ae', 'ar-bh', 'ar-dz', 'ar-eg', 'ar-iq', 'ar-jo', 'ar-kw', 'ar-lb', 'ar-ly',\n    'ar-ma', 'ar-om', 'ar-qa', 'ar-sa', 'ar-sd', 'ar-sy', 'ar-tn', 'ar-ye', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk',\n    'he', 'ku', 'mzn', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi'];\n\n@Injectable()\nexport class I18nServiceImpl extends AbstractI18nService {\n\n    private selectedLocale: string;\n    private defaultSupportedLocale = 'en';\n    private readonly appLocale: any;\n    private readonly prefabLocale: Map<String, any>;\n    private messages: any;\n    private _isAngularLocaleLoaded = false;\n\n    constructor(\n        private $http: HttpClient,\n        private bsLocaleService: BsLocaleService,\n        private appDefaults: AppDefaults\n    ) {\n        super();\n        this.appLocale = {};\n        this.prefabLocale = new Map();\n    }\n\n    private updateLocaleDirection() {\n        let direction: 'ltr' | 'rtl' = 'ltr';\n        if (RTL_LANGUAGE_CODES.includes(this.selectedLocale)) {\n            direction = 'rtl';\n        }\n\n        setCSS(document.body, 'direction', direction);\n    }\n\n    private init() {\n        this.messages = {};\n\n        Object.setPrototypeOf(this.appLocale, this.messages);\n    }\n\n    public getSelectedLocale(): string {\n        return this.selectedLocale;\n    }\n\n    public getDefaultSupportedLocale(): string {\n        return this.defaultSupportedLocale;\n    }\n\n    public getAppLocale(): any {\n        return this.appLocale;\n    }\n\n    public getPrefabLocaleBundle(prefabName: string): any {\n        if (!this.prefabLocale.has(prefabName)) {\n            this.prefabLocale.set(prefabName, Object.create(this.appLocale));\n        }\n        return this.prefabLocale.get(prefabName);\n    }\n\n    private extendPrefabMessages(messages: any): void {\n        if (!messages.prefabMessages) {\n            return;\n        }\n\n        Object.keys(messages.prefabMessages).forEach((prefabName: string) => {\n            let bundle = this.prefabLocale.get(prefabName);\n            if (!bundle) {\n                bundle = Object.create(this.appLocale);\n                this.prefabLocale.set(prefabName, bundle);\n            }\n            Object.assign(bundle, messages.prefabMessages[prefabName]);\n        });\n    }\n\n    private extendMessages(messages: any): void {\n        Object.assign(this.messages, messages);\n    }\n\n    private loadResource(path): Promise<any> {\n        return this.$http.get(path)\n            .toPromise()\n            .catch(() => {\n                console.warn(`error loading locale resource from ${path}`);\n                Promise.resolve({});\n            });\n    }\n\n    protected loadAppLocaleBundle() {\n        this.loadResource(`${APP_LOCALE_ROOT_PATH}/${this.selectedLocale}.json`)\n            .then(bundle => {\n                this.extendMessages(bundle.messages);\n                this.extendPrefabMessages(bundle);\n                this.appDefaults.setFormats(bundle.formats);\n            });\n    }\n\n    protected loadMomentLocaleBundle(momentLocale) {\n        const _cdnUrl = _WM_APP_PROJECT.cdnUrl || _WM_APP_PROJECT.ngDest;\n        if (this.selectedLocale === this.defaultSupportedLocale) {\n            moment.locale(this.defaultSupportedLocale);\n            return;\n        }\n        const path = _cdnUrl + `locales/moment/${momentLocale}.js`;\n        this.$http.get(path, {responseType: 'text'})\n            .toPromise()\n            .then((response: any) => {\n                const fn = new Function(response);\n\n                // Call the script. In script, moment defines the loaded locale\n                fn();\n                moment.locale(this.selectedLocale);\n\n                // For ngx bootstrap locale, get the config from script and apply locale\n                let _config;\n                fn.apply({moment: {defineLocale: (code, config) => _config = config}});\n                defineLocale(this.selectedLocale, _config);\n                this.bsLocaleService.use(this.getSelectedLocale() || this.defaultSupportedLocale);\n            });\n    }\n\n    protected loadAngularLocaleBundle(angLocale) {\n        return new Promise(resolve => {\n            const _cdnUrl = _WM_APP_PROJECT.cdnUrl || _WM_APP_PROJECT.ngDest;\n            if (this.selectedLocale === this.defaultSupportedLocale) {\n                resolve();\n                return;\n            }\n            const path = _cdnUrl + `locales/angular/${angLocale}.js`;\n\n            this.$http.get(path, {responseType: 'text'})\n                .toPromise()\n                .then((response: any) => {\n                    const module: any = {}, exports: any = {};\n                    module.exports = exports;\n                    const fn = new Function('module', 'exports', response);\n                    fn(module, exports);\n                    registerLocaleData(exports.default);\n                    this._isAngularLocaleLoaded = true;\n                    resolve();\n                }, () => resolve());\n        });\n    }\n\n    protected loadCalendarLocaleBundle(calendarLocale) {\n        const _cdnUrl = _WM_APP_PROJECT.cdnUrl || _WM_APP_PROJECT.ngDest;\n        let path: string;\n        if (calendarLocale) {\n            path = _cdnUrl + `locales/fullcalendar/${calendarLocale}.js`;\n        } else {\n            return Promise.resolve();\n        }\n\n        // return in case of mobile app or if selected locale is default supported locale.\n        if (isMobile() || isMobileApp() || this.selectedLocale === this.defaultSupportedLocale) {\n            return;\n        }\n\n        this.$http.get(path, {responseType: 'text'})\n            .toPromise()\n            .then((response: any) => {\n                const fn = new Function(response);\n                // Call the script. In script, moment defines the loaded locale\n                fn();\n            });\n    }\n\n    protected loadLocaleBundles(libLocale) {\n        if (libLocale.moment) {\n            this.loadMomentLocaleBundle(libLocale.moment);\n        }\n        if (libLocale.fullCalendar) {\n            this.loadCalendarLocaleBundle(libLocale.fullCalendar);\n        }\n        if (libLocale.angular) {\n            this.loadAppLocaleBundle();\n        }\n        return this.loadAngularLocaleBundle(libLocale.angular);\n    }\n\n    public setSelectedLocale(locale) {\n\n        // check if the event is propagated from the select or any such widget\n        if (_.isObject(locale)) {\n            locale = locale.datavalue;\n        }\n\n        const libLocale = getWmProjectProperties().supportedLanguages[locale];\n        const supportedLocale = Object.keys(getWmProjectProperties().supportedLanguages);\n\n        if (!_.includes(supportedLocale, locale)) {\n            return Promise.resolve();\n        }\n\n        if (!locale || locale === this.selectedLocale) {\n            return Promise.resolve();\n        }\n\n        setSessionStorageItem('selectedLocale', locale);\n\n        this.selectedLocale = locale;\n\n        // reset the localeData object\n        this.init();\n\n        // load the locale bundles of the selected locale\n        return this.loadLocaleBundles(libLocale).then(() => this.updateLocaleDirection());\n    }\n\n    public loadDefaultLocale() {\n        const _acceptLang = this.getAcceptedLanguages();\n        _acceptLang.push(getWmProjectProperties().defaultLanguage);\n\n        let _supportedLang = Object.keys(getWmProjectProperties().supportedLanguages) || [this.defaultSupportedLocale];\n\n        // check for the session storage to load any pre-requested locale\n        const _defaultLang = getSessionStorageItem('selectedLocale') || _.intersection(_acceptLang, _supportedLang)[0] || this.defaultSupportedLocale;\n\n        // if the supportedLocale is not available set it to defaultLocale\n        _supportedLang = _supportedLang || [_defaultLang];\n\n        const defaultLanguage = _defaultLang || _supportedLang[0];\n        return this.setSelectedLocale(defaultLanguage);\n    }\n\n    public getLocalizedMessage(message, ...args) {\n        return replace(this.appLocale[message], args);\n    }\n\n    // This function returns the accepted languages list\n    public getAcceptedLanguages() {\n        let languages;\n        if (CONSTANTS.hasCordova) {\n            languages = navigator.languages || [navigator.language];\n        } else {\n            languages = getWmProjectProperties().preferredLanguage || '';\n            /**\n             * Accept-Language Header will contain set of supported locale, so try splitting the string to proper locale set\n             * Ex: en,en-US;q=0.9,de;q=0.6,ar;q=0.2,hi\n             *\n             * Split the above into [en,en-us,de,ar,hi]\n             * @type {Array}\n             */\n            languages = languages.split(',').map(function(locale) {\n                return locale.split(';')[0];\n            });\n        }\n        return _.map(languages, _.toLower);\n    }\n\n    public isAngularLocaleLoaded() {\n        return this._isAngularLocaleLoaded;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { AbstractSpinnerService } from '@wm/core';\n\ndeclare const _, $;\n\nconst spinnerTemplate = `<div class=\"app-spinner\">\n                            <div class=\"spinner-message\" aria-label=\"loading gif\">\n                                <i class=\"spinner-image animated infinite fa fa-circle-o-notch fa-spin\"></i>\n                                <div class=\"spinner-messages\">\n                                    <p class=\"spinner-messages-container\"></p>\n                               </div>\n                            </div>\n                         </div>`;\n\n@Injectable()\nexport class SpinnerServiceImpl extends AbstractSpinnerService {\n    spinnerId = 0;\n    messageSource = new Subject();\n    messagesByContext = {};\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * returns the message source subject\n     * @returns {Subject<any>}\n     */\n    getMessageSource() {\n        return this.messageSource;\n    }\n\n    /**\n     * show spinner on a container element\n     */\n    showContextSpinner(ctx: string, message: string, id: string) {\n        const ctxMarkup = $('[name=\"' + ctx + '\"]');\n        this.messagesByContext[ctx] = this.messagesByContext[ctx] || {};\n        // If the spinner already exists on the context\n        // then just append the message to the existing spinner message\n        // else add a new spinner\n        if (Object.keys(this.messagesByContext[ctx]).length !== 0 ) {\n            this.messagesByContext[ctx][id] = message;\n            this.messagesByContext[ctx]['finalMessage'] = this.messagesByContext[ctx]['finalMessage'] + ' ' + this.messagesByContext[ctx][id];\n            ctxMarkup.find('.spinner-messages-container').html(this.messagesByContext[ctx]['finalMessage']);\n        } else {\n            const ctxSpinnerTemp = $(spinnerTemplate);\n            this.messagesByContext[ctx][id] = message;\n            this.messagesByContext[ctx]['finalMessage'] = this.messagesByContext[ctx][id];\n            ctxSpinnerTemp.find('.spinner-messages-container').html(this.messagesByContext[ctx]['finalMessage']);\n            ctxMarkup.prepend(ctxSpinnerTemp);\n        }\n        return id;\n    }\n\n    /**\n     * show the app spinner with provided message\n     * @param msg\n     * @returns {string}\n     */\n    showAppSpinner(msg, id) {\n        const ctx = 'page';\n        this.messagesByContext[ctx] = this.messagesByContext[ctx] || {};\n        this.messagesByContext[ctx][id] = msg;\n\n        this.messageSource.next({\n            show: true,\n            message: msg,\n            messages: _.values(this.messagesByContext[ctx])\n        });\n    }\n\n    /**\n     * hides the spinner on a particular container(context)\n     * @param ctx\n     * @param id\n     */\n    hideContextSpinner(ctx, id) {\n        delete this.messagesByContext[ctx][id];\n        if (Object.keys(this.messagesByContext[ctx]).length === 1) {\n            this.messagesByContext[ctx] = {};\n        }\n        const ctxMarkup = $('[name=\"' + ctx + '\"]');\n        ctxMarkup.find('.app-spinner').remove();\n    }\n\n    /**\n     * show spinner\n     * @param message\n     * @param id\n     * @param spinnerClass\n     * @param spinnerContext\n     * @param variableScopeId\n     * @returns {any}\n     */\n    show(message, id?, spinnerClass?, spinnerContext?, variableScopeId?) {\n        id      = id || ++this.spinnerId;\n        // if spinnerContext is passed, then append the spinner to the element(default method for variable calls).\n        if (spinnerContext && spinnerContext !== 'page') {\n            // return after the compiled spinner is appended to the element reference\n            return this.showContextSpinner(spinnerContext, message, id);\n        }\n\n        this.showAppSpinner(message, id);\n        return id;\n    }\n\n    /**\n     * hide the spinner\n     * @param spinnerId\n     */\n    hide(id) {\n        // find the spinner context of the id from the messagesByContext\n        const ctx = _.findKey(this.messagesByContext, function (obj) {\n            return _.includes(_.keys(obj), id);\n        }) || 'page';\n\n        // if spinnerContext exists just remove the spinner from the reference and destroy the scope associated.\n        if (ctx !== 'page') {\n            this.hideContextSpinner(ctx, id);\n            return;\n        }\n\n        if (id) {\n            delete this.messagesByContext[ctx][id];\n            const messages = _.values(this.messagesByContext[ctx]);\n            const pageSpinnerCount = Object.keys(this.messagesByContext[ctx]).length;\n            this.messageSource.next({\n                show: messages.length ? true : false,\n                messages: _.values(this.messagesByContext[ctx])\n            });\n            // If a page spinner has id and no messages left to display then remove that spinner.\n            if (pageSpinnerCount === 0) {\n                $('.app-spinner').remove();\n            }\n        } else {\n            this.messagesByContext[ctx] = {};\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\n\nimport { App, NavigationOptions, AbstractNavigationService } from '@wm/core';\nimport { CONSTANTS } from '@wm/variables';\n\ndeclare const _, $;\n\nconst parentSelector = 'body:first >app-root:last';\n\n@Injectable()\nexport class NavigationServiceImpl implements AbstractNavigationService {\n    private history = new History();\n    private transition: string;\n    private isPageAddedToHistory = false;\n\n    constructor(private app: App, private router: Router) {\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                const url = event.url;\n                const urlParams = {};\n                let pageName;\n                if (!this.isPageAddedToHistory) {\n                    this.isPageAddedToHistory = false;\n                    if (url.indexOf('?') > 0) {\n                        url.substr(url.indexOf('?') + 1)\n                            .split('&')\n                            .forEach(s => {\n                                const splits = s.split('=');\n                                urlParams[splits[0]] = splits[1];\n                            });\n                        pageName = url.substr(0, url.indexOf('?'));\n                    } else {\n                        pageName = url;\n                    }\n                    if (pageName[0] === '/') {\n                        pageName = pageName.substr(1);\n                    }\n                    if (pageName) {\n                        /*\n                         * Commenting this code, one client project has Home_Page configured as Login Page.\n                         * So redirection to Home_Page post login is failing\n                         // if login page is being loaded and user is logged in, cancel that.\n                            if ($rs.isApplicationType) {\n                                stopLoginPagePostLogin($p);\n                            }\n                         */\n                        delete urlParams['name'];\n\n                        this.history.push(new PageInfo(pageName, urlParams, this.transition));\n                    }\n                }\n            }\n        });\n    }\n\n    public getPageTransition() {\n        if (_.isEmpty(this.transition) || _.isEqual('none', this.transition)) {\n            return null;\n        }\n        return this.transition;\n    }\n\n    /**\n     * Navigates to particular page\n     * @param pageName\n     * @param options\n     */\n    public goToPage(pageName: string, options: NavigationOptions) {\n        this.transition = options.transition || '';\n        // page is added to stack only when currentPage is available.\n        if (this.history.getCurrentPage()) {\n            this.isPageAddedToHistory = true;\n        }\n        this.history.push( new PageInfo(pageName, options.urlParams, this.transition));\n        if (CONSTANTS.isWaveLens) {\n            const location = window['location'];\n            const strQueryParams = _.map(options.urlParams || [], (value, key) => key + '=' + value);\n\n            const strQuery = (strQueryParams.length > 0 ? '?' + strQueryParams.join('&') : '');\n\n            location.href = location.origin\n                + location.pathname\n                + '#/' + pageName\n                + strQuery;\n            return;\n        }\n        return this.router.navigate([`/${pageName}`], { queryParams: options.urlParams});\n    }\n\n    /**\n     * Navigates to last visited page.\n     */\n    public goToPrevious() {\n        if (this.history.getPagesCount()) {\n            this.transition = this.history.getCurrentPage().transition;\n            if (!_.isEmpty(this.transition)) {\n                this.transition += '-exit';\n            }\n            this.history.pop();\n            this.isPageAddedToHistory = true;\n            window.history.back();\n        }\n    }\n\n    /** Todo[Shubham] Need to handle gotoElement in other partials\n     * Navigates to particular view\n     * @param viewName\n     * @param options\n     * @param variable\n     */\n    public goToView(viewName: string, options: NavigationOptions, variable: any) {\n        options = options || {};\n        const pageName = options.pageName;\n        const transition = options.transition || '';\n        const $event = options.$event;\n        const activePage = this.app.activePage;\n        const prefabName = variable && variable._context && variable._context.prefabName;\n\n        // Check if app is Prefab\n        if (this.app.isPrefabType) {\n            this.goToElementView($(parentSelector).find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n        } else {\n            // checking if the element is present in the page or not, if no show an error toaster\n            // if yes check if it is inside a partial/prefab in the page and then highlight the respective element\n            // else goto the page in which the element exists and highlight the element\n            if (pageName !== activePage.activePageName && !prefabName) {\n                if (this.isPartialWithNameExists(pageName)) {\n                    this.goToElementView($('[partialcontainer][content=\"' + pageName + '\"]').find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n                } else {\n                    // Todo[Shubham]: Make an API call to get all pages and check if the page name\n                    //  is a page and then do this call else show an error as:\n                    //  this.app.notifyApp(CONSTANTS.WIDGET_DOESNT_EXIST, 'error');\n                    this.goToPage(pageName, {\n                        viewName: viewName,\n                        $event: $event,\n                        transition: transition,\n                        urlParams: options.urlParams\n                    });\n                    // subscribe to an event named pageReady which notifies this subscriber\n                    // when all widgets in page are loaded i.e when page is ready\n                    const pageReadySubscriber = this.app.subscribe('pageReady', (page) => {\n                        this.goToElementView($(parentSelector).find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n                        pageReadySubscriber();\n                    });\n                }\n            } else if (prefabName && this.isPrefabWithNameExists(prefabName)) {\n                this.goToElementView($('[prefabName=\"' + prefabName + '\"]').find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n            } else if (!pageName || pageName === activePage.activePageName) {\n                this.goToElementView($(parentSelector).find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n            } else {\n                this.app.notifyApp(CONSTANTS.WIDGET_DOESNT_EXIST, 'error');\n            }\n        }\n    }\n\n    /*\n     * navigates the user to a view element with given name\n     * if the element not found in the compiled markup, the same is searched in the available dialogs in the page\n     */\n    private goToElementView(viewElement, viewName: string, pageName: string, variable: any) {\n        let $el, parentDialog;\n        const activePage = this.app.activePage;\n        if (viewElement.length) {\n            if (!this.app.isPrefabType && pageName === activePage.activePageName) {\n                viewElement = this.getViewElementInActivePage(viewElement);\n            }\n\n            $el = viewElement[0].widget;\n            switch ($el.widgetType) {\n                case 'wm-accordionpane':\n                    this.showAncestors(viewElement, variable);\n                    $el.expand();\n                    break;\n                case 'wm-tabpane':\n                    this.showAncestors(viewElement, variable);\n                    $el.select();\n                    break;\n                case 'wm-segment-content':\n                    this.showAncestors(viewElement, variable);\n                    $el.navigate();\n                    break;\n                case 'wm-panel':\n                    /* flip the active flag */\n                    $el.expanded = true;\n                    break;\n            }\n        } else {\n            parentDialog = this.showAncestorDialog(viewName);\n            setTimeout(() => {\n                if (parentDialog) {\n                    this.goToElementView($('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n                }\n            });\n        }\n    }\n\n    /* If page name is equal to active pageName, this function returns the element in the page.\n     The element in the partial page is not selected.*/\n    private getViewElementInActivePage($el) {\n        let selector;\n        if ($el.length > 1) {\n            selector = _.filter($el, (childSelector) => {\n                if (_.isEmpty($(childSelector).closest('[data-role = \"partial\"]')) && _.isEmpty($(childSelector).closest('[wmprefabcontainer]'))) {\n                    return childSelector;\n                }\n            });\n            if (selector) {\n                $el = $(selector);\n            }\n        }\n        return $el;\n    }\n\n    /**\n     * checks if the pagecontainer has the pageName.\n     */\n    private isPartialWithNameExists(name: string) {\n        return $('[partialcontainer][content=\"' + name + '\"]').length;\n    }\n\n    /**\n     * checks if the pagecontainer has the prefab.\n     */\n    private isPrefabWithNameExists(prefabName: string) {\n        return $('[prefabName=\"' + prefabName + '\"]').length;\n    }\n\n    /*\n     * shows all the parent container view elements for a given view element\n     */\n    private showAncestors(element, variable) {\n        const ancestorSearchQuery = '[wm-navigable-element=\"true\"]';\n\n        element\n            .parents(ancestorSearchQuery)\n            .toArray()\n            .reverse()\n            .forEach((parent) => {\n                const $el = parent.widget;\n                switch ($el.widgetType) {\n                    case 'wm-accordionpane':\n                        $el.expand();\n                        break;\n                    case 'wm-tabpane':\n                        $el.select();\n                        break;\n                    case 'wm-segment-content':\n                        $el.navigate();\n                        break;\n                    case 'wm-panel':\n                        /* flip the active flag */\n                        $el.expanded = true;\n                        break;\n                }\n            });\n    }\n\n\n\n    /*\n     * searches for a given view element inside the available dialogs in current page\n     * if found, the dialog is displayed, the dialog id is returned.\n     */\n    private showAncestorDialog(viewName: string) {\n        let dialogId;\n        $('app-root [dialogtype]')\n            .each(function () {\n                const dialog = $(this);\n                if ($(dialog.html()).find('[name=\"' + viewName + '\"]').length) {\n                    dialogId = dialog.attr('name');\n                    return false;\n                }\n            });\n        return dialogId;\n    }\n}\n\nclass PageInfo {\n\n    constructor(public name, public urlParams?, public transition?) {\n        this.transition = _.isEmpty(this.transition) ? null : this.transition;\n    }\n\n    public isEqual(page1: PageInfo) {\n        return page1 && page1.name === this.name && _.isEqual(page1.urlParams, this.urlParams);\n    }\n}\n\nclass History {\n    private stack: Array<PageInfo> = [];\n    private currentPage: PageInfo;\n\n    public getCurrentPage() {\n        return this.currentPage;\n    }\n\n    public getPagesCount() {\n        return this.stack.length;\n    }\n\n    public isLastVisitedPage(page: PageInfo) {\n        return this.getLastPage().isEqual(page);\n    }\n\n    public push(pageInfo: PageInfo) {\n        if (this.currentPage) {\n            this.stack.push(this.currentPage);\n        }\n        this.currentPage = pageInfo;\n    }\n\n    public pop() {\n        this.currentPage = this.stack.pop();\n        return this.currentPage;\n    }\n\n    public getLastPage() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { AppDefaults } from '@wm/core';\n\ndeclare const _;\n\n@Injectable()\nexport class AppDefaultsService implements AppDefaults {\n\n    constructor() {\n    }\n\n    dateFormat: string;\n    timeFormat: string;\n    dateTimeFormat: string;\n\n    setFormats(formats: any) {\n        const dateFormat = formats.date;\n        const timeFormat = formats.time;\n        const dateTimeFormat = (dateFormat && timeFormat) ? dateFormat + ' ' + timeFormat : undefined;\n\n        this.dateFormat = dateFormat;\n        this.timeFormat = timeFormat;\n        this.dateTimeFormat = dateTimeFormat;\n    }\n}","import { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { SecurityService } from '@wm/security';\n\nimport { AppManagerService } from '../services/app.manager.service';\n\nlet securityConfigLoaded = false;\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private securityService: SecurityService, private appManager: AppManagerService) {}\n\n    loadSecurityConfig(): Promise<boolean> {\n        if (securityConfigLoaded) {\n            return Promise.resolve(true);\n        }\n\n        return this.appManager.loadSecurityConfig().then(() => securityConfigLoaded = true);\n    }\n\n    isAuthenticated(): Promise<any> {\n        return this.loadSecurityConfig()\n            .then(() => {\n                return new Promise((resolve, reject) => {\n                    this.securityService.isAuthenticated(resolve, reject);\n                });\n            });\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<any> {\n        return this.isAuthenticated()\n            .then(isLoggedIn => {\n                if (isLoggedIn) {\n                    return Promise.resolve(true);\n                }\n\n                this.appManager.handle401(route.routeConfig.path);\n\n                return Promise.resolve(false);\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\nimport { AbstractToasterService, App } from '@wm/core';\nimport { SecurityService } from '@wm/security';\n\nimport { AuthGuard } from './auth.guard';\nimport { AppManagerService } from '../services/app.manager.service';\n\ndeclare const _: any;\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n\n    constructor(\n        private securityService: SecurityService,\n        private authGuard: AuthGuard,\n        private toasterService: AbstractToasterService,\n        private app: App,\n        private appManager: AppManagerService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n        const allowedRoles = route.data.allowedRoles;\n\n        return this.authGuard.isAuthenticated()\n            .then((isLoggedIn: boolean) => {\n                if (isLoggedIn) {\n                    const userRoles = this.securityService.get().userInfo.userRoles;\n                    const hasAccess = _.intersection(allowedRoles, userRoles).length > 0;\n\n                    if (hasAccess) {\n                        return Promise.resolve(true);\n                    }\n\n                    // current loggedin user doesn't have access to the page that the user is trying to view\n                    this.appManager.notifyApp(\n                        this.app.appLocale.LABEL_ACCESS_DENIED || 'Access Denied',\n                        'error'\n                    );\n\n                    return Promise.resolve(false);\n\n                } else {\n                    // redirect to Login\n                    this.appManager.handle401(route.routeConfig.path);\n\n                    return Promise.resolve(false);\n                }\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\nimport { App } from '@wm/core';\nimport { AppManagerService } from '../services/app.manager.service';\n\ndeclare const _: any;\n\n@Injectable()\nexport class PageNotFoundGaurd implements CanActivate {\n\n    constructor(\n        private app: App,\n        private appManager: AppManagerService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n        this.appManager.notifyApp(\n            this.app.appLocale.MESSAGE_PAGE_NOT_FOUND || 'The page you are trying to reach is not available',\n            'error'\n        );\n        return Promise.resolve(false);\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { App, UtilsService } from '@wm/core';\n\nimport { AppJSProvider } from '../types/types';\n\nlet appJsLoaded = false;\n\n@Injectable()\nexport class AppJSResolve implements Resolve<any> {\n\n    constructor(\n        private inj: Injector,\n        private app: App,\n        private utilService: UtilsService,\n        private appJsProvider: AppJSProvider\n    ) {}\n\n    async resolve() {\n        if (appJsLoaded) {\n            return true;\n        }\n\n        try {\n            // execute app.js\n            const appScriptFn = await this.appJsProvider.getAppScriptFn();\n            appScriptFn(this.app, this.utilService, this.inj);\n        } catch (e) {\n            console.warn('Error in executing app.js', e);\n        }\n\n        appJsLoaded = true;\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { AbstractI18nService } from '@wm/core';\n\n@Injectable()\nexport class I18nResolve implements Resolve<any> {\n\n    constructor(private i18nService: AbstractI18nService) {}\n\n    resolve() {\n        return this.i18nService.loadDefaultLocale();\n    }\n}\n","import { Compiler, Injectable, Injector, ChangeDetectorRef, InjectionToken, KeyValueDiffers, Pipe } from '@angular/core';\nimport {\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n    NgLocalization\n} from '@angular/common'\nimport {\n    SuffixPipe,\n    ToDatePipe,\n    FileIconClassPipe,\n    FileExtensionFromMimePipe,\n    FilterPipe,\n    FileSizePipe,\n    ToNumberPipe,\n    ToCurrencyPipe,\n    PrefixPipe,\n    TimeFromNowPipe,\n    NumberToStringPipe,\n    StateClassPipe,\n    StringToNumberPipe\n} from '@wm/components';\nimport { getSessionStorageItem } from '@wm/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PipeProvider {\n    _pipeMeta;\n    _locale = getSessionStorageItem('selectedLocale') || 'en';\n    preparePipeMeta = (\n        reference: Pipe,\n        name: string,\n        pure: boolean,\n        diDeps = []\n    ) => ({\n        type: { reference, diDeps },\n        name,\n        pure\n    })\n    _pipeData = [\n        // TODO | NEED TO BE TESTED\n        this.preparePipeMeta(AsyncPipe, 'async', false, [ChangeDetectorRef]),\n        this.preparePipeMeta(SlicePipe, 'slice', false),\n        this.preparePipeMeta(PercentPipe, 'percent', true, [this._locale]),\n        this.preparePipeMeta(I18nPluralPipe, 'i18nPlural', true, [\n            NgLocalization\n        ]),\n        this.preparePipeMeta(I18nSelectPipe, 'i18nSelect', true),\n        this.preparePipeMeta(KeyValuePipe, 'keyvalue', false, [\n            KeyValueDiffers\n        ]),\n        this.preparePipeMeta(FileIconClassPipe, 'fileIconClass', true),\n        this.preparePipeMeta(\n            FileExtensionFromMimePipe,\n            'fileExtensionFromMime',\n            true\n        ),\n        this.preparePipeMeta(StateClassPipe, 'stateClass', true),\n        this.preparePipeMeta(FileSizePipe, 'filesize', true),\n        // TESTED\n        this.preparePipeMeta(FilterPipe, 'filter', true),\n        this.preparePipeMeta(UpperCasePipe, 'uppercase', true),\n        this.preparePipeMeta(LowerCasePipe, 'lowercase', true),\n        this.preparePipeMeta(JsonPipe, 'json', false),\n        this.preparePipeMeta(DecimalPipe, 'number', true, [this._locale]),\n        this.preparePipeMeta(TitleCasePipe, 'titlecase', true),\n        this.preparePipeMeta(CurrencyPipe, 'currency', true, [this._locale]),\n        this.preparePipeMeta(DatePipe, 'date', true, [this._locale]),\n        this.preparePipeMeta(ToDatePipe, 'toDate', true, [\n            new DatePipe(this._locale)\n        ]),\n        this.preparePipeMeta(ToNumberPipe, 'toNumber', true, [\n            new DecimalPipe(this._locale)\n        ]),\n        this.preparePipeMeta(ToCurrencyPipe, 'toCurrency', true, [\n            new DecimalPipe(this._locale)\n        ]),\n        this.preparePipeMeta(PrefixPipe, 'prefix', true),\n        this.preparePipeMeta(SuffixPipe, 'suffix', true),\n        this.preparePipeMeta(TimeFromNowPipe, 'timeFromNow', true),\n        this.preparePipeMeta(NumberToStringPipe, 'numberToString', true, [\n            new DecimalPipe(this._locale)\n        ]),\n        this.preparePipeMeta(StringToNumberPipe, 'stringToNumber', true)\n    ];\n\n    unknownPipe(name) {\n        throw Error(`The pipe '${name}' could not be found`);\n    }\n\n    constructor(private compiler: Compiler, private injector: Injector) {\n        this._pipeMeta = new Map();\n        this._pipeData.forEach(v => {\n            this._pipeMeta.set(v.name, v);\n        });\n    }\n\n    meta(name) {\n        const meta = this._pipeMeta.get(name);\n        if (!meta) {\n            this.unknownPipe(name);\n        }\n        return meta;\n    }\n\n    getPipeNameVsIsPureMap() {\n        const _map = new Map();\n        this._pipeMeta.forEach((v, k) => {\n            _map.set(k, v.pure);\n        });\n        return _map;\n    }\n\n    resolveDep(dep) {\n        return this.injector.get(dep.token.identifier.reference);\n    }\n\n    getInstance(name) {\n        const {\n            type: { reference: ref, diDeps: deps }\n        } = this.meta(name);\n        if (!ref) {\n            this.unknownPipe(name);\n        }\n\n        if (!deps.length) {\n            return new ref();\n        } else {\n            const args = [];\n            for (const dep of deps) {\n                args.push(dep);\n            }\n            return new ref(...args);\n        }\n    }\n}\n","import { ApplicationRef, Component, DoCheck, ElementRef, NgZone, ViewEncapsulation, ViewChild, ViewContainerRef, AfterViewInit } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\nimport { setTheme } from 'ngx-bootstrap';\n\nimport { $invokeWatchers, AbstractDialogService, AbstractSpinnerService, getWmProjectProperties, hasCordova, setAppRef, setNgZone, setPipeProvider, App, addClass, removeClass } from '@wm/core';\nimport { OAuthService } from '@wm/oAuth';\nimport { PipeProvider } from '../../services/pipe-provider.service';\n\ninterface SPINNER {\n    show: boolean;\n    messages: Array<string>;\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements DoCheck, AfterViewInit {\n    public startApp = false;\n    public isApplicationType = false;\n\n    @ViewChild('dynamicComponent', {read: ViewContainerRef}) dynamicComponentContainerRef: ViewContainerRef;\n\n    spinner: SPINNER = {show: false, messages: []};\n    constructor(\n        _pipeProvider: PipeProvider,\n        _appRef: ApplicationRef,\n        private elRef: ElementRef,\n        private oAuthService: OAuthService,\n        private dialogService: AbstractDialogService,\n        private spinnerService: AbstractSpinnerService,\n        ngZone: NgZone,\n        private router: Router,\n        private app: App\n    ) {\n        setPipeProvider(_pipeProvider);\n        setNgZone(ngZone);\n        setAppRef(_appRef);\n\n        this.isApplicationType = getWmProjectProperties().type === 'APPLICATION';\n\n        // subscribe to OAuth changes\n        oAuthService.getOAuthProvidersAsObservable().subscribe((providers: any) => {\n            this.providersConfig = providers;\n            if (providers.length) {\n                this.showOAuthDialog();\n            } else {\n                this.closeOAuthDialog();\n            }\n        });\n\n        // Subscribe to the message source to show/hide app spinner\n        this.spinnerService.getMessageSource().asObservable().subscribe((data: any) => {\n            // setTimeout is to avoid 'ExpressionChangedAfterItHasBeenCheckedError'\n            setTimeout(() => {\n                this.spinner.show = data.show;\n                this.spinner.messages = data.messages;\n            });\n        });\n\n        // set theme to bs3 on ngx-bootstrap. This avoids runtime calculation to determine bs theme. Thus resolves performance.\n        setTheme('bs3');\n        if (hasCordova() && !window['wmDeviceReady']) {\n            document.addEventListener('wmDeviceReady' , () => this.startApp = true);\n        } else {\n            this.startApp = true;\n        }\n\n        let spinnerId;\n\n        this.router.events.subscribe(e => {\n            if (e instanceof NavigationStart) {\n                spinnerId = this.spinnerService.show('', 'globalSpinner');\n                const node = document.querySelector('app-page-outlet') as HTMLElement;\n                if (node) {\n                    addClass(node, 'page-load-in-progress');\n                }\n            } else if (e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError) {\n                setTimeout(() => {\n                    this.spinnerService.hide(spinnerId);\n                    const node = document.querySelector('app-page-outlet') as HTMLElement;\n                    if (node) {\n                        removeClass(node, 'page-load-in-progress');\n                    }\n                }, 1000);\n            }\n        });\n    }\n\n    providersConfig;\n    isOAuthDialogOpen = false;\n\n    showOAuthDialog() {\n        if (!this.isOAuthDialogOpen) {\n            this.isOAuthDialogOpen = true;\n            this.dialogService.open('oAuthLoginDialog', this);\n        }\n    }\n\n    closeOAuthDialog() {\n        if (this.isOAuthDialogOpen) {\n            this.isOAuthDialogOpen = false;\n            this.dialogService.close('oAuthLoginDialog', this);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.app.dynamicComponentContainerRef = this.dynamicComponentContainerRef;\n    }\n\n    ngDoCheck() {\n        $invokeWatchers();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { httpService, appManager } from '@wm/variables';\nimport { WmHttpRequest, WmHttpResponse } from '@wm/http';\n\ndeclare const _;\n\n/**\n * This Interceptor intercepts all network calls and if a network call fails\n * due to session timeout, then it calls a function to handle session timeout.\n */\n@Injectable()\nexport class HttpCallInterceptor implements HttpInterceptor {\n\n    wmHttpRequest: any;\n    wmHttpResponse: any;\n    \n    constructor() {\n        this.wmHttpRequest = new WmHttpRequest();\n        this.wmHttpResponse = new WmHttpResponse();\n    }\n\n    createSubject() {\n        return new Subject();\n    }\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let modifiedReq;\n        let modifiedResp;\n        if (appManager && appManager.appOnBeforeServiceCall) {\n            // Convert the angular HttpRequest to wm HttpRequest\n            const req = this.wmHttpRequest.angularToWmRequest(request);\n            // trigger the common onBeforeServiceCall handler present in app.js\n            modifiedReq =  appManager.appOnBeforeServiceCall(req);\n            if (modifiedReq) {\n                // Convert the wm HttpRequest to angular HttpRequest\n                modifiedReq = this.wmHttpRequest.wmToAngularRequest(modifiedReq);\n                request = modifiedReq;\n            }\n        }\n        return next.handle(request).pipe(\n            tap((response: any) => {\n                    if (response && response.type === 4 && appManager &&  appManager.appOnServiceSuccess) {\n                        // Convert the angular HttpResponse to wm HttpResponse\n                        const resp = this.wmHttpResponse.angularToWmResponse(response);\n                        // trigger the common success handler present in app.js\n                        modifiedResp = appManager.appOnServiceSuccess(resp.body, resp);\n                        if (modifiedResp) {\n                            // Convert the wm HttpResponse to angular HttpResponse\n                            modifiedResp = this.wmHttpResponse.wmToAngularResponse(modifiedResp);\n                            _.extend(response, modifiedResp);\n                        }\n                    }\n                },\n                error => {\n                    error._401Subscriber = this.createSubject();\n                    if (httpService.isPlatformSessionTimeout(error)) {\n                        httpService.handleSessionTimeout(request, error._401Subscriber);\n                    }\n                    if (appManager && appManager.appOnServiceError) {\n                        // Convert the angular HttpResponse to wm HttpResponse\n                        const err = this.wmHttpResponse.angularToWmResponse(error);\n                        // trigger the common error handler present in app.js\n                        modifiedResp = appManager.appOnServiceError(err.message, err);\n                        if (modifiedResp) {\n                            // Convert the wm HttpResponse to angular HttpResponse\n                            modifiedResp = this.wmHttpResponse.wmToAngularResponse(modifiedResp);\n                            _.extend(error, modifiedResp);\n                        }\n                    }\n                }\n            )\n        );\n    }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\n\nimport { PrefabDirective } from '@wm/components';\n\nimport { PrefabManagerService } from '../services/prefab-manager.service';\n\nconst PREFAB = 'PREFAB';\n\n@Component({\n    selector: 'wm-prefab-preview',\n    template: `\n        <div class=\"prefab-preview row\">\n            <section wmPrefab name=\"prefab-preview\" prefabname=\"__self__\"></section>\n        </div>\n    `\n})\nexport class PrefabPreviewComponent implements AfterViewInit {\n    private config: any;\n    private previewMode: boolean;\n\n    @ViewChild(PrefabDirective) prefabInstance;\n\n    constructor(private prefabManager: PrefabManagerService) {\n\n        window.addEventListener('message', e => {\n            const context = e.data && e.data.context;\n\n            if (context !== PREFAB) {\n                return;\n            }\n\n            const action = e.data.action;\n            const payload = e.data.payload;\n\n            if (action === 'init') {\n                this.init();\n            } else if (action === 'set-property') {\n                this.setProperty(payload);\n            } else if (action === 'get-outbound-properties') {\n                this.getOutboundProps();\n            } else if (action === 'invoke-script') {\n                this.invokeScript(payload);\n            }\n        });\n    }\n\n    postMessage(action, payload?: any) {\n        const data = {\n            context: PREFAB,\n            action,\n            payload\n        };\n        window.top.postMessage(data, '*');\n    }\n\n    setupEventListeners() {\n        this.prefabInstance.invokeEventCallback = (eventName, locals = {}) => {\n            this.postMessage('event-log', { name: eventName, data: locals });\n        };\n    }\n\n    init() {\n        this.previewMode = true;\n\n        this.prefabInstance.readyState.subscribe(\n            () => {},\n            () => {},\n            () => {\n                this.prefabManager.getConfig('__self__')\n                    .then(config => {\n                        this.config = config;\n                        this.postMessage('config', config);\n\n                        this.setupEventListeners();\n                    });\n            }\n        );\n    }\n\n    setProperty(payload: any) {\n        this.prefabInstance.widget[payload.name] = payload.value;\n    }\n\n    isOutBoundProp(info) {\n        return info.bindable === 'out-bound' || info.bindable === 'in-out-bound';\n    }\n\n    getOutboundProps() {\n        const payload = {};\n        for (const [name, info] of Object.entries(this.config.properties || {})) {\n            if (this.isOutBoundProp(info)) {\n                payload[name] = this.prefabInstance.widget[name];\n            }\n        }\n\n        this.postMessage('outbound-properties', payload);\n    }\n\n    invokeScript(payload: any) {\n        const script = `\\n return ${payload.script};`;\n\n        const fn = new Function('Prefab', script);\n\n        const retVal = fn(this.prefabInstance);\n\n        this.postMessage('method-output', { methodName: payload.methodName, output: retVal });\n    }\n\n    ngAfterViewInit() {\n        this.setupEventListeners();\n        this.postMessage('init');\n    }\n}\n\n","import {\n    Compiler,\n    Component,\n    CUSTOM_ELEMENTS_SCHEMA,\n    Injectable,\n    NgModule,\n    NO_ERRORS_SCHEMA,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { App, extendProto, isDefined } from '@wm/core';\nimport { transpile } from '@wm/transpiler';\nimport { initComponentsBuildTask } from '@wm/build-task';\n\nimport { AppManagerService } from './app.manager.service';\nimport { RuntimeBaseModule } from '../runtime-base.module';\n\ninitComponentsBuildTask();\n\nconst componentFactoryRefCache = new Map<string, any>();\n\nconst getDynamicModule = (componentRef: any) => {\n    @NgModule({\n        declarations: [componentRef],\n        imports: [\n            RuntimeBaseModule\n        ],\n        schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n    })\n    class DynamicModule {}\n\n    return DynamicModule;\n};\n\nconst getDynamicComponent = (\n    selector,\n    template: string,\n    css: string = '') => {\n\n    const componentDef = {\n        template,\n        styles: [css],\n        encapsulation: ViewEncapsulation.None\n    };\n\n    @Component({\n        ...componentDef,\n        selector\n    })\n    class DynamicComponent {\n    }\n\n    return DynamicComponent;\n};\n\n@Injectable()\nexport class DynamicComponentRefProviderService {\n    private counter = 1;\n\n    constructor(\n        private app: App,\n        private appManager: AppManagerService,\n        private compiler: Compiler\n    ) {}\n\n    public async getComponentFactoryRef(selector: string, markup: string, options: any = {}): Promise<any> {\n        // check in the cache.\n        let componentFactoryRef = componentFactoryRefCache.get(selector);\n\n        markup = options.transpile ? transpile(markup) : markup;\n        if (!componentFactoryRef || options.noCache) {\n            const componentDef = getDynamicComponent(selector, markup, options.styles);\n            const moduleDef = getDynamicModule(componentDef);\n\n            componentFactoryRef = this.compiler\n                .compileModuleAndAllComponentsSync(moduleDef)\n                .componentFactories\n                .filter(factory => factory.componentType === componentDef)[0];\n\n            componentFactoryRefCache.set(selector, componentFactoryRef);\n        }\n        return componentFactoryRef;\n    }\n\n    /**\n     * Creates the component dynamically and add it to the DOM\n     * @param target: HTML element where we need to append the created component\n     * @param markup: Template of the component\n     * @param context: Scope of the component\n     * @param options: We have options like\n                       selector: selector of the component\n                       transpile: flag for transpiling HTML. By default it is true\n                       nocache: flag for render it from cache or not. By default it is true\n     */\n    public async addComponent(target: HTMLElement, markup: string, context = {}, options: any = {}) {\n        options.transpile = isDefined(options.transpile) ? options.transpile : true;\n        options.noCache = isDefined(options.noCache) ? options.noCache : true;\n        options.selector = isDefined(options.selector) ? options.selector : 'wm-dynamic-component-'+ this.counter++;\n        const componentFactoryRef = await this.getComponentFactoryRef(options.selector, markup, options);\n        const component = this.app.dynamicComponentContainerRef.createComponent(componentFactoryRef, 0);\n        extendProto(component.instance, context);\n        target.appendChild(component.location.nativeElement);\n    }\n}\n","import {ActivatedRouteSnapshot, CanDeactivate, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable, Injector} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\n\n\nexport interface CanComponentDeactivate  {\n    canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class CanDeactivatePageGuard implements CanDeactivate<CanComponentDeactivate> {\n    canDeactivate(component: CanComponentDeactivate, route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n","import {APP_INITIALIZER, LOCALE_ID, ModuleWithProviders, NgModule} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule, DatePipe, DecimalPipe } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { BsDropdownModule, CarouselModule, ModalModule, PopoverModule, TooltipModule } from 'ngx-bootstrap';\n\nimport {\n    _WM_APP_PROJECT,\n    $parseExpr,\n    AbstractI18nService,\n    AbstractNavigationService,\n    AbstractSpinnerService,\n    AbstractToasterService,\n    App,\n    AppDefaults,\n    CoreModule,\n    DynamicComponentRefProvider\n} from '@wm/core';\nimport { WmComponentsModule } from '@wm/components';\nimport { MobileRuntimeModule } from '@wm/mobile/runtime';\nimport { SecurityModule } from '@wm/security';\nimport { HttpServiceModule } from '@wm/http';\nimport { VariablesModule } from '@wm/variables';\nimport { OAuthModule } from '@wm/oAuth';\n\nimport { AccessrolesDirective } from './directives/accessroles.directive';\nimport { PartialContainerDirective } from './directives/partial-container.directive';\nimport { AppSpinnerComponent } from './components/app-spinner.component';\nimport { CustomToasterComponent } from './components/custom-toaster.component';\nimport { EmptyPageComponent } from './components/empty-component/empty-page.component';\nimport { PrefabDirective } from './directives/prefab.directive';\nimport { AppRef } from './services/app.service';\nimport { ToasterServiceImpl } from './services/toaster.service';\nimport { I18nServiceImpl } from './services/i18n.service';\nimport { SpinnerServiceImpl } from './services/spinner.service';\nimport { NavigationServiceImpl } from './services/navigation.service';\nimport { AppDefaultsService } from './services/app-defaults.service';\nimport { AppManagerService } from './services/app.manager.service';\nimport { PrefabManagerService } from './services/prefab-manager.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { PageNotFoundGaurd } from './guards/page-not-found.gaurd';\nimport { AppJSResolve } from './resolves/app-js.resolve';\nimport { I18nResolve } from './resolves/i18n.resolve';\nimport { AppComponent } from './components/app-component/app.component';\nimport { HttpCallInterceptor } from './services/http-interceptor.services';\nimport { PrefabPreviewComponent } from './components/prefab-preview.component';\nimport { DynamicComponentRefProviderService } from './services/dynamic-component-ref-provider.service';\nimport {CanDeactivatePageGuard} from './guards/can-deactivate-page.guard';\n\nexport function InitializeApp(I18nService) {\n    return () => {\n        _WM_APP_PROJECT.id = location.href.split('/')[3];\n        _WM_APP_PROJECT.cdnUrl = document.querySelector('[name=\"cdnUrl\"]') && document.querySelector('[name=\"cdnUrl\"]').getAttribute('content');\n        _WM_APP_PROJECT.ngDest = 'ng-bundle/';\n        return I18nService.loadDefaultLocale();\n    };\n}\n\nexport function setAngularLocale(I18nService) {\n    return I18nService.isAngularLocaleLoaded() ? I18nService.getSelectedLocale() : I18nService.getDefaultSupportedLocale();\n}\n\nconst definitions = [\n    AccessrolesDirective,\n    PartialContainerDirective,\n    AppSpinnerComponent,\n    CustomToasterComponent,\n    PrefabDirective,\n    AppComponent,\n    PrefabPreviewComponent,\n    EmptyPageComponent\n];\n\nexport const carouselModule = CarouselModule.forRoot();\nexport const bsDropDownModule = BsDropdownModule.forRoot();\nexport const popoverModule = PopoverModule.forRoot();\nexport const tooltipModule = TooltipModule.forRoot();\n\n// setting parseExpr as exprEvaluator for swipeAnimation\n($.fn as any).swipeAnimation.expressionEvaluator = $parseExpr;\n\n@NgModule({\n    declarations: definitions,\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n\n        carouselModule,\n        bsDropDownModule,\n        popoverModule,\n        tooltipModule,\n\n        ModalModule,\n        WmComponentsModule,\n        MobileRuntimeModule,\n        CoreModule,\n        SecurityModule,\n        OAuthModule,\n        VariablesModule,\n        HttpServiceModule,\n    ],\n    exports: [\n        definitions,\n\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        ModalModule,\n        CarouselModule,\n        BsDropdownModule,\n        PopoverModule,\n        TooltipModule,\n\n        WmComponentsModule,\n        MobileRuntimeModule,\n        CoreModule,\n        SecurityModule,\n        OAuthModule,\n        VariablesModule,\n        HttpServiceModule\n    ],\n    entryComponents: [CustomToasterComponent]\n})\nexport class RuntimeBaseModule {\n\n    // this polyfill is to add support for CustomEvent in IE11\n    static addCustomEventPolyfill() {\n            if ( typeof window['CustomEvent'] === 'function' ) {\n                return false;\n            }\n\n            const CustomEvent = (event, params) => {\n                params = params || { bubbles: false, cancelable: false, detail: null };\n                const evt = document.createEvent( 'CustomEvent' );\n                evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n                return evt;\n            };\n\n            CustomEvent.prototype = window['Event'].prototype;\n\n            window['CustomEvent'] = CustomEvent;\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: RuntimeBaseModule,\n            providers: [\n                {provide: App, useClass: AppRef},\n                {provide: AbstractToasterService, useClass: ToasterServiceImpl},\n                {provide: AbstractI18nService, useClass: I18nServiceImpl},\n                {provide: AbstractSpinnerService, useClass: SpinnerServiceImpl},\n                {provide: AbstractNavigationService, useClass: NavigationServiceImpl},\n                {provide: AppDefaults, useClass: AppDefaultsService},\n                {provide: DynamicComponentRefProvider, useClass: DynamicComponentRefProviderService},\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: InitializeApp,\n                    deps: [AbstractI18nService],\n                    multi: true\n                },\n                {\n                    provide: LOCALE_ID,\n                    useFactory: setAngularLocale,\n                    deps: [AbstractI18nService]\n                },\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: HttpCallInterceptor,\n                    multi: true\n                },\n                DecimalPipe,\n                DatePipe,\n                AppManagerService,\n                PrefabManagerService,\n                AuthGuard,\n                RoleGuard,\n                PageNotFoundGaurd,\n                CanDeactivatePageGuard,\n                AppJSResolve,\n                I18nResolve\n            ]\n        };\n    }\n\n    constructor() {\n        RuntimeBaseModule.addCustomEventPolyfill();\n    }\n}\n\nexport const WM_MODULES_FOR_ROOT = [\n    WmComponentsModule.forRoot(),\n    MobileRuntimeModule.forRoot(),\n    ModalModule.forRoot(),\n    CoreModule.forRoot(),\n    SecurityModule.forRoot(),\n    OAuthModule.forRoot(),\n    VariablesModule.forRoot(),\n    HttpServiceModule.forRoot(),\n    RuntimeBaseModule.forRoot()\n];\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { AppManagerService } from '../services/app.manager.service';\nimport { AppVariablesProvider } from '../types/types';\n\nlet appVariablesLoaded = false;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppVariablesResolve implements Resolve<any> {\n\n    constructor(\n        private appManager: AppManagerService,\n        private appVariablesProvider: AppVariablesProvider\n    ) {}\n\n    resolve() {\n        // execute app.js\n        if (appVariablesLoaded) {\n            return true;\n        }\n\n        return this.appVariablesProvider.getAppVariables()\n            .then((variables) => this.appManager.loadAppVariables(variables))\n            .then(() => appVariablesLoaded = true);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { AppManagerService } from '../services/app.manager.service';\n\nlet metadataResolved = false;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MetadataResolve implements Resolve<any> {\n    constructor(private appManager: AppManagerService) {}\n\n    resolve() {\n        return metadataResolved || this.appManager.loadMetadata().then(() => metadataResolved = true);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { getWmProjectProperties } from '@wm/core';\n\nimport { AppManagerService } from '../services/app.manager.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SecurityConfigResolve implements Resolve<any> {\n    loaded: boolean;\n\n    constructor(private appManager: AppManagerService) {\n\n        // if the project type is PREFAB, setting this flag will not trigger security/info call\n        this.loaded = this.appManager.isPrefabType() || this.appManager.isTemplateBundleType() || !getWmProjectProperties().securityEnabled;\n    }\n\n    resolve() {\n        return this.loaded || this.appManager.loadSecurityConfig().then(() => {\n            this.loaded = true;\n        });\n    }\n}\n"]}