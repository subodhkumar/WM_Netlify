{"version":3,"file":"index.js.map","sources":["ng://@wm/runtime/base/types/types.ts","ng://@wm/runtime/base/services/app.manager.service.ts","ng://@wm/runtime/base/util/utils.ts","ng://@wm/runtime/base/services/prefab-manager.service.ts","ng://@wm/runtime/base/util/fragment-monitor.ts","ng://@wm/runtime/base/components/base-partial.component.ts","ng://@wm/runtime/base/components/base-page.component.ts","ng://@wm/runtime/base/components/base-prefab.component.ts","ng://@wm/runtime/base/directives/accessroles.directive.ts","ng://@wm/runtime/base/directives/partial-container.directive.ts","ng://@wm/runtime/base/components/app-spinner.component.ts","ng://@wm/runtime/base/components/custom-toaster.component.ts","ng://@wm/runtime/base/components/empty-component/empty-page.component.ts","ng://@wm/runtime/base/directives/prefab.directive.ts","ng://@wm/runtime/base/services/app.service.ts","ng://@wm/runtime/base/services/toaster.service.ts","ng://@wm/runtime/base/services/i18n.service.ts","ng://@wm/runtime/base/services/spinner.service.ts","ng://@wm/runtime/base/services/navigation.service.ts","ng://@wm/runtime/base/services/app-defaults.service.ts","ng://@wm/runtime/base/guards/auth.guard.ts","ng://@wm/runtime/base/guards/role.guard.ts","ng://@wm/runtime/base/guards/page-not-found.gaurd.ts","ng://@wm/runtime/base/resolves/app-js.resolve.ts","ng://@wm/runtime/base/resolves/i18n.resolve.ts","ng://@wm/runtime/base/services/pipe-provider.service.ts","ng://@wm/runtime/base/components/app-component/app.component.ts","ng://@wm/runtime/base/services/http-interceptor.services.ts","ng://@wm/runtime/base/components/prefab-preview.component.ts","ng://@wm/runtime/base/services/dynamic-component-ref-provider.service.ts","ng://@wm/runtime/base/guards/can-deactivate-page.guard.ts","ng://@wm/runtime/base/runtime-base.module.ts","ng://@wm/runtime/base/resolves/app-variables.resolve.ts","ng://@wm/runtime/base/resolves/metadata.resolve.ts","ng://@wm/runtime/base/resolves/security-config.resolve.ts","ng://@wm/runtime/base/index.ts"],"sourcesContent":["export enum ComponentType {\n    PAGE,\n    PREFAB,\n    PARTIAL\n}\n\nexport abstract class ComponentRefProvider {\n    abstract async getComponentFactoryRef(componentName: string, componentType: ComponentType): Promise<any>;\n    clearComponentFactoryRefCache():void {};\n}\n\nexport abstract class PrefabConfigProvider {\n    abstract async getConfig(prefabName: string): Promise<any>;\n}\n\nexport abstract class AppJSProvider {\n    abstract async getAppScriptFn(): Promise<Function>;\n}\n\nexport abstract class AppVariablesProvider {\n    abstract async getAppVariables(): Promise<any>;\n}\n\nexport abstract class PartialRefProvider {\n    abstract async getComponentFactoryRef(partialName:string,componentType: ComponentType): Promise<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\nimport {\n    AbstractDialogService,\n    AbstractHttpService,\n    AbstractI18nService,\n    AbstractSpinnerService,\n    App,\n    fetchContent,\n    isDefined,\n    triggerFn,\n    $appDigest\n} from '@wm/core';\nimport { SecurityService } from '@wm/security';\nimport { CONSTANTS, $rootScope, routerService,  MetadataService, VariablesService } from '@wm/variables';\n\ndeclare const _;\n\nenum POST_MESSAGES {\n    HIDE_TEMPLATES_SHOW_CASE = 'hide-templates-show-case',\n    SHOW_TEMPLATES_SHOW_CASE = 'show-templates-show-case',\n    UPDATE_LOCATION          = 'update-location-path',\n    SELECT_TEMPLATE          = 'select-template',\n    TEMPLATEBUNDLE_CONFIG    = 'template-bundle-config',\n    ON_LOAD                  = 'on-load'\n}\n\n@Injectable()\nexport class AppManagerService {\n\n    private appVariablesLoaded = false;\n    private appVariablesFired = false;\n    private _noRedirect = false;\n    private templates: Array<any>;\n\n    constructor(\n        private $http: AbstractHttpService,\n        private $security: SecurityService,\n        private $dialog: AbstractDialogService,\n        private $router: Router,\n        private $app: App,\n        private $variables: VariablesService,\n        private $metadata: MetadataService,\n        private $spinner: AbstractSpinnerService,\n        private $i18n: AbstractI18nService,\n        private $datePipe: DatePipe\n    ) {\n        // register method to invoke on session timeout\n        this.$http.registerOnSessionTimeout(this.handle401.bind(this));\n\n        this.$variables.registerDependency('appManager', this);\n\n        this.$app.subscribe('toggle-variable-state', (data) => {\n            const variable = data.variable,\n                active = data.active;\n            if (!_.isEmpty(_.trim(variable.spinnerContext))) {\n                if (active) {\n                    variable._spinnerId = variable._spinnerId || [];\n                    const spinnerId = this.$spinner.show(variable.spinnerMessage,\n                        variable._id + '_' + Date.now(),\n                        variable.spinnerclass,\n                        variable.spinnerContext);\n                    variable._spinnerId.push(spinnerId);\n                } else {\n                    this.$spinner.hide(variable._spinnerId.shift());\n                }\n            }\n        });\n        this.$app.subscribe('userLoggedIn', () => this.setLandingPage());\n        this.$app.subscribe('userLoggedOut', () => this.setLandingPage().then(() => {\n            // navigate to the landing page without reloading the window in device.\n            if (window['cordova']) {\n                this.$router.navigate([`/`]);\n            }\n        }));\n        this.$app.subscribe('http401', (d = {}) => this.handle401(d.page, d.options));\n    }\n\n    /**\n     * On session timeout, if the session timeout config is set to a dialog, then open login dialog\n     */\n    private showLoginDialog() {\n        this.$spinner.hide('globalSpinner');\n        // Removing the close all dialogs call, so the existing dialogs remain open and\n        // the login dialog comes on top of it.\n        this.$dialog.open('CommonLoginDialog');\n        // Since the login dialog is closed and opened its updated property isn't read by angular.\n        // Hence we trigger the digest cycle\n        $appDigest();\n    }\n\n    loadAppJS() {\n\n    }\n\n    loadCommonPage() {\n\n    }\n\n    loadSecurityConfig() {\n        return this.$security.load().then((r) => {\n            if (!this.$app.landingPageName) {\n                this.setLandingPage();\n            }\n            return r;\n        });\n    }\n\n    loadMetadata() {\n        return this.$metadata.load();\n    }\n\n    loadAppVariables(variables?: any) {\n        if (this.appVariablesLoaded) {\n            return Promise.resolve();\n        }\n\n        const init = response => {\n            const data = this.$variables.register('app', response, this.$app);\n            // not assigning directly to this.$app to keep the reference in tact\n            _.extend(this.$app.Variables, data.Variables);\n            _.extend(this.$app.Actions, data.Actions);\n            this.updateLoggedInUserVariable();\n            this.updateSupportedLocaleVariable();\n            this.appVariablesLoaded = true;\n            this.appVariablesFired = false;\n        };\n\n        if (isDefined(variables)) {\n            init(variables);\n            return Promise.resolve();\n        }\n\n        return this.$http.get('./app.variables.json').then(response => init(response));\n    }\n\n    /**\n     * getter and setter for the property appVariablesFired\n     * this flag determines if the app variables(with startUpdate:true) have been fired\n     * they should get fired only once through app lifecycle\n     * @param {boolean} isFired\n     * @returns {boolean}\n     */\n    isAppVariablesFired(isFired?: boolean) {\n        if (isDefined(isFired)) {\n            this.appVariablesFired = isFired;\n        }\n        return this.appVariablesFired;\n    }\n\n    private clearLoggedInUserVariable(variable) {\n        variable.isAuthenticated = false;\n        variable.roles           = [];\n        variable.name            = undefined;\n        variable.id              = undefined;\n        variable.tenantId        = undefined;\n    }\n\n    private updateLoggedInUserVariable() {\n        const loggedInUser = _.get(this.$app, 'Variables.loggedInUser.dataSet');\n\n        // sanity check\n        if (!loggedInUser) {\n            return;\n        }\n        this.$security.load().then(()=>{\n            const securityConfig = this.$security.get();\n            if (securityConfig && securityConfig.securityEnabled && securityConfig.authenticated) {\n                loggedInUser.isAuthenticated = securityConfig.authenticated;\n                loggedInUser.roles           = securityConfig.userInfo.userRoles;\n                loggedInUser.name            = securityConfig.userInfo.userName;\n                loggedInUser.id              = securityConfig.userInfo.userId;\n                loggedInUser.tenantId        = securityConfig.userInfo.tenantId;\n            } else {\n                this.clearLoggedInUserVariable(loggedInUser);\n                loggedInUser.isSecurityEnabled = securityConfig && securityConfig.securityEnabled;\n                throw null;\n            }\n        }).catch(err => {\n            loggedInUser.isAuthenticated = false;\n            loggedInUser.roles           = [];\n            loggedInUser.name            = undefined;\n            loggedInUser.id              = undefined;\n            loggedInUser.tenantId        = undefined;\n        });\n    }\n\n    /**\n     * Overriding the app variable supported locale with the wmProperties i18n DataValues\n     *\n     * TODO[Vibhu]:\n     * Can write a simple migration to sync the supportedLocale variable with '_WM_APP_PROPERTIES.supportedLanguages'\n     * Hence, this may not be required\n     *\n     */\n    updateSupportedLocaleVariable() {\n        const supportedLocaleVar = _.get(this.$app, 'Variables.supportedLocale');\n    }\n\n    handleSSOLogin(config) {\n        const SSO_URL = 'services/security/ssologin',\n            PREVIEW_WINDOW_NAME = 'WM_PREVIEW_WINDOW';\n        let page,\n            pageParams;\n\n        // do not provide redirectTo page if fetching HOME page resulted 401\n        // on app load, by default Home page is loaded\n        page = this.$security.getRedirectPage(config);\n\n        if (CONSTANTS.hasCordova) {\n            // get previously loggedInUser name (if any)\n            const lastLoggedInUsername = _.get(this.$security.get(), 'userInfo.userName');\n            this.$security.authInBrowser()\n                .then(() => this.reloadAppData())\n                .then(() => {\n                    const presentLoggedInUsername = _.get(this.$security.get(), 'userInfo.userName');\n                    if (presentLoggedInUsername && presentLoggedInUsername === lastLoggedInUsername) {\n                        routerService.navigate([page]);\n                    } else {\n                        routerService.navigate([`/`]);\n                    }\n                });\n        } else {\n            page = page ? '?redirectPage=' + encodeURIComponent(page) : '';\n            pageParams = this.$security.getQueryString(this.$security.getRedirectedRouteQueryParams());\n            pageParams = pageParams ? '?' + pageParams : '';\n            // showing a redirecting message\n            document.body.textContent = _.get(this.getAppLocale(), ['MESSAGE_LOGIN_REDIRECTION']) || 'Redirecting to sso login...';\n            // appending redirect to page and page params\n            const ssoUrl = this.getDeployedURL() + SSO_URL + page + pageParams;\n            /*\n             * remove iFrame when redirected to IdP login page.\n             * this is being done as IDPs do not allow to get themselves loaded into iFrames.\n             * remove-toolbar has been assigned with a window name WM_PREVIEW_WINDOW, check if the iframe is our toolbar related and\n             * safely change the location of the parent toolbar with current url.\n             */\n            if (window.self !== window.top && window.parent.name === PREVIEW_WINDOW_NAME) {\n                window.parent.location.href = window.self.location.href;\n                window.parent.name = '';\n            } else {\n                window.location.href = ssoUrl;\n            }\n        }\n    }\n\n    /**\n     * Handles the app when a XHR request returns 401 response\n     * If no user was logged in before 401 occurred, First time Login is simulated\n     * Else, a session timeout has occurred and the same is simulated\n     * @param page  if provided, represents the page name for which XHR request returned 401, on re-login\n     *              if not provided, a service request returned 401\n     * @param onSuccess success handler\n     * @param onError error handler\n     */\n    handle401(page?, options?) {\n        let sessionTimeoutConfig,\n            sessionTimeoutMethod,\n            loginConfig,\n            loginMethod;\n        const LOGIN_METHOD = {\n                'DIALOG' : 'DIALOG',\n                'PAGE'   : 'PAGE',\n                'SSO'    : 'SSO'\n            };\n\n        const config = this.$security.get();\n        let queryParamsObj = {};\n        loginConfig = config.loginConfig;\n        // if user found, 401 was thrown after session time\n        if (config.userInfo && config.userInfo.userName) {\n            config.authenticated = false;\n            sessionTimeoutConfig = loginConfig.sessionTimeout || {'type': LOGIN_METHOD.DIALOG};\n            sessionTimeoutMethod = sessionTimeoutConfig.type.toUpperCase();\n            switch (sessionTimeoutMethod) {\n                case LOGIN_METHOD.DIALOG:\n                    this.showLoginDialog();\n                    break;\n                case LOGIN_METHOD.PAGE:\n                    if (!page) {\n                        page = this.$security.getCurrentRoutePage();\n                    }\n                    queryParamsObj['redirectTo'] = page;\n                    // Adding query params(page params of page being redirected to) to the URL.\n                    queryParamsObj = _.merge(queryParamsObj, this.$security.getRedirectedRouteQueryParams());\n                    // the redirect page should not be same as session timeout login page\n                    if ( page !== sessionTimeoutConfig.pageName) {\n                        this.$router.navigate([sessionTimeoutConfig.pageName], {queryParams: queryParamsObj});\n                    }\n                    break;\n                case LOGIN_METHOD.SSO:\n                    this.handleSSOLogin(config);\n                    break;\n            }\n            this.setLandingPage();\n        } else {\n            // if no user found, 401 was thrown for first time login\n            loginMethod = loginConfig.type.toUpperCase();\n            switch (loginMethod) {\n                case LOGIN_METHOD.DIALOG:\n                    // Through loginDialog, user will remain in the current state and failed calls will be executed post login through LoginVariableService.\n                    // NOTE: user will be redirected to respective landing page only if dialog is opened manually(not through a failed 401 call).\n                    this.noRedirect(true);\n                    this.showLoginDialog();\n                    break;\n                case LOGIN_METHOD.PAGE:\n                    // do not provide redirectTo page if fetching HOME page resulted 401\n                    // on app load, by default Home page is loaded\n                    page = this.$security.getRedirectPage(config);\n                    queryParamsObj['redirectTo'] = page;\n                    queryParamsObj = _.merge(queryParamsObj, this.$security.getRedirectedRouteQueryParams());\n                    this.$router.navigate([loginConfig.pageName], {queryParams: queryParamsObj});\n                    this.$app.landingPageName = loginConfig.pageName;\n                    break;\n                case LOGIN_METHOD.SSO:\n                    this.handleSSOLogin(config);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Updates data dependent on logged in user\n     * Reloads security config, metadata\n     * Updates the loggedInUserVariable\n     * @returns {Promise<void>}\n     */\n    reloadAppData() {\n        return this.loadSecurityConfig().then(() => {\n            return this.loadMetadata().then(() => {\n                this.updateLoggedInUserVariable();\n            });\n        });\n    }\n\n    noRedirect(value?: boolean) {\n        if (_.isUndefined(value)) {\n            return this._noRedirect;\n        }\n\n        this._noRedirect = value;\n        return this._noRedirect;\n    }\n\n    /**\n     * invokes session failure requests\n     */\n    executeSessionFailureRequests() {\n        this.$http.executeSessionFailureRequests();\n    }\n\n    pushToSessionFailureRequests(callback) {\n        this.$http.pushToSessionFailureQueue(callback);\n    }\n\n    public getDeployedURL() {\n        return this.$app.deployedUrl ? this.$app.deployedUrl : $rootScope.project.deployedUrl;\n    }\n\n    notify(eventName, data) {\n        this.$app.notify(eventName, data);\n    }\n\n    subscribe(eventName, data) {\n        return this.$app.subscribe(eventName, data);\n    }\n\n    getActivePage() {\n        return this.$app.activePage;\n    }\n\n    getAppLocale() {\n        return this.$app.appLocale;\n    }\n\n    getSelectedLocale() {\n        return this.$i18n.getSelectedLocale();\n    }\n\n    notifyApp(template, type, title?) {\n        this.$app.notifyApp(template, type, title);\n    }\n\n    /**\n     * Triggers the onBeforeService method defined in app.js of the app\n     * @param requestParams\n     */\n    appOnBeforeServiceCall(requestParams: any) {\n        return triggerFn(this.$app.onBeforeServiceCall, requestParams);\n    }\n\n    /**\n     * Triggers the onServiceSuccess method defined in app.js of the app\n     * @param data\n     * @param xhrObj\n     */\n    appOnServiceSuccess(data: any, xhrObj: any) {\n        return triggerFn(this.$app.onServiceSuccess, data, xhrObj);\n    }\n\n    /**\n     * Triggers the onServiceError method defined in app.js of the app\n     * @param data\n     * @param xhrOb\n     */\n    appOnServiceError(data: any, xhrOb?: any) {\n        return triggerFn(this.$app.onServiceError, data, xhrOb);\n    }\n\n    /**\n     * Triggers the appVariablesReady method defined in app.js of the app\n     */\n    appVariablesReady() {\n        triggerFn(this.$app.onAppVariablesReady);\n    }\n\n    /**\n     * Returns the pipe based on the input\n     */\n    getPipe(pipe) {\n        if (pipe === 'date') {\n            return this.$datePipe;\n        }\n    }\n\n    private setLandingPage() {\n        return this.$security.getPageByLoggedInUser().then(p => this.$app.landingPageName = <string> p);\n    }\n\n    /**\n     * return true if prefab type app\n     * @returns {boolean}\n     */\n    isPrefabType() {\n        return this.$app.isPrefabType;\n    }\n\n    /**\n     * return true if template bundle type app\n     * @returns {boolean}\n     */\n    isTemplateBundleType() {\n        return this.$app.isTemplateBundleType;\n    }\n\n    postMessage(content) {\n        window.top.postMessage(content, '*');\n    }\n\n    showTemplate(idx) {\n        const template = this.templates[idx];\n        // scope.activeTemplateIndex = idx;\n        this.$router.navigate([template.id]);\n    }\n    postTemplateBundleInfo() {\n\n        window.onmessage = (evt) => {\n            const msgData = evt.data;\n\n            if (!_.isObject(msgData)) {\n                return;\n            }\n\n            const key = msgData.key;\n\n            switch (key) {\n                case POST_MESSAGES.HIDE_TEMPLATES_SHOW_CASE:\n                    // scope.hideShowCase = true;\n                    break;\n                case POST_MESSAGES.SELECT_TEMPLATE:\n                    this.showTemplate(msgData.templateIndex);\n                    break;\n            }\n        };\n\n        setTimeout(() => {\n            this.postMessage({key: POST_MESSAGES.ON_LOAD});\n        });\n\n        return fetchContent('json', './config.json', true, response => {\n            this.templates = [];\n            if (!response.error) {\n                this.templates = response.templates;\n                this.postMessage({'key': POST_MESSAGES.TEMPLATEBUNDLE_CONFIG, 'config': response});\n            }\n        });\n    }\n\n    postAppTypeInfo() {\n        if (this.isTemplateBundleType()) {\n            return this.postTemplateBundleInfo();\n        }\n    }\n}\n","export const isPrefabInPreview = (prefabName: string) => prefabName === '__self__';\n\nexport const getPrefabBaseUrl = (prefabName: string) => isPrefabInPreview(prefabName) ? '.' : `app/prefabs/${prefabName}`;\n\nexport const getPrefabConfigUrl = (prefabName: string) => `${getPrefabBaseUrl(prefabName)}/config.json`;\n\nexport const getPrefabMinJsonUrl = (prefabName: string) => `${getPrefabBaseUrl(prefabName)}/pages/Main/page.min.json`;\n","import { Injectable } from '@angular/core';\n\nimport { loadScripts, loadStyleSheets, stringStartsWith } from '@wm/core';\nimport { MetadataService } from '@wm/variables';\n\nimport { PrefabConfigProvider } from '../types/types';\nimport { getPrefabBaseUrl, isPrefabInPreview } from '../util/utils';\n\ndeclare const _;\n\nconst prefabsWithError = new Set<string>();\nconst inProgress = new Map<string, Promise<any>>();\nconst resolvedPrefabs = new Set<string>();\n\nconst getPrefabResourceUrl = (resourcePath, resourceBasePath) => {\n    let _url = resourcePath;\n    if (!stringStartsWith(resourcePath, 'http://|https://|//')) {\n        _url = (resourceBasePath + _url).replace('//', '/');\n    }\n    return _url;\n};\n\n@Injectable()\nexport class PrefabManagerService {\n\n    constructor(\n        private $metadata: MetadataService,\n        private prefabConfigProvider: PrefabConfigProvider\n    ) {}\n\n    public getConfig(prefabName): Promise<any> {\n        return this.prefabConfigProvider.getConfig(prefabName);\n    }\n\n    public loadServiceDefs(prefabName): Promise<any> {\n        return isPrefabInPreview(prefabName) ? Promise.resolve() : this.$metadata.load(prefabName);\n    }\n\n    protected loadStyles(prefabName, {resources: {styles}} = {resources: {styles: []}}): Promise<void> {\n        const baseUrl = getPrefabBaseUrl(prefabName);\n        const _styles = styles.map(url => {\n            if (!_.endsWith(url, '/pages/Main/Main.css')) {\n                return getPrefabResourceUrl(url, baseUrl);\n            }\n            return undefined;\n        }).filter(url => !!url);\n\n        loadStyleSheets(_styles);\n\n        return Promise.resolve();\n    }\n\n    // TODO [Vinay] - implement onPrefabResourceLoad\n    protected loadScripts(prefabName, {resources: {scripts}} = {resources: {scripts: []}}): Promise<any> {\n        const baseUrl = getPrefabBaseUrl(prefabName);\n        const _scripts = scripts.map(url => getPrefabResourceUrl(url, baseUrl));\n\n        return loadScripts(_scripts);\n    }\n\n    private setInProgress(prefabName: string) {\n        let _res;\n        let _rej;\n        const _promise: any = new Promise((res, rej) => {\n            _res = res;\n            _rej = rej;\n        });\n\n        _promise.resolve = _res;\n        _promise.reject = _rej;\n\n        inProgress.set(prefabName, _promise);\n    }\n\n    private resolveInProgress(prefabName: string) {\n        if (inProgress.get(prefabName)) {\n            (inProgress.get(prefabName) as any).resolve();\n            inProgress.delete(prefabName);\n        }\n    }\n\n    public loadDependencies(prefabName): Promise<void> {\n\n        if (resolvedPrefabs.has(prefabName)) {\n            return Promise.resolve();\n        }\n\n        if (prefabsWithError.has(prefabName)) {\n            return Promise.reject('');\n        }\n\n        if (inProgress.get(prefabName)) {\n            return inProgress.get(prefabName);\n        }\n\n        this.setInProgress(prefabName);\n\n        return this.getConfig(prefabName)\n            .then(config => {\n                return Promise.all([\n                    this.loadStyles(prefabName, config),\n                    this.loadScripts(prefabName, config),\n                    this.loadServiceDefs(prefabName)\n                ]).then(() => {\n                    this.resolveInProgress(prefabName);\n                    resolvedPrefabs.add(prefabName);\n                });\n            });\n    }\n}\n","import { noop } from '@wm/core';\n\nimport { Subject } from 'rxjs';\n\nexport abstract class FragmentMonitor {\n    fragments = 0;\n    viewInit$: Subject<any>;\n    isViewInitialized: boolean;\n\n    fragmentsLoaded$ = new Subject();\n\n    constructor() {}\n\n    init() {\n        // console.log(`inside fragmentMonitor: Page-${(this as any).pageName}, Partial-${(this as any).partialName}`);\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            this.isViewInitialized = true;\n            this.isReady();\n        });\n    }\n\n    registerFragment() {\n        this.fragments++;\n    }\n\n    resolveFragment() {\n        this.fragments--;\n        this.isReady();\n    }\n\n    isReady() {\n        if (this.isViewInitialized && !this.fragments) {\n            this.registerFragment = noop;\n            this.resolveFragment = noop;\n            this.fragmentsLoaded$.complete();\n        }\n    }\n}\n","import { AfterViewInit, Injector, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\nimport { AbstractI18nService, AbstractNavigationService, App, noop, UtilsService } from '@wm/core';\nimport { WidgetRef } from '@wm/components';\nimport { VariablesService } from '@wm/variables';\n\nimport { FragmentMonitor } from '../util/fragment-monitor';\nimport { AppManagerService } from '../services/app.manager.service';\nimport { $invokeWatchers } from '@wm/core';\n\nexport const commonPartialWidgets = {};\n\nexport abstract class BasePartialComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {\n    Widgets: any;\n    Variables: any;\n    Actions: any;\n    App: App;\n    injector: Injector;\n    partialName: string;\n    activePageName: string;\n    route: ActivatedRoute;\n    appManager: AppManagerService;\n    navigationService: AbstractNavigationService;\n    router: Router;\n    pageParams: any;\n    containerWidget: any;\n    i18nService: AbstractI18nService;\n    appLocale: any;\n\n    destroy$ = new Subject();\n    viewInit$ = new Subject();\n\n    abstract evalUserScript(prefabContext: any, appContext: any, utils: any);\n\n    abstract getVariables();\n\n    getContainerWidgetInjector() {\n        return this.containerWidget.inj || this.containerWidget.injector;\n    }\n\n    init() {\n\n        this.App = this.injector.get(App);\n        this.containerWidget = this.injector.get(WidgetRef);\n        this.i18nService = this.injector.get(AbstractI18nService);\n        if (this.getContainerWidgetInjector().view.component.registerFragment) {\n            this.getContainerWidgetInjector().view.component.registerFragment();\n        }\n\n        this.initUserScript();\n\n        this.registerWidgets();\n        this.initVariables();\n\n        this.activePageName = this.App.activePageName; // Todo: remove this\n        this.registerPageParams();\n\n        this.defineI18nProps();\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            this.pageParams = this.containerWidget.partialParams;\n        });\n\n        super.init();\n    }\n\n    registerWidgets() {\n        if (this.partialName === 'Common') {\n            this.Widgets = commonPartialWidgets;\n        } else {\n            this.Widgets = Object.create(commonPartialWidgets);\n        }\n\n        this.containerWidget.Widgets = this.Widgets;\n    }\n\n    registerDestroyListener(fn: Function) {\n        this.destroy$.subscribe(noop, noop, () => fn());\n    }\n\n    initUserScript() {\n        try {\n            this.evalUserScript(this, this.App, this.injector.get(UtilsService));\n        } catch (e) {\n            console.error(`Error in evaluating partial (${this.partialName}) script\\n`, e);\n        }\n    }\n\n    initVariables() {\n        const variablesService = this.injector.get(VariablesService);\n\n        // get variables and actions instances for the page\n        const variableCollection = variablesService.register(this.partialName, this.getVariables(), this);\n\n        // create namespace for Variables nad Actions on page/partial, which inherits the Variables and Actions from App instance\n        this.Variables = Object.create(this.App.Variables);\n        this.Actions = Object.create(this.App.Actions);\n\n        this.containerWidget.Variables = this.Variables;\n        this.containerWidget.Actions = this.Actions;\n\n        // assign all the page variables to the pageInstance\n        Object.entries(variableCollection.Variables).forEach(([name, variable]) => this.Variables[name] = variable);\n        Object.entries(variableCollection.Actions).forEach(([name, action]) => this.Actions[name] = action);\n\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            // TEMP: triggering watchers so variables watching over params are updated\n            $invokeWatchers(true, true);\n            variableCollection.callback(variableCollection.Variables).catch(noop);\n            variableCollection.callback(variableCollection.Actions);\n        });\n    }\n\n    registerPageParams() {\n        this.pageParams = this.containerWidget.partialParams;\n    }\n\n    defineI18nProps() {\n        this.appLocale = this.i18nService.getAppLocale();\n    }\n\n    invokeOnReady() {\n        this.onReady();\n        if (this.getContainerWidgetInjector().view.component.resolveFragment) {\n            this.getContainerWidgetInjector().view.component.resolveFragment();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.viewInit$.complete();\n\n            this.fragmentsLoaded$.subscribe(noop, noop, () => this.invokeOnReady());\n\n        }, 100);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.complete();\n    }\n\n    onReady() {\n    }\n}\n","import { AfterViewInit, Injector, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\nimport {\n    AbstractI18nService,\n    AbstractNavigationService,\n    addClass,\n    App,\n    isMobileApp,\n    muteWatchers,\n    noop,\n    removeClass,\n    unMuteWatchers,\n    UtilsService\n} from '@wm/core';\nimport { commonPartialWidgets } from './base-partial.component';\n\n\nimport { VariablesService } from '@wm/variables';\nimport { AppManagerService } from '../services/app.manager.service';\nimport { FragmentMonitor } from '../util/fragment-monitor';\n\ndeclare const $;\n\nexport abstract class BasePageComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {\n    Widgets: any;\n    Variables: any;\n    Actions: any;\n    App: App;\n    injector: Injector;\n    pageName: string;\n    activePageName: string;\n    route: ActivatedRoute;\n    appManager: AppManagerService;\n    navigationService: AbstractNavigationService;\n    router: Router;\n    pageParams: any;\n    showPageContent: boolean;\n    i18nService: AbstractI18nService;\n    appLocale: any;\n    startupVariablesLoaded = false;\n    pageTransitionCompleted = false;\n\n    destroy$ = new Subject();\n    viewInit$ = new Subject();\n\n    abstract evalUserScript(prefabContext: any, appContext: any, utils: any);\n    abstract getVariables();\n\n    init() {\n\n        muteWatchers();\n\n        this.App = this.injector.get(App);\n        this.route = this.injector.get(ActivatedRoute);\n        this.appManager = this.injector.get(AppManagerService);\n        this.navigationService = this.injector.get(AbstractNavigationService);\n        this.i18nService = this.injector.get(AbstractI18nService);\n        this.router = this.injector.get(Router);\n\n        this.initUserScript();\n\n        this.registerWidgets();\n        this.initVariables();\n\n        this.App.lastActivePageName = this.App.activePageName;\n        this.App.activePageName = this.pageName;\n        this.App.activePage = this;\n        this.activePageName = this.pageName; // Todo: remove this\n\n        this.registerPageParams();\n\n        this.defineI18nProps();\n\n        super.init();\n    }\n\n    registerWidgets() {\n        // common partial widgets should be accessible from page\n        this.Widgets = Object.create(commonPartialWidgets);\n\n        // expose current page widgets on app\n        (this.App as any).Widgets = Object.create(this.Widgets);\n    }\n\n    initUserScript() {\n        try {\n            this.evalUserScript(this, this.App, this.injector.get(UtilsService));\n        } catch (e) {\n            console.error(`Error in evaluating page (${this.pageName}) script\\n`, e);\n        }\n    }\n\n    registerPageParams() {\n        const subscription = this.route.queryParams.subscribe(params => this.pageParams = params);\n        this.registerDestroyListener(() => subscription.unsubscribe());\n    }\n\n    registerDestroyListener(fn: Function) {\n        this.destroy$.subscribe(noop, noop, () => fn());\n    }\n\n    defineI18nProps() {\n        this.appLocale = this.i18nService.getAppLocale();\n    }\n\n    initVariables() {\n        const variablesService = this.injector.get(VariablesService);\n\n        // get variables and actions instances for the page\n        const variableCollection = variablesService.register(this.pageName, this.getVariables(), this);\n\n        // create namespace for Variables nad Actions on page/partial, which inherits the Variables and Actions from App instance\n        this.Variables = Object.create(this.App.Variables);\n        this.Actions = Object.create(this.App.Actions);\n\n        // assign all the page variables to the pageInstance\n        Object.entries(variableCollection.Variables).forEach(([name, variable]) => this.Variables[name] = variable);\n        Object.entries(variableCollection.Actions).forEach(([name, action]) => this.Actions[name] = action);\n\n\n        const subscription = this.viewInit$.subscribe(noop, noop, () => {\n\n            if (!this.appManager.isAppVariablesFired()) {\n                variableCollection.callback(this.App.Variables).catch(noop).then(() => {\n                    this.appManager.notify('app-variables-data-loaded', {pageName: this.pageName});\n                });\n                variableCollection.callback(this.App.Actions);\n                this.appManager.appVariablesReady();\n                this.appManager.isAppVariablesFired(true);\n            }\n\n            variableCollection.callback(variableCollection.Variables)\n                .catch(noop)\n                .then(() => {\n                    this.appManager.notify('page-variables-data-loaded', {pageName: this.pageName});\n                    this.startupVariablesLoaded = true;\n                    // hide the loader only after the some setTimeout for smooth page load.\n                    setTimeout(() => {\n                        this.showPageContent = true;\n                    }, 100);\n                });\n            variableCollection.callback(variableCollection.Actions);\n\n            subscription.unsubscribe();\n        });\n    }\n\n    runPageTransition(transition: string): Promise<void> {\n        return new Promise(resolve => {\n            const $target = $('app-page-outlet:first');\n            if (transition) {\n                const onTransitionEnd = () => {\n                    if (resolve) {\n                        $target.off('animationend', onTransitionEnd);\n                        $target.removeClass(transition);\n                        $target.children().first().remove();\n                        resolve();\n                        resolve = null;\n                    }\n                };\n                transition = 'page-transition page-transition-' + transition;\n                $target.addClass(transition);\n                $target.on('animationend', onTransitionEnd);\n                // Wait for a maximum of 1 second for transition to end.\n                setTimeout(onTransitionEnd, 1000);\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    invokeOnReady() {\n        this.onReady();\n        (this.App.onPageReady || noop)(this.pageName, this);\n        this.appManager.notify('pageReady', {'name' : this.pageName, instance: this});\n    }\n\n    ngAfterViewInit(): void {\n        const transition = this.navigationService.getPageTransition();\n        if (transition) {\n            const pageOutlet = $('app-page-outlet:first');\n            pageOutlet.prepend(pageOutlet.children().first().clone());\n        }\n        this.runPageTransition(transition).then(() => {\n            this.pageTransitionCompleted = true;\n            (this as any).compilePageContent = true;\n        });\n        setTimeout(() => {\n            unMuteWatchers();\n            this.viewInit$.complete();\n            if (isMobileApp()) {\n                this.onPageContentReady = () => {\n                    this.fragmentsLoaded$.subscribe(noop, noop, () => {\n                        this.invokeOnReady();\n                    });\n                    this.onPageContentReady = noop;\n                };\n            } else {\n                this.fragmentsLoaded$.subscribe(noop, noop, () => this.invokeOnReady());\n            }\n        }, 300);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.complete();\n    }\n\n    onReady() {}\n\n    onBeforePageLeave() {}\n\n    onPageContentReady() {}\n}\n","import { AfterViewInit, Injector, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { $watch, AbstractI18nService, App, isIE, noop, UtilsService, $invokeWatchers } from '@wm/core';\nimport { WidgetRef } from '@wm/components';\nimport { VariablesService } from '@wm/variables';\n\nimport { PrefabManagerService } from '../services/prefab-manager.service';\nimport {FragmentMonitor} from \"../util/fragment-monitor\";\n\ndeclare const _;\n\nexport abstract class BasePrefabComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {\n    Widgets: any;\n    Variables: any;\n    Actions: any;\n    App: App;\n    injector: Injector;\n    containerWidget: any;\n    prefabMngr: PrefabManagerService;\n    displayName: string;\n    prefabName: string;\n    i18nService: AbstractI18nService;\n    appLocale: any;\n\n    destroy$ = new Subject();\n    viewInit$ = new Subject();\n\n    abstract evalUserScript(prefabContext: any, appContext: any, utils: any);\n    abstract getVariables();\n\n    getContainerWidgetInjector() {\n        return this.containerWidget.inj || this.containerWidget.injector;\n    }\n\n    init() {\n        this.App = this.injector.get(App);\n\n        this.containerWidget = this.injector.get(WidgetRef);\n        this.prefabMngr = this.injector.get(PrefabManagerService);\n        this.i18nService = this.injector.get(AbstractI18nService);\n        if (this.getContainerWidgetInjector().view.component.registerFragment) {\n            this.getContainerWidgetInjector().view.component.registerFragment()\n        }\n\n        this.initUserScript();\n\n        this.registerWidgets();\n        this.initVariables();\n        this.registerProps();\n        this.defineI18nProps();\n        super.init();\n    }\n\n    registerWidgets() {\n        this.Widgets = {};\n    }\n\n    initUserScript() {\n        try {\n            this.evalUserScript(this, this.App, this.injector.get(UtilsService));\n        } catch (e) {\n            console.error(`Error in evaluating prefab (${this.prefabName}) script\\n`, e);\n        }\n    }\n\n    registerChangeListeners() {\n        this.containerWidget.registerPropertyChangeListener(this.onPropertyChange);\n        this.containerWidget.registerStyleChangeListener(this.onPropertyChange);\n    }\n\n    registerDestroyListener(fn: Function) {\n        this.destroy$.subscribe(noop, noop, () => fn());\n    }\n\n    defineI18nProps() {\n        this.appLocale = this.i18nService.getPrefabLocaleBundle(this.prefabName);\n    }\n\n    registerProps() {\n        this.prefabMngr.getConfig(this.prefabName)\n            .then(config => {\n\n                if (config) {\n                    this.displayName = config.displayName;\n                    Object.entries((config.properties || {}))\n                        .forEach(([key, prop]: [string, any]) => {\n                            let expr;\n                            const value = _.trim(prop.value);\n\n                            if (_.startsWith(value, 'bind:')) {\n                                expr = value.replace('bind:', '');\n                            }\n\n                            Object.defineProperty(this, key, {\n                                get: () => this.containerWidget[key],\n                                set: nv => this.containerWidget.widget[key] = nv\n                            });\n\n                            if (expr) {\n                                this.registerDestroyListener(\n                                    $watch(expr, this, {}, nv => this.containerWidget.widget[key] = nv)\n                                );\n                            }\n                        });\n\n                    Object.entries((config.events || {}))\n                        .forEach(([key, prop]: [string, any]) => {\n                            this[key] = (...args) => {\n                                const eventName = key.substr(2).toLowerCase();\n                                this.containerWidget.invokeEventCallback(eventName, {$event: args[0], $data: args[1]});\n                            };\n                        });\n\n                    Object.entries((config.methods || {}))\n                        .forEach(([key, prop]: [string, any]) => {\n                            this.containerWidget[key] = (...args) => {\n                                try {\n                                    if (this[key]) {\n                                        return this[key].apply(this, args);\n                                    }\n                                } catch (e) {\n                                    console.warn(`error in executing prefab-${this.prefabName} method-${key}`);\n                                }\n                            };\n                        });\n                }\n                this.containerWidget.setProps(config);\n                // Reassigning the proxy handler for prefab inbound properties as we\n                // will get them only after the prefab config call.\n                if (isIE()) {\n                    this.containerWidget.widget = this.containerWidget.createProxy();\n                }\n            });\n    }\n\n    initVariables() {\n        const variablesService = this.injector.get(VariablesService);\n\n        // get variables and actions instances for the page\n        const variableCollection = variablesService.register(this.prefabName, this.getVariables(), this);\n\n        // create namespace for Variables nad Actions on page/partial, which inherits the Variables and Actions from App instance\n        this.Variables = {};\n        this.Actions = {};\n\n        // assign all the page variables to the pageInstance\n        Object.entries(variableCollection.Variables).forEach(([name, variable]) => this.Variables[name] = variable);\n        Object.entries(variableCollection.Actions).forEach(([name, action]) => this.Actions[name] = action);\n\n\n        this.viewInit$.subscribe(noop, noop, () => {\n            variableCollection.callback(variableCollection.Variables).catch(noop);\n            variableCollection.callback(variableCollection.Actions);\n        });\n    }\n\n    invokeOnReady() {\n        // triggering watchers so variables and propertiers watching over an expression are updated\n        $invokeWatchers(true, true);\n        this.onReady();\n        if (this.getContainerWidgetInjector().view.component.resolveFragment) {\n            this.getContainerWidgetInjector().view.component.resolveFragment();\n        }\n        this.containerWidget.invokeEventCallback('load');\n    }\n\n\n    ngAfterViewInit(): void {\n        this.viewInit$.complete();\n        this.registerChangeListeners();\n        setTimeout(() => {\n            this.fragmentsLoaded$.subscribe(noop, noop, () => this.invokeOnReady());\n        }, 100);\n    }\n\n    ngOnDestroy(): void {\n        this.containerWidget.invokeEventCallback('destroy');\n        this.destroy$.complete();\n    }\n\n    // user overrides this\n    onPropertyChange() {}\n\n    onReady() {}\n\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { SecurityService } from '@wm/security';\n\ndeclare const _;\n\nenum USER_ROLE {\n    EVERYONE = 'Everyone',\n    ANONYMOUS = 'Anonymous',\n    AUTHENTICATED = 'Authenticated'\n}\n\n@Directive({\n    selector: '[accessroles]'\n})\nexport class AccessrolesDirective {\n\n    private processed = false;\n    private readonly isUserAuthenticated;\n    private readonly userRoles;\n    private securityEnabled: boolean;\n\n    constructor(\n        private templateRef: TemplateRef<any>,\n        private viewContainerRef: ViewContainerRef,\n        private securityService: SecurityService\n    ) {\n        const securityConfig = this.securityService.get();\n        this.securityEnabled = _.get(securityConfig, 'securityEnabled');\n        this.isUserAuthenticated = _.get(securityConfig, 'authenticated');\n        this.userRoles = _.get(securityConfig, 'userInfo.userRoles');\n    }\n\n    /**\n     * Returns array of roles from comma separated string of roles\n     * Handles encoded commas\n     * @param val\n     * @returns {any}\n     */\n    private getWidgetRolesArrayFromStr(val) {\n        const UNICODE_COMMA_REGEX = /&#44;/g;\n\n        val = val || '';\n        if (val === '') {\n            return [];\n        }\n        // replace the unicode equivalent of comma with comma\n        return _.split(val, ',').map(function (v) {\n            return _.trim(v).replace(UNICODE_COMMA_REGEX, ',');\n        });\n    }\n\n    /**\n     * Returns true if roles in first arrays is\n     * @param widgetRoles\n     * @param userRoles\n     * @returns {any}\n     */\n    private matchRoles(widgetRoles, userRoles) {\n        return widgetRoles.some(function (item) {\n            return _.includes(userRoles, item);\n        });\n    }\n\n    /**\n     * Decides whether the current logged in user has access to widget or not\n     * @param widgetRoles\n     * @param userRoles\n     * @returns {any}\n     */\n    private hasAccessToWidget(widgetRoles, userRoles) {\n        // access the widget when 'Everyone' is chosen\n        if (_.includes(widgetRoles, USER_ROLE.EVERYONE)) {\n            return true;\n        }\n\n        // access the widget when 'Anonymous' is chosen and user is not authenticated\n        if (_.includes(widgetRoles, USER_ROLE.ANONYMOUS) && !this.isUserAuthenticated) {\n            return true;\n        }\n\n        // access the widget when 'Only Authenticated Users' is chosen and user is authenticated\n        if (_.includes(widgetRoles, USER_ROLE.AUTHENTICATED) && this.isUserAuthenticated) {\n            return true;\n        }\n\n        // access the widget when widget role and logged in user role matches\n        return this.isUserAuthenticated && this.matchRoles(widgetRoles, userRoles);\n    }\n\n    @Input() set accessroles(roles) {\n        // flag to compute the directive only once\n        if (this.processed) {\n            return;\n        }\n\n        this.processed = true;\n        const widgetRoles = this.getWidgetRolesArrayFromStr(roles);\n        const isAccessible = !this.securityEnabled || this.hasAccessToWidget(widgetRoles, this.userRoles);\n        if (isAccessible) {\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\n        } else {\n            this.viewContainerRef.clear();\n        }\n    }\n}\n","import { Attribute, ComponentFactoryResolver, Directive, ElementRef, Inject, Injector, Self, ViewContainerRef } from '@angular/core';\n\nimport { debounceTime, filter } from 'rxjs/operators';\n\nimport { App, $invokeWatchers, noop } from '@wm/core';\n\nimport { WidgetRef } from '@wm/components';\n\nimport { ComponentRefProvider, ComponentType, PartialRefProvider } from '../types/types';\n\ndeclare const _;\n\n@Directive({\n    selector: '[partialContainer]'\n})\nexport class PartialContainerDirective {\n\n    private contentInitialized = false;\n    private $target;\n\n    get name() {\n        return this.componentInstance.name;\n    }\n\n    async _renderPartial(nv) {\n        // destroy the existing partial\n        this.vcRef.clear();\n        // when the container-target is inside the component template, it can be queried after viewInit of the component.\n        $invokeWatchers(true);\n\n        const componentFactory = await this.partialRefProvider.getComponentFactoryRef(nv, ComponentType.PARTIAL);\n        if (componentFactory) {\n            const instanceRef = this.vcRef.createComponent(componentFactory, 0, this.inj);\n\n            if (!this.$target) {\n                this.$target = this.elRef.nativeElement.querySelector('[partial-container-target]') || this.elRef.nativeElement;\n            }\n\n            this.$target.innerHTML = '';\n            this.$target.appendChild(instanceRef.location.nativeElement);\n            this.contentInitialized = true;\n            setTimeout(() => this.onLoadSuccess(), 200);\n        }\n    }\n\n    renderPartial = _.debounce(this._renderPartial, 200, {leading: true});\n\n    onLoadSuccess() {\n        this.componentInstance.invokeEventCallback('load');\n\n        this.app.notify('partialLoaded');\n    }\n\n    constructor(\n        @Self() @Inject(WidgetRef) public componentInstance,\n        public vcRef: ViewContainerRef,\n        public elRef: ElementRef,\n        public inj: Injector,\n        private app: App,\n        @Attribute('content') _content: string,\n        private resolver: ComponentFactoryResolver,\n        private componentRefProvider: ComponentRefProvider,\n        private partialRefProvider: PartialRefProvider\n    ) {\n\n        componentInstance.registerPropertyChangeListener((key: string, nv: any, ov?: any) => {\n            if (key === 'content') {\n                if (componentInstance.$lazyLoad) {\n                    componentInstance.$lazyLoad = () => {\n                        this.renderPartial(nv);\n                        componentInstance.$lazyLoad = noop;\n                    };\n                } else {\n                    this.renderPartial(nv);\n                }\n            }\n        });\n\n        const subscription = componentInstance.params$\n            .pipe(\n                filter(() => this.contentInitialized),\n                debounceTime(200)\n            )\n            .subscribe(() => this.renderPartial(componentInstance.content));\n        // reload the partial content on partial param change\n        componentInstance.registerDestroyListener(() => subscription.unsubscribe());\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-spinner',\n    template: `\n        <div class=\"app-spinner\" *ngIf=\"show\">\n            <div class=\"spinner-message\" aria-label=\"loading gif\">\n                <i class=\"spinner-image animated infinite fa fa-circle-o-notch fa-spin\"></i>\n                <div class=\"spinner-messages\">\n                    <p *ngFor=\"let value of spinnermessages\" [textContent]=\"value\"></p>\n                </div>\n            </div>\n        </div>\n    `\n})\nexport class AppSpinnerComponent {\n    @Input() show: boolean;\n    @Input() spinnermessages: Array<string>;\n    constructor() {}\n}\n","import { AfterViewInit, Component, ViewChild, ViewContainerRef, TemplateRef, OnDestroy } from '@angular/core';\n\nimport { Toast, ToastPackage, ToastrService } from 'ngx-toastr';\n\nimport { $watch, $appDigest } from '@wm/core';\n\ndeclare const _, $;\n\n@Component({\n    selector: '[custom-toaster-component]',\n    template: `\n        <div class=\"parent-custom-toast\"></div>\n        <ng-container #customToast></ng-container>\n        <ng-template #customToastTmpl>\n            <div wmContainer partialContainer content.bind=\"pagename\">\n                <div *ngFor=\"let param of params | keyvalue\" wmParam hidden\n                    [name]=\"param.key\" [value]=\"param.value\"></div>\n            </div>\n        </ng-template>`,\n    preserveWhitespaces: false\n})\nexport class CustomToasterComponent extends Toast implements AfterViewInit, OnDestroy {\n\n    @ViewChild('customToast', {read: ViewContainerRef}) customToastRef: ViewContainerRef;\n    @ViewChild('customToastTmpl') customToastTmpl: TemplateRef<any>;\n    pagename: any;\n    watchers: any = [];\n    params: any = {};\n\n    // constructor is only necessary when not using AoT\n    constructor(\n        protected toastrService: ToastrService,\n        public toastPackage: ToastPackage\n    ) {\n        super(toastrService, toastPackage);\n        this.pagename = this.message || '';\n        this.generateParams();\n    }\n\n    // Generate the params for partial page. If bound, watch the expression and set the value\n    generateParams() {\n        _.forEach((<any>this.options).partialParams, (param) => {\n            if (_.isString(param.value) && param.value.indexOf('bind:') === 0) {\n                this.watchers.push($watch(\n                    param.value.substr(5),\n                    (<any>this.options).context,\n                    {},\n                    nv => {\n                        this.params[param.name] = nv;\n                        $appDigest();\n                    }\n                ));\n            } else {\n                this.params[param.name] = param.value;\n            }\n        });\n    }\n\n    async generateDynamicComponent() {\n        const $targetLayout = $('.parent-custom-toast');\n\n        this.customToastRef.clear();\n\n        $targetLayout[0].appendChild(this.customToastRef.createEmbeddedView(this.customToastTmpl).rootNodes[0]);\n    }\n\n    ngAfterViewInit() {\n        this.generateDynamicComponent();\n    }\n\n    ngOnDestroy() {\n        _.forEach(this.watchers, watcher => watcher());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { App, getWmProjectProperties } from '@wm/core';\nimport { SecurityService } from '@wm/security';\n\nimport { AppManagerService } from '../../services/app.manager.service';\n\n@Component({\n    selector: 'app-empty-page',\n    template: '<div></div>'\n})\nexport class EmptyPageComponent implements OnInit {\n\n    constructor(\n        private route: ActivatedRoute,\n        private securityService: SecurityService,\n        private router: Router,\n        private app: App,\n        private appManger: AppManagerService\n    ) {}\n\n    ngOnInit() {\n        if (this.app.isPrefabType) {\n            // there is only one route\n            this.router.navigate(['prefab-preview']);\n        } else  if (this.app.isApplicationType) {\n            this.securityService.getPageByLoggedInUser().then(page => {\n                this.router.navigate([page]);\n            });\n        } else {\n            this.router.navigate([getWmProjectProperties().homePage]);\n            this.appManger.postAppTypeInfo();\n        }\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    Directive,\n    ElementRef,\n    Inject,\n    Injector,\n    Self,\n    ViewContainerRef\n} from '@angular/core';\n\nimport { WidgetRef } from '@wm/components';\n\nimport { PrefabManagerService } from '../services/prefab-manager.service';\nimport { ComponentRefProvider, ComponentType } from '../types/types';\n\n@Directive({\n    selector: '[wmPrefab][prefabname]'\n})\nexport class PrefabDirective {\n\n    constructor(\n        @Self() @Inject(WidgetRef) public componentInstance,\n        public vcRef: ViewContainerRef,\n        public elRef: ElementRef,\n        private prefabMngr: PrefabManagerService,\n        private resolver: ComponentFactoryResolver,\n        private injector: Injector,\n        private componentRefProvider: ComponentRefProvider\n    ) {\n        const prefabName = this.componentInstance.prefabName;\n\n        this.prefabMngr.loadDependencies(prefabName)\n            .then(async () => {\n                const componentFactory = await this.componentRefProvider.getComponentFactoryRef(prefabName, ComponentType.PREFAB);\n                if (componentFactory) {\n                    const instanceRef = this.vcRef.createComponent(componentFactory, 0, injector);\n                    this.elRef.nativeElement.appendChild(instanceRef.location.nativeElement);\n                }\n            });\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport {\n    AbstractDialogService,\n    AbstractHttpService,\n    AbstractI18nService,\n    AbstractSpinnerService,\n    AbstractToasterService,\n    EventNotifier,\n    FieldTypeService,\n    FieldWidgetService,\n    getWmProjectProperties,\n    isDefined,\n    isString,\n    UtilsService,\n    DynamicComponentRefProvider\n} from '@wm/core';\nimport { SecurityService } from '@wm/security';\n\ndeclare const _;\n\nconst injectorMap = {\n    DialogService: AbstractDialogService,\n    i18nService: AbstractI18nService,\n    SpinnerService: AbstractSpinnerService,\n    ToasterService: AbstractToasterService,\n    Utils: UtilsService,\n    FIELD_TYPE: FieldTypeService,\n    FIELD_WIDGET: FieldWidgetService,\n    DynamicComponentService: DynamicComponentRefProvider\n};\n\nconst enum PROJECT_TYPE {\n    APPLICATION = 'APPLICATION',\n    PREFAB = 'PREFAB',\n    TEMPLATE_BUNDLE = 'TEMPLATEBUNDLE'\n}\n\nconst noop = (...args) => {};\n\n// Wraps httpService to behave as angular 1.x $http service.\nconst getHttpDependency = function() {\n    const httpService = this.httpService;\n    const fn = function (key, options?) {\n        const args = Array.from(arguments).slice(1);\n        return Promise.resolve(httpService[key].apply(httpService, args));\n    };\n    const $http = function () {\n        return fn.apply(undefined, ['send', ...Array.from(arguments)]);\n    };\n    ['get', 'post', 'head', 'put', 'delete', 'jsonp', 'patch'].forEach(key => $http[key] = fn.bind(undefined, key));\n    return $http;\n};\n\n@Injectable()\nexport class AppRef {\n    Variables: any = {};\n    Actions: any = {};\n    onAppVariablesReady = noop;\n    onSessionTimeout = noop;\n    onPageReady = noop;\n    onBeforePageLeave = noop;\n    onBeforeServiceCall =  noop;\n    onServiceSuccess =  noop;\n    onServiceError =  noop;\n    dynamicComponentContainerRef = {};\n\n    projectName: string;\n    isPrefabType: boolean;\n    isApplicationType: boolean;\n    isTabletApplicationType: boolean;\n    isTemplateBundleType: boolean;\n\n    appLocale: any;\n\n    changeLocale = this.i18nService.setSelectedLocale.bind(this.i18nService);\n    getSelectedLocale = this.i18nService.getSelectedLocale.bind(this.i18nService);\n\n    private _eventNotifier = new EventNotifier();\n\n    landingPageName: string;\n\n    reload() {\n        window.location.reload();\n    }\n\n    constructor(\n        private inj: Injector,\n        private i18nService: AbstractI18nService,\n        private httpService: AbstractHttpService,\n        private securityService: SecurityService\n    ) {\n\n        const wmProjectProperties = getWmProjectProperties();\n\n        this.projectName = wmProjectProperties.name;\n        this.isPrefabType = wmProjectProperties.type === PROJECT_TYPE.PREFAB;\n        this.isApplicationType = wmProjectProperties.type === PROJECT_TYPE.APPLICATION;\n        this.isTemplateBundleType = wmProjectProperties.type === PROJECT_TYPE.TEMPLATE_BUNDLE;\n\n        this.httpService.registerOnSessionTimeout(this.on401.bind(this));\n\n        this.appLocale = this.i18nService.getAppLocale();\n        this.httpService.setLocale(this.appLocale);\n    }\n\n    public notify(eventName: string, ...data: Array<any>) {\n        this._eventNotifier.notify.apply(this._eventNotifier, arguments);\n    }\n\n    public getDependency(injToken) {\n        if (isString(injToken)) {\n            if (injToken === 'HttpService') {\n                return getHttpDependency.call(this);\n            }\n            let providerInstance = injectorMap[injToken] && this.inj.get(injectorMap[injToken]);\n            if (!providerInstance && this.inj['_providers']) {\n                this.inj['_providers'].forEach( e => {\n                    if (e && e.__proto__.constructor.toString().indexOf('function ' + injToken + '(') === 0) {\n                        providerInstance = this.inj.get(e.__proto__.constructor);\n                    }\n                });\n            }\n            return providerInstance;\n        }\n        return this.inj.get(injToken);\n    }\n\n    /**\n     * triggers the onSessionTimeout callback in app.js\n     */\n    on401() {\n        const userInfo = _.get(this.securityService.get(), 'userInfo');\n        // if a previous user exists, a session time out triggered\n        if (!_.isEmpty(userInfo)) {\n            this.onSessionTimeout();\n        }\n    }\n\n    public subscribe(eventName, callback: (data: any) => void): () => void {\n        return this._eventNotifier.subscribe(eventName, callback);\n    }\n\n    public notifyApp(template, type, title) {\n        const notificationAction = _.get(this, 'Actions.appNotification');\n        if (notificationAction) {\n            type = type || 'success';\n            notificationAction.invoke({\n                message: template,\n                title: isDefined(title) ? title : type.toUpperCase(),\n                class: type,\n                // If the type is error do not close the toastr\n                duration: type.toUpperCase() === 'ERROR' ? 0 : undefined\n            });\n        } else {\n            console.warn('The default Action \"appNotification\" doesn\\'t exist in the app.');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AbstractToasterService, isDefined } from '@wm/core';\n\nimport { CustomToasterComponent } from '../components/custom-toaster.component';\n\ndeclare const _;\n\n@Injectable()\nexport class ToasterServiceImpl extends AbstractToasterService {\n\n    constructor(private toaster: ToastrService) {\n        super();\n    }\n\n    private _showToaster (type: string, title: string, desc: string, options?: any) {\n        // backward compatibility (in 9.x, 4th param is timeout value).\n        if (_.isNumber(options)) {\n            options = {timeOut: options};\n        }\n\n        options = options || {};\n        options.timeOut = isDefined(options.timeOut) ? options.timeOut : 0;\n        options.enableHtml = isDefined(options.enableHtml);\n        options.positionClass = options.positionClass || 'toast-bottom-right';\n        options.toastClass = 'toast';\n        // pop the toaster only if either title or description are defined\n        if (title || desc) {\n            // if the desc is an object, stringify it.\n            if (!options.bodyOutputType && _.isObject(desc)) {\n                desc = JSON.stringify(desc);\n            }\n            const fn = this.toaster[type];\n            if (fn) {\n                return fn.call(this.toaster, desc, title, options);\n            }\n        }\n    }\n\n    public success (title, desc) {\n        return this._showToaster('success', title, desc, {timeOut: 5000});\n    }\n\n    public error (title, desc) {\n        return this._showToaster('error', title, desc, {timeOut: 0});\n    }\n\n    public info (title, desc) {\n        return this._showToaster('info', title, desc, {timeOut: 0});\n    }\n\n    public warn (title, desc) {\n        return this._showToaster('warning', title, desc, {timeOut: 0});\n    }\n\n    public show (type, title, desc, options) {\n        return this._showToaster(type, title, desc, options);\n    }\n\n    public hide (toasterObj) {\n        // in studio just ignore the toasterObj and hide all the toasters\n        if (!toasterObj) {\n            this.toaster.clear();\n            return;\n        }\n        this.toaster.clear(toasterObj.toastId);\n    }\n\n    public showCustom(page, options) {\n        if (!page) {\n            return;\n        }\n        options = options || {};\n        options.toastComponent = CustomToasterComponent;\n        options.toastClass = 'custom-toaster';\n        options.timeOut = isDefined(options.timeOut) ? options.timeOut : 0;\n        options.enableHtml = isDefined(options.enableHtml);\n        options.positionClass = options.positionClass || 'toast-bottom-right';\n        options.toastClass = 'toast';\n        return this.toaster.show(page, '', options);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { registerLocaleData } from '@angular/common';\n\nimport { BsLocaleService, defineLocale } from 'ngx-bootstrap';\n\nimport {\n    _WM_APP_PROJECT,\n    AbstractI18nService,\n    AppDefaults,\n    getSessionStorageItem,\n    getWmProjectProperties,\n    isMobile,\n    isMobileApp,\n    replace,\n    setCSS,\n    setSessionStorageItem\n} from '@wm/core';\nimport { CONSTANTS } from '@wm/variables';\n\ndeclare const _, moment;\n\nconst APP_LOCALE_ROOT_PATH = 'resources/i18n';\nconst RTL_LANGUAGE_CODES = ['ar', 'ar-001', 'ar-ae', 'ar-bh', 'ar-dz', 'ar-eg', 'ar-iq', 'ar-jo', 'ar-kw', 'ar-lb', 'ar-ly',\n    'ar-ma', 'ar-om', 'ar-qa', 'ar-sa', 'ar-sd', 'ar-sy', 'ar-tn', 'ar-ye', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk',\n    'he', 'ku', 'mzn', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi'];\n\n@Injectable()\nexport class I18nServiceImpl extends AbstractI18nService {\n\n    private selectedLocale: string;\n    private defaultSupportedLocale = 'en';\n    private readonly appLocale: any;\n    private readonly prefabLocale: Map<String, any>;\n    private messages: any;\n    private _isAngularLocaleLoaded = false;\n\n    constructor(\n        private $http: HttpClient,\n        private bsLocaleService: BsLocaleService,\n        private appDefaults: AppDefaults\n    ) {\n        super();\n        this.appLocale = {};\n        this.prefabLocale = new Map();\n    }\n\n    private updateLocaleDirection() {\n        let direction: 'ltr' | 'rtl' = 'ltr';\n        if (RTL_LANGUAGE_CODES.includes(this.selectedLocale)) {\n            direction = 'rtl';\n        }\n\n        setCSS(document.body, 'direction', direction);\n    }\n\n    private init() {\n        this.messages = {};\n\n        Object.setPrototypeOf(this.appLocale, this.messages);\n    }\n\n    public getSelectedLocale(): string {\n        return this.selectedLocale;\n    }\n\n    public getDefaultSupportedLocale(): string {\n        return this.defaultSupportedLocale;\n    }\n\n    public getAppLocale(): any {\n        return this.appLocale;\n    }\n\n    public getPrefabLocaleBundle(prefabName: string): any {\n        if (!this.prefabLocale.has(prefabName)) {\n            this.prefabLocale.set(prefabName, Object.create(this.appLocale));\n        }\n        return this.prefabLocale.get(prefabName);\n    }\n\n    private extendPrefabMessages(messages: any): void {\n        if (!messages.prefabMessages) {\n            return;\n        }\n\n        Object.keys(messages.prefabMessages).forEach((prefabName: string) => {\n            let bundle = this.prefabLocale.get(prefabName);\n            if (!bundle) {\n                bundle = Object.create(this.appLocale);\n                this.prefabLocale.set(prefabName, bundle);\n            }\n            Object.assign(bundle, messages.prefabMessages[prefabName]);\n        });\n    }\n\n    private extendMessages(messages: any): void {\n        Object.assign(this.messages, messages);\n    }\n\n    private loadResource(path): Promise<any> {\n        return this.$http.get(path)\n            .toPromise()\n            .catch(() => {\n                console.warn(`error loading locale resource from ${path}`);\n                Promise.resolve({});\n            });\n    }\n\n    protected loadAppLocaleBundle() {\n        this.loadResource(`${APP_LOCALE_ROOT_PATH}/${this.selectedLocale}.json`)\n            .then(bundle => {\n                this.extendMessages(bundle.messages);\n                this.extendPrefabMessages(bundle);\n                this.appDefaults.setFormats(bundle.formats);\n            });\n    }\n\n    protected loadMomentLocaleBundle(momentLocale) {\n        const _cdnUrl = _WM_APP_PROJECT.cdnUrl || _WM_APP_PROJECT.ngDest;\n        if (this.selectedLocale === this.defaultSupportedLocale) {\n            moment.locale(this.defaultSupportedLocale);\n            return;\n        }\n        const path = _cdnUrl + `locales/moment/${momentLocale}.js`;\n        this.$http.get(path, {responseType: 'text'})\n            .toPromise()\n            .then((response: any) => {\n                const fn = new Function(response);\n\n                // Call the script. In script, moment defines the loaded locale\n                fn();\n                moment.locale(this.selectedLocale);\n\n                // For ngx bootstrap locale, get the config from script and apply locale\n                let _config;\n                fn.apply({moment: {defineLocale: (code, config) => _config = config}});\n                defineLocale(this.selectedLocale, _config);\n                this.bsLocaleService.use(this.getSelectedLocale() || this.defaultSupportedLocale);\n            });\n    }\n\n    protected loadAngularLocaleBundle(angLocale) {\n        return new Promise(resolve => {\n            const _cdnUrl = _WM_APP_PROJECT.cdnUrl || _WM_APP_PROJECT.ngDest;\n            if (this.selectedLocale === this.defaultSupportedLocale) {\n                resolve();\n                return;\n            }\n            const path = _cdnUrl + `locales/angular/${angLocale}.js`;\n\n            this.$http.get(path, {responseType: 'text'})\n                .toPromise()\n                .then((response: any) => {\n                    const module: any = {}, exports: any = {};\n                    module.exports = exports;\n                    const fn = new Function('module', 'exports', response);\n                    fn(module, exports);\n                    registerLocaleData(exports.default);\n                    this._isAngularLocaleLoaded = true;\n                    resolve();\n                }, () => resolve());\n        });\n    }\n\n    protected loadCalendarLocaleBundle(calendarLocale) {\n        const _cdnUrl = _WM_APP_PROJECT.cdnUrl || _WM_APP_PROJECT.ngDest;\n        let path: string;\n        if (calendarLocale) {\n            path = _cdnUrl + `locales/fullcalendar/${calendarLocale}.js`;\n        } else {\n            return Promise.resolve();\n        }\n\n        // return in case of mobile app or if selected locale is default supported locale.\n        if (isMobile() || isMobileApp() || this.selectedLocale === this.defaultSupportedLocale) {\n            return;\n        }\n\n        this.$http.get(path, {responseType: 'text'})\n            .toPromise()\n            .then((response: any) => {\n                const fn = new Function(response);\n                // Call the script. In script, moment defines the loaded locale\n                fn();\n            });\n    }\n\n    protected loadLocaleBundles(libLocale) {\n        if (libLocale.moment) {\n            this.loadMomentLocaleBundle(libLocale.moment);\n        }\n        if (libLocale.fullCalendar) {\n            this.loadCalendarLocaleBundle(libLocale.fullCalendar);\n        }\n        if (libLocale.angular) {\n            this.loadAppLocaleBundle();\n        }\n        return this.loadAngularLocaleBundle(libLocale.angular);\n    }\n\n    public setSelectedLocale(locale) {\n\n        // check if the event is propagated from the select or any such widget\n        if (_.isObject(locale)) {\n            locale = locale.datavalue;\n        }\n\n        const libLocale = getWmProjectProperties().supportedLanguages[locale];\n        const supportedLocale = Object.keys(getWmProjectProperties().supportedLanguages);\n\n        if (!_.includes(supportedLocale, locale)) {\n            return Promise.resolve();\n        }\n\n        if (!locale || locale === this.selectedLocale) {\n            return Promise.resolve();\n        }\n\n        setSessionStorageItem('selectedLocale', locale);\n\n        this.selectedLocale = locale;\n\n        // reset the localeData object\n        this.init();\n\n        // load the locale bundles of the selected locale\n        return this.loadLocaleBundles(libLocale).then(() => this.updateLocaleDirection());\n    }\n\n    public loadDefaultLocale() {\n        const _acceptLang = this.getAcceptedLanguages();\n        _acceptLang.push(getWmProjectProperties().defaultLanguage);\n\n        let _supportedLang = Object.keys(getWmProjectProperties().supportedLanguages) || [this.defaultSupportedLocale];\n\n        // check for the session storage to load any pre-requested locale\n        const _defaultLang = getSessionStorageItem('selectedLocale') || _.intersection(_acceptLang, _supportedLang)[0] || this.defaultSupportedLocale;\n\n        // if the supportedLocale is not available set it to defaultLocale\n        _supportedLang = _supportedLang || [_defaultLang];\n\n        const defaultLanguage = _defaultLang || _supportedLang[0];\n        return this.setSelectedLocale(defaultLanguage);\n    }\n\n    public getLocalizedMessage(message, ...args) {\n        return replace(this.appLocale[message], args);\n    }\n\n    // This function returns the accepted languages list\n    public getAcceptedLanguages() {\n        let languages;\n        if (CONSTANTS.hasCordova) {\n            languages = navigator.languages || [navigator.language];\n        } else {\n            languages = getWmProjectProperties().preferredLanguage || '';\n            /**\n             * Accept-Language Header will contain set of supported locale, so try splitting the string to proper locale set\n             * Ex: en,en-US;q=0.9,de;q=0.6,ar;q=0.2,hi\n             *\n             * Split the above into [en,en-us,de,ar,hi]\n             * @type {Array}\n             */\n            languages = languages.split(',').map(function(locale) {\n                return locale.split(';')[0];\n            });\n        }\n        return _.map(languages, _.toLower);\n    }\n\n    public isAngularLocaleLoaded() {\n        return this._isAngularLocaleLoaded;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { AbstractSpinnerService } from '@wm/core';\n\ndeclare const _, $;\n\nconst spinnerTemplate = `<div class=\"app-spinner\">\n                            <div class=\"spinner-message\" aria-label=\"loading gif\">\n                                <i class=\"spinner-image animated infinite fa fa-circle-o-notch fa-spin\"></i>\n                                <div class=\"spinner-messages\">\n                                    <p class=\"spinner-messages-container\"></p>\n                               </div>\n                            </div>\n                         </div>`;\n\n@Injectable()\nexport class SpinnerServiceImpl extends AbstractSpinnerService {\n    spinnerId = 0;\n    messageSource = new Subject();\n    messagesByContext = {};\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * returns the message source subject\n     * @returns {Subject<any>}\n     */\n    getMessageSource() {\n        return this.messageSource;\n    }\n\n    /**\n     * show spinner on a container element\n     */\n    showContextSpinner(ctx: string, message: string, id: string) {\n        const ctxMarkup = $('[name=\"' + ctx + '\"]');\n        this.messagesByContext[ctx] = this.messagesByContext[ctx] || {};\n        // If the spinner already exists on the context\n        // then just append the message to the existing spinner message\n        // else add a new spinner\n        if (Object.keys(this.messagesByContext[ctx]).length !== 0 ) {\n            this.messagesByContext[ctx][id] = message;\n            this.messagesByContext[ctx]['finalMessage'] = this.messagesByContext[ctx]['finalMessage'] + ' ' + this.messagesByContext[ctx][id];\n            ctxMarkup.find('.spinner-messages-container').html(this.messagesByContext[ctx]['finalMessage']);\n        } else {\n            const ctxSpinnerTemp = $(spinnerTemplate);\n            this.messagesByContext[ctx][id] = message;\n            this.messagesByContext[ctx]['finalMessage'] = this.messagesByContext[ctx][id];\n            ctxSpinnerTemp.find('.spinner-messages-container').html(this.messagesByContext[ctx]['finalMessage']);\n            ctxMarkup.prepend(ctxSpinnerTemp);\n        }\n        return id;\n    }\n\n    /**\n     * show the app spinner with provided message\n     * @param msg\n     * @returns {string}\n     */\n    showAppSpinner(msg, id) {\n        const ctx = 'page';\n        this.messagesByContext[ctx] = this.messagesByContext[ctx] || {};\n        this.messagesByContext[ctx][id] = msg;\n\n        this.messageSource.next({\n            show: true,\n            message: msg,\n            messages: _.values(this.messagesByContext[ctx])\n        });\n    }\n\n    /**\n     * hides the spinner on a particular container(context)\n     * @param ctx\n     * @param id\n     */\n    hideContextSpinner(ctx, id) {\n        delete this.messagesByContext[ctx][id];\n        if (Object.keys(this.messagesByContext[ctx]).length === 1) {\n            this.messagesByContext[ctx] = {};\n        }\n        const ctxMarkup = $('[name=\"' + ctx + '\"]');\n        ctxMarkup.find('.app-spinner').remove();\n    }\n\n    /**\n     * show spinner\n     * @param message\n     * @param id\n     * @param spinnerClass\n     * @param spinnerContext\n     * @param variableScopeId\n     * @returns {any}\n     */\n    show(message, id?, spinnerClass?, spinnerContext?, variableScopeId?) {\n        id      = id || ++this.spinnerId;\n        // if spinnerContext is passed, then append the spinner to the element(default method for variable calls).\n        if (spinnerContext && spinnerContext !== 'page') {\n            // return after the compiled spinner is appended to the element reference\n            return this.showContextSpinner(spinnerContext, message, id);\n        }\n\n        this.showAppSpinner(message, id);\n        return id;\n    }\n\n    /**\n     * hide the spinner\n     * @param spinnerId\n     */\n    hide(id) {\n        // find the spinner context of the id from the messagesByContext\n        const ctx = _.findKey(this.messagesByContext, function (obj) {\n            return _.includes(_.keys(obj), id);\n        }) || 'page';\n\n        // if spinnerContext exists just remove the spinner from the reference and destroy the scope associated.\n        if (ctx !== 'page') {\n            this.hideContextSpinner(ctx, id);\n            return;\n        }\n\n        if (id) {\n            delete this.messagesByContext[ctx][id];\n            const messages = _.values(this.messagesByContext[ctx]);\n            const pageSpinnerCount = Object.keys(this.messagesByContext[ctx]).length;\n            this.messageSource.next({\n                show: messages.length ? true : false,\n                messages: _.values(this.messagesByContext[ctx])\n            });\n            // If a page spinner has id and no messages left to display then remove that spinner.\n            if (pageSpinnerCount === 0) {\n                $('.app-spinner').remove();\n            }\n        } else {\n            this.messagesByContext[ctx] = {};\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\n\nimport { App, NavigationOptions, AbstractNavigationService } from '@wm/core';\nimport { CONSTANTS } from '@wm/variables';\n\ndeclare const _, $;\n\nconst parentSelector = 'body:first >app-root:last';\n\n@Injectable()\nexport class NavigationServiceImpl implements AbstractNavigationService {\n    private history = new History();\n    private transition: string;\n    private isPageAddedToHistory = false;\n\n    constructor(private app: App, private router: Router) {\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                const url = event.url;\n                const urlParams = {};\n                let pageName;\n                if (!this.isPageAddedToHistory) {\n                    this.isPageAddedToHistory = false;\n                    if (url.indexOf('?') > 0) {\n                        url.substr(url.indexOf('?') + 1)\n                            .split('&')\n                            .forEach(s => {\n                                const splits = s.split('=');\n                                urlParams[splits[0]] = splits[1];\n                            });\n                        pageName = url.substr(0, url.indexOf('?'));\n                    } else {\n                        pageName = url;\n                    }\n                    if (pageName[0] === '/') {\n                        pageName = pageName.substr(1);\n                    }\n                    if (pageName) {\n                        /*\n                         * Commenting this code, one client project has Home_Page configured as Login Page.\n                         * So redirection to Home_Page post login is failing\n                         // if login page is being loaded and user is logged in, cancel that.\n                            if ($rs.isApplicationType) {\n                                stopLoginPagePostLogin($p);\n                            }\n                         */\n                        delete urlParams['name'];\n\n                        this.history.push(new PageInfo(pageName, urlParams, this.transition));\n                    }\n                }\n            }\n        });\n    }\n\n    public getPageTransition() {\n        if (_.isEmpty(this.transition) || _.isEqual('none', this.transition)) {\n            return null;\n        }\n        return this.transition;\n    }\n\n    /**\n     * Navigates to particular page\n     * @param pageName\n     * @param options\n     */\n    public goToPage(pageName: string, options: NavigationOptions) {\n        this.transition = options.transition || '';\n        // page is added to stack only when currentPage is available.\n        if (this.history.getCurrentPage()) {\n            this.isPageAddedToHistory = true;\n        }\n        this.history.push( new PageInfo(pageName, options.urlParams, this.transition));\n        if (CONSTANTS.isWaveLens) {\n            const location = window['location'];\n            const strQueryParams = _.map(options.urlParams || [], (value, key) => key + '=' + value);\n\n            const strQuery = (strQueryParams.length > 0 ? '?' + strQueryParams.join('&') : '');\n\n            location.href = location.origin\n                + location.pathname\n                + '#/' + pageName\n                + strQuery;\n            return;\n        }\n        return this.router.navigate([`/${pageName}`], { queryParams: options.urlParams});\n    }\n\n    /**\n     * Navigates to last visited page.\n     */\n    public goToPrevious() {\n        if (this.history.getPagesCount()) {\n            this.transition = this.history.getCurrentPage().transition;\n            if (!_.isEmpty(this.transition)) {\n                this.transition += '-exit';\n            }\n            this.history.pop();\n            this.isPageAddedToHistory = true;\n            window.history.back();\n        }\n    }\n\n    /** Todo[Shubham] Need to handle gotoElement in other partials\n     * Navigates to particular view\n     * @param viewName\n     * @param options\n     * @param variable\n     */\n    public goToView(viewName: string, options: NavigationOptions, variable: any) {\n        options = options || {};\n        const pageName = options.pageName;\n        const transition = options.transition || '';\n        const $event = options.$event;\n        const activePage = this.app.activePage;\n        const prefabName = variable && variable._context && variable._context.prefabName;\n\n        // Check if app is Prefab\n        if (this.app.isPrefabType) {\n            this.goToElementView($(parentSelector).find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n        } else {\n            // checking if the element is present in the page or not, if no show an error toaster\n            // if yes check if it is inside a partial/prefab in the page and then highlight the respective element\n            // else goto the page in which the element exists and highlight the element\n            if (pageName !== activePage.activePageName && !prefabName) {\n                if (this.isPartialWithNameExists(pageName)) {\n                    this.goToElementView($('[partialcontainer][content=\"' + pageName + '\"]').find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n                } else {\n                    // Todo[Shubham]: Make an API call to get all pages and check if the page name\n                    //  is a page and then do this call else show an error as:\n                    //  this.app.notifyApp(CONSTANTS.WIDGET_DOESNT_EXIST, 'error');\n                    this.goToPage(pageName, {\n                        viewName: viewName,\n                        $event: $event,\n                        transition: transition,\n                        urlParams: options.urlParams\n                    });\n                    // subscribe to an event named pageReady which notifies this subscriber\n                    // when all widgets in page are loaded i.e when page is ready\n                    const pageReadySubscriber = this.app.subscribe('pageReady', (page) => {\n                        this.goToElementView($(parentSelector).find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n                        pageReadySubscriber();\n                    });\n                }\n            } else if (prefabName && this.isPrefabWithNameExists(prefabName)) {\n                this.goToElementView($('[prefabName=\"' + prefabName + '\"]').find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n            } else if (!pageName || pageName === activePage.activePageName) {\n                this.goToElementView($(parentSelector).find('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n            } else {\n                this.app.notifyApp(CONSTANTS.WIDGET_DOESNT_EXIST, 'error');\n            }\n        }\n    }\n\n    /*\n     * navigates the user to a view element with given name\n     * if the element not found in the compiled markup, the same is searched in the available dialogs in the page\n     */\n    private goToElementView(viewElement, viewName: string, pageName: string, variable: any) {\n        let $el, parentDialog;\n        const activePage = this.app.activePage;\n        if (viewElement.length) {\n            if (!this.app.isPrefabType && pageName === activePage.activePageName) {\n                viewElement = this.getViewElementInActivePage(viewElement);\n            }\n\n            $el = viewElement[0].widget;\n            switch ($el.widgetType) {\n                case 'wm-accordionpane':\n                    this.showAncestors(viewElement, variable);\n                    $el.expand();\n                    break;\n                case 'wm-tabpane':\n                    this.showAncestors(viewElement, variable);\n                    $el.select();\n                    break;\n                case 'wm-segment-content':\n                    this.showAncestors(viewElement, variable);\n                    $el.navigate();\n                    break;\n                case 'wm-panel':\n                    /* flip the active flag */\n                    $el.expanded = true;\n                    break;\n            }\n        } else {\n            parentDialog = this.showAncestorDialog(viewName);\n            setTimeout(() => {\n                if (parentDialog) {\n                    this.goToElementView($('[name=\"' + viewName + '\"]'), viewName, pageName, variable);\n                }\n            });\n        }\n    }\n\n    /* If page name is equal to active pageName, this function returns the element in the page.\n     The element in the partial page is not selected.*/\n    private getViewElementInActivePage($el) {\n        let selector;\n        if ($el.length > 1) {\n            selector = _.filter($el, (childSelector) => {\n                if (_.isEmpty($(childSelector).closest('[data-role = \"partial\"]')) && _.isEmpty($(childSelector).closest('[wmprefabcontainer]'))) {\n                    return childSelector;\n                }\n            });\n            if (selector) {\n                $el = $(selector);\n            }\n        }\n        return $el;\n    }\n\n    /**\n     * checks if the pagecontainer has the pageName.\n     */\n    private isPartialWithNameExists(name: string) {\n        return $('[partialcontainer][content=\"' + name + '\"]').length;\n    }\n\n    /**\n     * checks if the pagecontainer has the prefab.\n     */\n    private isPrefabWithNameExists(prefabName: string) {\n        return $('[prefabName=\"' + prefabName + '\"]').length;\n    }\n\n    /*\n     * shows all the parent container view elements for a given view element\n     */\n    private showAncestors(element, variable) {\n        const ancestorSearchQuery = '[wm-navigable-element=\"true\"]';\n\n        element\n            .parents(ancestorSearchQuery)\n            .toArray()\n            .reverse()\n            .forEach((parent) => {\n                const $el = parent.widget;\n                switch ($el.widgetType) {\n                    case 'wm-accordionpane':\n                        $el.expand();\n                        break;\n                    case 'wm-tabpane':\n                        $el.select();\n                        break;\n                    case 'wm-segment-content':\n                        $el.navigate();\n                        break;\n                    case 'wm-panel':\n                        /* flip the active flag */\n                        $el.expanded = true;\n                        break;\n                }\n            });\n    }\n\n\n\n    /*\n     * searches for a given view element inside the available dialogs in current page\n     * if found, the dialog is displayed, the dialog id is returned.\n     */\n    private showAncestorDialog(viewName: string) {\n        let dialogId;\n        $('app-root [dialogtype]')\n            .each(function () {\n                const dialog = $(this);\n                if ($(dialog.html()).find('[name=\"' + viewName + '\"]').length) {\n                    dialogId = dialog.attr('name');\n                    return false;\n                }\n            });\n        return dialogId;\n    }\n}\n\nclass PageInfo {\n\n    constructor(public name, public urlParams?, public transition?) {\n        this.transition = _.isEmpty(this.transition) ? null : this.transition;\n    }\n\n    public isEqual(page1: PageInfo) {\n        return page1 && page1.name === this.name && _.isEqual(page1.urlParams, this.urlParams);\n    }\n}\n\nclass History {\n    private stack: Array<PageInfo> = [];\n    private currentPage: PageInfo;\n\n    public getCurrentPage() {\n        return this.currentPage;\n    }\n\n    public getPagesCount() {\n        return this.stack.length;\n    }\n\n    public isLastVisitedPage(page: PageInfo) {\n        return this.getLastPage().isEqual(page);\n    }\n\n    public push(pageInfo: PageInfo) {\n        if (this.currentPage) {\n            this.stack.push(this.currentPage);\n        }\n        this.currentPage = pageInfo;\n    }\n\n    public pop() {\n        this.currentPage = this.stack.pop();\n        return this.currentPage;\n    }\n\n    public getLastPage() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { AppDefaults } from '@wm/core';\n\ndeclare const _;\n\n@Injectable()\nexport class AppDefaultsService implements AppDefaults {\n\n    constructor() {\n    }\n\n    dateFormat: string;\n    timeFormat: string;\n    dateTimeFormat: string;\n\n    setFormats(formats: any) {\n        const dateFormat = formats.date;\n        const timeFormat = formats.time;\n        const dateTimeFormat = (dateFormat && timeFormat) ? dateFormat + ' ' + timeFormat : undefined;\n\n        this.dateFormat = dateFormat;\n        this.timeFormat = timeFormat;\n        this.dateTimeFormat = dateTimeFormat;\n    }\n}","import { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { SecurityService } from '@wm/security';\n\nimport { AppManagerService } from '../services/app.manager.service';\n\nlet securityConfigLoaded = false;\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private securityService: SecurityService, private appManager: AppManagerService) {}\n\n    loadSecurityConfig(): Promise<boolean> {\n        if (securityConfigLoaded) {\n            return Promise.resolve(true);\n        }\n\n        return this.appManager.loadSecurityConfig().then(() => securityConfigLoaded = true);\n    }\n\n    isAuthenticated(): Promise<any> {\n        return this.loadSecurityConfig()\n            .then(() => {\n                return new Promise((resolve, reject) => {\n                    this.securityService.isAuthenticated(resolve, reject);\n                });\n            });\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<any> {\n        return this.isAuthenticated()\n            .then(isLoggedIn => {\n                if (isLoggedIn) {\n                    return Promise.resolve(true);\n                }\n\n                this.appManager.handle401(route.routeConfig.path);\n\n                return Promise.resolve(false);\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\nimport { AbstractToasterService, App } from '@wm/core';\nimport { SecurityService } from '@wm/security';\n\nimport { AuthGuard } from './auth.guard';\nimport { AppManagerService } from '../services/app.manager.service';\n\ndeclare const _: any;\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n\n    constructor(\n        private securityService: SecurityService,\n        private authGuard: AuthGuard,\n        private toasterService: AbstractToasterService,\n        private app: App,\n        private appManager: AppManagerService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n        const allowedRoles = route.data.allowedRoles;\n\n        return this.authGuard.isAuthenticated()\n            .then((isLoggedIn: boolean) => {\n                if (isLoggedIn) {\n                    const userRoles = this.securityService.get().userInfo.userRoles;\n                    const hasAccess = _.intersection(allowedRoles, userRoles).length > 0;\n\n                    if (hasAccess) {\n                        return Promise.resolve(true);\n                    }\n\n                    // current loggedin user doesn't have access to the page that the user is trying to view\n                    this.appManager.notifyApp(\n                        this.app.appLocale.LABEL_ACCESS_DENIED || 'Access Denied',\n                        'error'\n                    );\n\n                    return Promise.resolve(false);\n\n                } else {\n                    // redirect to Login\n                    this.appManager.handle401(route.routeConfig.path);\n\n                    return Promise.resolve(false);\n                }\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\nimport { App } from '@wm/core';\nimport { AppManagerService } from '../services/app.manager.service';\n\ndeclare const _: any;\n\n@Injectable()\nexport class PageNotFoundGaurd implements CanActivate {\n\n    constructor(\n        private app: App,\n        private appManager: AppManagerService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\n        this.appManager.notifyApp(\n            this.app.appLocale.MESSAGE_PAGE_NOT_FOUND || 'The page you are trying to reach is not available',\n            'error'\n        );\n        return Promise.resolve(false);\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { App, UtilsService } from '@wm/core';\n\nimport { AppJSProvider } from '../types/types';\n\nlet appJsLoaded = false;\n\n@Injectable()\nexport class AppJSResolve implements Resolve<any> {\n\n    constructor(\n        private inj: Injector,\n        private app: App,\n        private utilService: UtilsService,\n        private appJsProvider: AppJSProvider\n    ) {}\n\n    async resolve() {\n        if (appJsLoaded) {\n            return true;\n        }\n\n        try {\n            // execute app.js\n            const appScriptFn = await this.appJsProvider.getAppScriptFn();\n            appScriptFn(this.app, this.utilService, this.inj);\n        } catch (e) {\n            console.warn('Error in executing app.js', e);\n        }\n\n        appJsLoaded = true;\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { AbstractI18nService } from '@wm/core';\n\n@Injectable()\nexport class I18nResolve implements Resolve<any> {\n\n    constructor(private i18nService: AbstractI18nService) {}\n\n    resolve() {\n        return this.i18nService.loadDefaultLocale();\n    }\n}\n","import { Compiler, Injectable, Injector, ChangeDetectorRef, InjectionToken, KeyValueDiffers, Pipe } from '@angular/core';\nimport {\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n    NgLocalization\n} from '@angular/common'\nimport {\n    SuffixPipe,\n    ToDatePipe,\n    FileIconClassPipe,\n    FileExtensionFromMimePipe,\n    FilterPipe,\n    FileSizePipe,\n    ToNumberPipe,\n    ToCurrencyPipe,\n    PrefixPipe,\n    TimeFromNowPipe,\n    NumberToStringPipe,\n    StateClassPipe,\n    StringToNumberPipe\n} from '@wm/components';\nimport { getSessionStorageItem } from '@wm/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PipeProvider {\n    _pipeMeta;\n    _locale = getSessionStorageItem('selectedLocale') || 'en';\n    preparePipeMeta = (\n        reference: Pipe,\n        name: string,\n        pure: boolean,\n        diDeps = []\n    ) => ({\n        type: { reference, diDeps },\n        name,\n        pure\n    })\n    _pipeData = [\n        // TODO | NEED TO BE TESTED\n        this.preparePipeMeta(AsyncPipe, 'async', false, [ChangeDetectorRef]),\n        this.preparePipeMeta(SlicePipe, 'slice', false),\n        this.preparePipeMeta(PercentPipe, 'percent', true, [this._locale]),\n        this.preparePipeMeta(I18nPluralPipe, 'i18nPlural', true, [\n            NgLocalization\n        ]),\n        this.preparePipeMeta(I18nSelectPipe, 'i18nSelect', true),\n        this.preparePipeMeta(KeyValuePipe, 'keyvalue', false, [\n            KeyValueDiffers\n        ]),\n        this.preparePipeMeta(FileIconClassPipe, 'fileIconClass', true),\n        this.preparePipeMeta(\n            FileExtensionFromMimePipe,\n            'fileExtensionFromMime',\n            true\n        ),\n        this.preparePipeMeta(StateClassPipe, 'stateClass', true),\n        this.preparePipeMeta(FileSizePipe, 'filesize', true),\n        // TESTED\n        this.preparePipeMeta(FilterPipe, 'filter', true),\n        this.preparePipeMeta(UpperCasePipe, 'uppercase', true),\n        this.preparePipeMeta(LowerCasePipe, 'lowercase', true),\n        this.preparePipeMeta(JsonPipe, 'json', false),\n        this.preparePipeMeta(DecimalPipe, 'number', true, [this._locale]),\n        this.preparePipeMeta(TitleCasePipe, 'titlecase', true),\n        this.preparePipeMeta(CurrencyPipe, 'currency', true, [this._locale]),\n        this.preparePipeMeta(DatePipe, 'date', true, [this._locale]),\n        this.preparePipeMeta(ToDatePipe, 'toDate', true, [\n            new DatePipe(this._locale)\n        ]),\n        this.preparePipeMeta(ToNumberPipe, 'toNumber', true, [\n            new DecimalPipe(this._locale)\n        ]),\n        this.preparePipeMeta(ToCurrencyPipe, 'toCurrency', true, [\n            new DecimalPipe(this._locale)\n        ]),\n        this.preparePipeMeta(PrefixPipe, 'prefix', true),\n        this.preparePipeMeta(SuffixPipe, 'suffix', true),\n        this.preparePipeMeta(TimeFromNowPipe, 'timeFromNow', true),\n        this.preparePipeMeta(NumberToStringPipe, 'numberToString', true, [\n            new DecimalPipe(this._locale)\n        ]),\n        this.preparePipeMeta(StringToNumberPipe, 'stringToNumber', true)\n    ];\n\n    unknownPipe(name) {\n        throw Error(`The pipe '${name}' could not be found`);\n    }\n\n    constructor(private compiler: Compiler, private injector: Injector) {\n        this._pipeMeta = new Map();\n        this._pipeData.forEach(v => {\n            this._pipeMeta.set(v.name, v);\n        });\n    }\n\n    meta(name) {\n        const meta = this._pipeMeta.get(name);\n        if (!meta) {\n            this.unknownPipe(name);\n        }\n        return meta;\n    }\n\n    getPipeNameVsIsPureMap() {\n        const _map = new Map();\n        this._pipeMeta.forEach((v, k) => {\n            _map.set(k, v.pure);\n        });\n        return _map;\n    }\n\n    resolveDep(dep) {\n        return this.injector.get(dep.token.identifier.reference);\n    }\n\n    getInstance(name) {\n        const {\n            type: { reference: ref, diDeps: deps }\n        } = this.meta(name);\n        if (!ref) {\n            this.unknownPipe(name);\n        }\n\n        if (!deps.length) {\n            return new ref();\n        } else {\n            const args = [];\n            for (const dep of deps) {\n                args.push(dep);\n            }\n            return new ref(...args);\n        }\n    }\n}\n","import { ApplicationRef, Component, DoCheck, ElementRef, NgZone, ViewEncapsulation, ViewChild, ViewContainerRef, AfterViewInit } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\nimport { setTheme } from 'ngx-bootstrap';\n\nimport { $invokeWatchers, AbstractDialogService, AbstractSpinnerService, getWmProjectProperties, hasCordova, setAppRef, setNgZone, setPipeProvider, App, addClass, removeClass } from '@wm/core';\nimport { OAuthService } from '@wm/oAuth';\nimport { PipeProvider } from '../../services/pipe-provider.service';\n\ninterface SPINNER {\n    show: boolean;\n    messages: Array<string>;\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements DoCheck, AfterViewInit {\n    public startApp = false;\n    public isApplicationType = false;\n\n    @ViewChild('dynamicComponent', {read: ViewContainerRef}) dynamicComponentContainerRef: ViewContainerRef;\n\n    spinner: SPINNER = {show: false, messages: []};\n    constructor(\n        _pipeProvider: PipeProvider,\n        _appRef: ApplicationRef,\n        private elRef: ElementRef,\n        private oAuthService: OAuthService,\n        private dialogService: AbstractDialogService,\n        private spinnerService: AbstractSpinnerService,\n        ngZone: NgZone,\n        private router: Router,\n        private app: App\n    ) {\n        setPipeProvider(_pipeProvider);\n        setNgZone(ngZone);\n        setAppRef(_appRef);\n\n        this.isApplicationType = getWmProjectProperties().type === 'APPLICATION';\n\n        // subscribe to OAuth changes\n        oAuthService.getOAuthProvidersAsObservable().subscribe((providers: any) => {\n            this.providersConfig = providers;\n            if (providers.length) {\n                this.showOAuthDialog();\n            } else {\n                this.closeOAuthDialog();\n            }\n        });\n\n        // Subscribe to the message source to show/hide app spinner\n        this.spinnerService.getMessageSource().asObservable().subscribe((data: any) => {\n            // setTimeout is to avoid 'ExpressionChangedAfterItHasBeenCheckedError'\n            setTimeout(() => {\n                this.spinner.show = data.show;\n                this.spinner.messages = data.messages;\n            });\n        });\n\n        // set theme to bs3 on ngx-bootstrap. This avoids runtime calculation to determine bs theme. Thus resolves performance.\n        setTheme('bs3');\n        if (hasCordova() && !window['wmDeviceReady']) {\n            document.addEventListener('wmDeviceReady' , () => this.startApp = true);\n        } else {\n            this.startApp = true;\n        }\n\n        let spinnerId;\n\n        this.router.events.subscribe(e => {\n            if (e instanceof NavigationStart) {\n                spinnerId = this.spinnerService.show('', 'globalSpinner');\n                const node = document.querySelector('app-page-outlet') as HTMLElement;\n                if (node) {\n                    addClass(node, 'page-load-in-progress');\n                }\n            } else if (e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError) {\n                setTimeout(() => {\n                    this.spinnerService.hide(spinnerId);\n                    const node = document.querySelector('app-page-outlet') as HTMLElement;\n                    if (node) {\n                        removeClass(node, 'page-load-in-progress');\n                    }\n                }, 1000);\n            }\n        });\n    }\n\n    providersConfig;\n    isOAuthDialogOpen = false;\n\n    showOAuthDialog() {\n        if (!this.isOAuthDialogOpen) {\n            this.isOAuthDialogOpen = true;\n            this.dialogService.open('oAuthLoginDialog', this);\n        }\n    }\n\n    closeOAuthDialog() {\n        if (this.isOAuthDialogOpen) {\n            this.isOAuthDialogOpen = false;\n            this.dialogService.close('oAuthLoginDialog', this);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.app.dynamicComponentContainerRef = this.dynamicComponentContainerRef;\n    }\n\n    ngDoCheck() {\n        $invokeWatchers();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { httpService, appManager } from '@wm/variables';\nimport { WmHttpRequest, WmHttpResponse } from '@wm/http';\n\ndeclare const _;\n\n/**\n * This Interceptor intercepts all network calls and if a network call fails\n * due to session timeout, then it calls a function to handle session timeout.\n */\n@Injectable()\nexport class HttpCallInterceptor implements HttpInterceptor {\n\n    wmHttpRequest: any;\n    wmHttpResponse: any;\n    \n    constructor() {\n        this.wmHttpRequest = new WmHttpRequest();\n        this.wmHttpResponse = new WmHttpResponse();\n    }\n\n    createSubject() {\n        return new Subject();\n    }\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let modifiedReq;\n        let modifiedResp;\n        if (appManager && appManager.appOnBeforeServiceCall) {\n            // Convert the angular HttpRequest to wm HttpRequest\n            const req = this.wmHttpRequest.angularToWmRequest(request);\n            // trigger the common onBeforeServiceCall handler present in app.js\n            modifiedReq =  appManager.appOnBeforeServiceCall(req);\n            if (modifiedReq) {\n                // Convert the wm HttpRequest to angular HttpRequest\n                modifiedReq = this.wmHttpRequest.wmToAngularRequest(modifiedReq);\n                request = modifiedReq;\n            }\n        }\n        return next.handle(request).pipe(\n            tap((response: any) => {\n                    if (response && response.type === 4 && appManager &&  appManager.appOnServiceSuccess) {\n                        // Convert the angular HttpResponse to wm HttpResponse\n                        const resp = this.wmHttpResponse.angularToWmResponse(response);\n                        // trigger the common success handler present in app.js\n                        modifiedResp = appManager.appOnServiceSuccess(resp.body, resp);\n                        if (modifiedResp) {\n                            // Convert the wm HttpResponse to angular HttpResponse\n                            modifiedResp = this.wmHttpResponse.wmToAngularResponse(modifiedResp);\n                            _.extend(response, modifiedResp);\n                        }\n                    }\n                },\n                error => {\n                    error._401Subscriber = this.createSubject();\n                    if (httpService.isPlatformSessionTimeout(error)) {\n                        httpService.handleSessionTimeout(request, error._401Subscriber);\n                    }\n                    if (appManager && appManager.appOnServiceError) {\n                        // Convert the angular HttpResponse to wm HttpResponse\n                        const err = this.wmHttpResponse.angularToWmResponse(error);\n                        // trigger the common error handler present in app.js\n                        modifiedResp = appManager.appOnServiceError(err.message, err);\n                        if (modifiedResp) {\n                            // Convert the wm HttpResponse to angular HttpResponse\n                            modifiedResp = this.wmHttpResponse.wmToAngularResponse(modifiedResp);\n                            _.extend(error, modifiedResp);\n                        }\n                    }\n                }\n            )\n        );\n    }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\n\nimport { PrefabDirective } from '@wm/components';\n\nimport { PrefabManagerService } from '../services/prefab-manager.service';\n\nconst PREFAB = 'PREFAB';\n\n@Component({\n    selector: 'wm-prefab-preview',\n    template: `\n        <div class=\"prefab-preview row\">\n            <section wmPrefab name=\"prefab-preview\" prefabname=\"__self__\"></section>\n        </div>\n    `\n})\nexport class PrefabPreviewComponent implements AfterViewInit {\n    private config: any;\n    private previewMode: boolean;\n\n    @ViewChild(PrefabDirective) prefabInstance;\n\n    constructor(private prefabManager: PrefabManagerService) {\n\n        window.addEventListener('message', e => {\n            const context = e.data && e.data.context;\n\n            if (context !== PREFAB) {\n                return;\n            }\n\n            const action = e.data.action;\n            const payload = e.data.payload;\n\n            if (action === 'init') {\n                this.init();\n            } else if (action === 'set-property') {\n                this.setProperty(payload);\n            } else if (action === 'get-outbound-properties') {\n                this.getOutboundProps();\n            } else if (action === 'invoke-script') {\n                this.invokeScript(payload);\n            }\n        });\n    }\n\n    postMessage(action, payload?: any) {\n        const data = {\n            context: PREFAB,\n            action,\n            payload\n        };\n        window.top.postMessage(data, '*');\n    }\n\n    setupEventListeners() {\n        this.prefabInstance.invokeEventCallback = (eventName, locals = {}) => {\n            this.postMessage('event-log', { name: eventName, data: locals });\n        };\n    }\n\n    init() {\n        this.previewMode = true;\n\n        this.prefabInstance.readyState.subscribe(\n            () => {},\n            () => {},\n            () => {\n                this.prefabManager.getConfig('__self__')\n                    .then(config => {\n                        this.config = config;\n                        this.postMessage('config', config);\n\n                        this.setupEventListeners();\n                    });\n            }\n        );\n    }\n\n    setProperty(payload: any) {\n        this.prefabInstance.widget[payload.name] = payload.value;\n    }\n\n    isOutBoundProp(info) {\n        return info.bindable === 'out-bound' || info.bindable === 'in-out-bound';\n    }\n\n    getOutboundProps() {\n        const payload = {};\n        for (const [name, info] of Object.entries(this.config.properties || {})) {\n            if (this.isOutBoundProp(info)) {\n                payload[name] = this.prefabInstance.widget[name];\n            }\n        }\n\n        this.postMessage('outbound-properties', payload);\n    }\n\n    invokeScript(payload: any) {\n        const script = `\\n return ${payload.script};`;\n\n        const fn = new Function('Prefab', script);\n\n        const retVal = fn(this.prefabInstance);\n\n        this.postMessage('method-output', { methodName: payload.methodName, output: retVal });\n    }\n\n    ngAfterViewInit() {\n        this.setupEventListeners();\n        this.postMessage('init');\n    }\n}\n\n","import {\n    Compiler,\n    Component,\n    CUSTOM_ELEMENTS_SCHEMA,\n    Injectable,\n    NgModule,\n    NO_ERRORS_SCHEMA,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { App, extendProto, isDefined } from '@wm/core';\nimport { transpile } from '@wm/transpiler';\nimport { initComponentsBuildTask } from '@wm/build-task';\n\nimport { AppManagerService } from './app.manager.service';\nimport { RuntimeBaseModule } from '../runtime-base.module';\n\ninitComponentsBuildTask();\n\nconst componentFactoryRefCache = new Map<string, any>();\n\nconst getDynamicModule = (componentRef: any) => {\n    @NgModule({\n        declarations: [componentRef],\n        imports: [\n            RuntimeBaseModule\n        ],\n        schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n    })\n    class DynamicModule {}\n\n    return DynamicModule;\n};\n\nconst getDynamicComponent = (\n    selector,\n    template: string,\n    css: string = '') => {\n\n    const componentDef = {\n        template,\n        styles: [css],\n        encapsulation: ViewEncapsulation.None\n    };\n\n    @Component({\n        ...componentDef,\n        selector\n    })\n    class DynamicComponent {\n    }\n\n    return DynamicComponent;\n};\n\n@Injectable()\nexport class DynamicComponentRefProviderService {\n    private counter = 1;\n\n    constructor(\n        private app: App,\n        private appManager: AppManagerService,\n        private compiler: Compiler\n    ) {}\n\n    public async getComponentFactoryRef(selector: string, markup: string, options: any = {}): Promise<any> {\n        // check in the cache.\n        let componentFactoryRef = componentFactoryRefCache.get(selector);\n\n        markup = options.transpile ? transpile(markup) : markup;\n        if (!componentFactoryRef || options.noCache) {\n            const componentDef = getDynamicComponent(selector, markup, options.styles);\n            const moduleDef = getDynamicModule(componentDef);\n\n            componentFactoryRef = this.compiler\n                .compileModuleAndAllComponentsSync(moduleDef)\n                .componentFactories\n                .filter(factory => factory.componentType === componentDef)[0];\n\n            componentFactoryRefCache.set(selector, componentFactoryRef);\n        }\n        return componentFactoryRef;\n    }\n\n    /**\n     * Creates the component dynamically and add it to the DOM\n     * @param target: HTML element where we need to append the created component\n     * @param markup: Template of the component\n     * @param context: Scope of the component\n     * @param options: We have options like\n                       selector: selector of the component\n                       transpile: flag for transpiling HTML. By default it is true\n                       nocache: flag for render it from cache or not. By default it is true\n     */\n    public async addComponent(target: HTMLElement, markup: string, context = {}, options: any = {}) {\n        options.transpile = isDefined(options.transpile) ? options.transpile : true;\n        options.noCache = isDefined(options.noCache) ? options.noCache : true;\n        options.selector = isDefined(options.selector) ? options.selector : 'wm-dynamic-component-'+ this.counter++;\n        const componentFactoryRef = await this.getComponentFactoryRef(options.selector, markup, options);\n        const component = this.app.dynamicComponentContainerRef.createComponent(componentFactoryRef, 0);\n        extendProto(component.instance, context);\n        target.appendChild(component.location.nativeElement);\n    }\n}\n","import {ActivatedRouteSnapshot, CanDeactivate, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable, Injector} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\n\n\nexport interface CanComponentDeactivate  {\n    canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class CanDeactivatePageGuard implements CanDeactivate<CanComponentDeactivate> {\n    canDeactivate(component: CanComponentDeactivate, route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n","import {APP_INITIALIZER, LOCALE_ID, ModuleWithProviders, NgModule} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule, DatePipe, DecimalPipe } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { BsDropdownModule, CarouselModule, ModalModule, PopoverModule, TooltipModule } from 'ngx-bootstrap';\n\nimport {\n    _WM_APP_PROJECT,\n    $parseExpr,\n    AbstractI18nService,\n    AbstractNavigationService,\n    AbstractSpinnerService,\n    AbstractToasterService,\n    App,\n    AppDefaults,\n    CoreModule,\n    DynamicComponentRefProvider\n} from '@wm/core';\nimport { WmComponentsModule } from '@wm/components';\nimport { MobileRuntimeModule } from '@wm/mobile/runtime';\nimport { SecurityModule } from '@wm/security';\nimport { HttpServiceModule } from '@wm/http';\nimport { VariablesModule } from '@wm/variables';\nimport { OAuthModule } from '@wm/oAuth';\n\nimport { AccessrolesDirective } from './directives/accessroles.directive';\nimport { PartialContainerDirective } from './directives/partial-container.directive';\nimport { AppSpinnerComponent } from './components/app-spinner.component';\nimport { CustomToasterComponent } from './components/custom-toaster.component';\nimport { EmptyPageComponent } from './components/empty-component/empty-page.component';\nimport { PrefabDirective } from './directives/prefab.directive';\nimport { AppRef } from './services/app.service';\nimport { ToasterServiceImpl } from './services/toaster.service';\nimport { I18nServiceImpl } from './services/i18n.service';\nimport { SpinnerServiceImpl } from './services/spinner.service';\nimport { NavigationServiceImpl } from './services/navigation.service';\nimport { AppDefaultsService } from './services/app-defaults.service';\nimport { AppManagerService } from './services/app.manager.service';\nimport { PrefabManagerService } from './services/prefab-manager.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { PageNotFoundGaurd } from './guards/page-not-found.gaurd';\nimport { AppJSResolve } from './resolves/app-js.resolve';\nimport { I18nResolve } from './resolves/i18n.resolve';\nimport { AppComponent } from './components/app-component/app.component';\nimport { HttpCallInterceptor } from './services/http-interceptor.services';\nimport { PrefabPreviewComponent } from './components/prefab-preview.component';\nimport { DynamicComponentRefProviderService } from './services/dynamic-component-ref-provider.service';\nimport {CanDeactivatePageGuard} from './guards/can-deactivate-page.guard';\n\nexport function InitializeApp(I18nService) {\n    return () => {\n        _WM_APP_PROJECT.id = location.href.split('/')[3];\n        _WM_APP_PROJECT.cdnUrl = document.querySelector('[name=\"cdnUrl\"]') && document.querySelector('[name=\"cdnUrl\"]').getAttribute('content');\n        _WM_APP_PROJECT.ngDest = 'ng-bundle/';\n        return I18nService.loadDefaultLocale();\n    };\n}\n\nexport function setAngularLocale(I18nService) {\n    return I18nService.isAngularLocaleLoaded() ? I18nService.getSelectedLocale() : I18nService.getDefaultSupportedLocale();\n}\n\nconst definitions = [\n    AccessrolesDirective,\n    PartialContainerDirective,\n    AppSpinnerComponent,\n    CustomToasterComponent,\n    PrefabDirective,\n    AppComponent,\n    PrefabPreviewComponent,\n    EmptyPageComponent\n];\n\nexport const carouselModule = CarouselModule.forRoot();\nexport const bsDropDownModule = BsDropdownModule.forRoot();\nexport const popoverModule = PopoverModule.forRoot();\nexport const tooltipModule = TooltipModule.forRoot();\n\n// setting parseExpr as exprEvaluator for swipeAnimation\n($.fn as any).swipeAnimation.expressionEvaluator = $parseExpr;\n\n@NgModule({\n    declarations: definitions,\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n\n        carouselModule,\n        bsDropDownModule,\n        popoverModule,\n        tooltipModule,\n\n        ModalModule,\n        WmComponentsModule,\n        MobileRuntimeModule,\n        CoreModule,\n        SecurityModule,\n        OAuthModule,\n        VariablesModule,\n        HttpServiceModule,\n    ],\n    exports: [\n        definitions,\n\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        ModalModule,\n        CarouselModule,\n        BsDropdownModule,\n        PopoverModule,\n        TooltipModule,\n\n        WmComponentsModule,\n        MobileRuntimeModule,\n        CoreModule,\n        SecurityModule,\n        OAuthModule,\n        VariablesModule,\n        HttpServiceModule\n    ],\n    entryComponents: [CustomToasterComponent]\n})\nexport class RuntimeBaseModule {\n\n    // this polyfill is to add support for CustomEvent in IE11\n    static addCustomEventPolyfill() {\n            if ( typeof window['CustomEvent'] === 'function' ) {\n                return false;\n            }\n\n            const CustomEvent = (event, params) => {\n                params = params || { bubbles: false, cancelable: false, detail: null };\n                const evt = document.createEvent( 'CustomEvent' );\n                evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n                return evt;\n            };\n\n            CustomEvent.prototype = window['Event'].prototype;\n\n            window['CustomEvent'] = CustomEvent;\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: RuntimeBaseModule,\n            providers: [\n                {provide: App, useClass: AppRef},\n                {provide: AbstractToasterService, useClass: ToasterServiceImpl},\n                {provide: AbstractI18nService, useClass: I18nServiceImpl},\n                {provide: AbstractSpinnerService, useClass: SpinnerServiceImpl},\n                {provide: AbstractNavigationService, useClass: NavigationServiceImpl},\n                {provide: AppDefaults, useClass: AppDefaultsService},\n                {provide: DynamicComponentRefProvider, useClass: DynamicComponentRefProviderService},\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: InitializeApp,\n                    deps: [AbstractI18nService],\n                    multi: true\n                },\n                {\n                    provide: LOCALE_ID,\n                    useFactory: setAngularLocale,\n                    deps: [AbstractI18nService]\n                },\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: HttpCallInterceptor,\n                    multi: true\n                },\n                DecimalPipe,\n                DatePipe,\n                AppManagerService,\n                PrefabManagerService,\n                AuthGuard,\n                RoleGuard,\n                PageNotFoundGaurd,\n                CanDeactivatePageGuard,\n                AppJSResolve,\n                I18nResolve\n            ]\n        };\n    }\n\n    constructor() {\n        RuntimeBaseModule.addCustomEventPolyfill();\n    }\n}\n\nexport const WM_MODULES_FOR_ROOT = [\n    WmComponentsModule.forRoot(),\n    MobileRuntimeModule.forRoot(),\n    ModalModule.forRoot(),\n    CoreModule.forRoot(),\n    SecurityModule.forRoot(),\n    OAuthModule.forRoot(),\n    VariablesModule.forRoot(),\n    HttpServiceModule.forRoot(),\n    RuntimeBaseModule.forRoot()\n];\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { AppManagerService } from '../services/app.manager.service';\nimport { AppVariablesProvider } from '../types/types';\n\nlet appVariablesLoaded = false;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppVariablesResolve implements Resolve<any> {\n\n    constructor(\n        private appManager: AppManagerService,\n        private appVariablesProvider: AppVariablesProvider\n    ) {}\n\n    resolve() {\n        // execute app.js\n        if (appVariablesLoaded) {\n            return true;\n        }\n\n        return this.appVariablesProvider.getAppVariables()\n            .then((variables) => this.appManager.loadAppVariables(variables))\n            .then(() => appVariablesLoaded = true);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { AppManagerService } from '../services/app.manager.service';\n\nlet metadataResolved = false;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MetadataResolve implements Resolve<any> {\n    constructor(private appManager: AppManagerService) {}\n\n    resolve() {\n        return metadataResolved || this.appManager.loadMetadata().then(() => metadataResolved = true);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { getWmProjectProperties } from '@wm/core';\n\nimport { AppManagerService } from '../services/app.manager.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SecurityConfigResolve implements Resolve<any> {\n    loaded: boolean;\n\n    constructor(private appManager: AppManagerService) {\n\n        // if the project type is PREFAB, setting this flag will not trigger security/info call\n        this.loaded = this.appManager.isPrefabType() || this.appManager.isTemplateBundleType() || !getWmProjectProperties().securityEnabled;\n    }\n\n    resolve() {\n        return this.loaded || this.appManager.loadSecurityConfig().then(() => {\n            this.loaded = true;\n        });\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AppSpinnerComponent as Éµd} from './components/app-spinner.component';\nexport {CustomToasterComponent as Éµe} from './components/custom-toaster.component';\nexport {AccessrolesDirective as Éµb} from './directives/accessroles.directive';\nexport {PartialContainerDirective as Éµc} from './directives/partial-container.directive';\nexport {PrefabDirective as Éµf} from './directives/prefab.directive';\nexport {AppDefaultsService as Éµm} from './services/app-defaults.service';\nexport {AppRef as Éµh} from './services/app.service';\nexport {DynamicComponentRefProviderService as Éµn} from './services/dynamic-component-ref-provider.service';\nexport {HttpCallInterceptor as Éµo} from './services/http-interceptor.services';\nexport {I18nServiceImpl as Éµj} from './services/i18n.service';\nexport {NavigationServiceImpl as Éµl} from './services/navigation.service';\nexport {PipeProvider as Éµg} from './services/pipe-provider.service';\nexport {SpinnerServiceImpl as Éµk} from './services/spinner.service';\nexport {ToasterServiceImpl as Éµi} from './services/toaster.service';\nexport {FragmentMonitor as Éµa} from './util/fragment-monitor';"],"names":["PrefabDirective","noop","httpService","appManager"],"mappings":"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"}
