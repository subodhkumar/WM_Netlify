import { AfterViewInit, Injector, OnDestroy } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subject } from 'rxjs';
import { AbstractI18nService, AbstractNavigationService, App } from '@wm/core';
import { FragmentMonitor } from '../util/fragment-monitor';
import { AppManagerService } from '../services/app.manager.service';
export declare const commonPartialWidgets: {};
export declare abstract class BasePartialComponent extends FragmentMonitor implements AfterViewInit, OnDestroy {
    Widgets: any;
    Variables: any;
    Actions: any;
    App: App;
    injector: Injector;
    partialName: string;
    activePageName: string;
    route: ActivatedRoute;
    appManager: AppManagerService;
    navigationService: AbstractNavigationService;
    router: Router;
    pageParams: any;
    containerWidget: any;
    i18nService: AbstractI18nService;
    appLocale: any;
    destroy$: Subject<{}>;
    viewInit$: Subject<{}>;
    abstract evalUserScript(prefabContext: any, appContext: any, utils: any): any;
    abstract getVariables(): any;
    getContainerWidgetInjector(): any;
    init(): void;
    registerWidgets(): void;
    registerDestroyListener(fn: Function): void;
    initUserScript(): void;
    initVariables(): void;
    registerPageParams(): void;
    defineI18nProps(): void;
    invokeOnReady(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onReady(): void;
}
