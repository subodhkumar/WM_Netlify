const $RAF = window.requestAnimationFrame;
const $RAFQueue = [];
const invokeLater = fn => {
    if (!$RAFQueue.length) {
        $RAF(() => {
            $RAFQueue.forEach(f => f());
            $RAFQueue.length = 0;
        });
    }
    $RAFQueue.push(fn);
};
const ɵ0 = invokeLater;
export const appendNode = (node, parent, sync) => {
    const task = () => parent.appendChild(node);
    sync ? task() : invokeLater(task);
};
export const insertBefore = (node, ref, sync) => {
    const task = () => ref.parentNode.insertBefore(node, ref);
    sync ? task() : invokeLater(task);
};
export const insertAfter = (node, ref, sync) => {
    const task = () => ref.parentNode.insertBefore(node, ref.nextSibling);
    sync ? task() : invokeLater(task);
};
export const removeNode = (node, sync) => {
    const task = () => node.remove();
    sync ? task() : invokeLater(task);
};
export const removeClass = (node, ov, sync) => {
    ov = ov || '';
    const task = c => node.classList.remove(c);
    ov.split(' ').forEach(c => {
        if (c.length) {
            sync ? task(c) : invokeLater(() => task(c));
        }
    });
};
export const addClass = (node, nv, sync) => {
    nv = nv || '';
    const task = c => node.classList.add(c);
    nv.split(' ').forEach(c => {
        if (c.length) {
            sync ? task(c) : invokeLater(() => task(c));
        }
    });
};
export const switchClass = (node, toAdd = '', toRemove = '', sync) => {
    removeClass(node, toRemove, sync);
    addClass(node, toAdd, sync);
};
export const toggleClass = (node, cls, condition, sync) => {
    if (condition) {
        addClass(node, cls, sync);
    }
    else {
        removeClass(node, cls, sync);
    }
};
export const setCSS = (node, cssName, val, sync) => {
    const task = () => node.style[cssName] = val;
    sync ? task() : invokeLater(task);
};
export const setCSSFromObj = (node, cssObj, sync) => {
    const keys = Object.keys(cssObj || {});
    keys.forEach(key => setCSS(node, key, cssObj[key], sync));
};
export const setProperty = (node, propName, val, sync) => {
    const task = () => node[propName] = val;
    sync ? task() : invokeLater(task);
};
export const setAttr = (node, attrName, val, sync) => {
    const task = () => node instanceof Element && node.setAttribute(attrName, val);
    sync ? task() : invokeLater(task);
};
export const setHtml = (node, html, sync) => {
    const task = () => node.innerHTML = html;
    sync ? task() : invokeLater(task);
};
export const removeAttr = (node, attrName, sync) => {
    const task = () => node.removeAttribute(attrName);
    sync ? task() : invokeLater(task);
};
export const createElement = (nodeType, attrs, sync) => {
    const node = document.createElement(nodeType);
    if (attrs) {
        Object.keys(attrs).forEach(attrName => {
            setAttr(node, attrName, attrs[attrName], sync);
        });
    }
    return node;
};
// for width and height if a numeric value is specified return in px
// else return the same value
export const toDimension = (v) => {
    // @ts-ignore
    if (v == +v) {
        return `${v}px`;
    }
    return v;
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,